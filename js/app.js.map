{"version":3,"sources":["node_modules/browser-pack/_prelude.js","/Users/koichi/.opam/4.04.0/lib/js_of_ocaml-compiler/stdlib.js","/Users/koichi/.opam/4.04.0/lib/js_of_ocaml-compiler/mlString.js","/Users/koichi/.opam/4.04.0/lib/js_of_ocaml-compiler/bigarray.js","/Users/koichi/.opam/4.04.0/lib/js_of_ocaml-compiler/jslib_js_of_ocaml.js","/Users/koichi/.opam/4.04.0/lib/js_of_ocaml-compiler/ieee_754.js","/Users/koichi/.opam/4.04.0/lib/js_of_ocaml-compiler/int64.js","/Users/koichi/.opam/4.04.0/lib/js_of_ocaml-compiler/weak.js","/Users/koichi/.opam/4.04.0/lib/js_of_ocaml-compiler/io.js","/Users/koichi/.opam/4.04.0/lib/js_of_ocaml-compiler/fs.js","/Users/koichi/.opam/4.04.0/lib/js_of_ocaml-compiler/fs_fake.js","/Users/koichi/.opam/4.04.0/lib/js_of_ocaml-compiler/fs_node.js","/Users/koichi/.opam/4.04.0/lib/js_of_ocaml-compiler/jslib.js","/Users/koichi/.opam/4.04.0/lib/ocaml/camlinternalFormatBasics.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/pervasives.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/printexc.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/list.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/char.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/bytes.ml","/Users/koichi/.opam/4.04.0/lib/sexplib/pre_sexp.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/string.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/obj.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/array.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/map.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/camlinternalLazy.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/lazy.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/buffer.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/sys.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/camlinternalFormat.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/printf.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/hashtbl.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/random.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/format.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/callback.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/camlinternalOO.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/queue.ml","/Users/koichi/.opam/4.04.0/lib/sexplib/std.ml","/Users/koichi/.opam/4.04.0/lib/sexplib/0/sexp_conv_error.ml","/Users/koichi/.opam/4.04.0/lib/js_of_ocaml-compiler/md5.js","/Users/koichi/.opam/4.04.0/lib/ocaml/digest.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/scanf.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/set.ml","/Users/koichi/project/todomvc-caelm/_build/src/app.ml","/Users/koichi/.opam/4.04.0/lib/ocaml/std_exit.ml","node_modules/constants-browserify/constants.json","node_modules/create-react-class/factory.js","node_modules/fbjs/lib/EventListener.js","node_modules/fbjs/lib/ExecutionEnvironment.js","node_modules/fbjs/lib/camelize.js","node_modules/fbjs/lib/camelizeStyleName.js","node_modules/fbjs/lib/containsNode.js","node_modules/fbjs/lib/createArrayFromMixed.js","node_modules/fbjs/lib/createNodesFromMarkup.js","node_modules/fbjs/lib/emptyFunction.js","node_modules/fbjs/lib/emptyObject.js","node_modules/fbjs/lib/focusNode.js","node_modules/fbjs/lib/getActiveElement.js","node_modules/fbjs/lib/getMarkupWrap.js","node_modules/fbjs/lib/getUnboundedScrollPosition.js","node_modules/fbjs/lib/hyphenate.js","node_modules/fbjs/lib/hyphenateStyleName.js","node_modules/fbjs/lib/invariant.js","node_modules/fbjs/lib/isNode.js","node_modules/fbjs/lib/isTextNode.js","node_modules/fbjs/lib/memoizeStringOnly.js","node_modules/fbjs/lib/performance.js","node_modules/fbjs/lib/performanceNow.js","node_modules/fbjs/lib/shallowEqual.js","node_modules/fbjs/lib/warning.js","node_modules/object-assign/index.js","node_modules/process/browser.js","node_modules/prop-types/checkPropTypes.js","node_modules/prop-types/factory.js","node_modules/prop-types/factoryWithTypeCheckers.js","node_modules/prop-types/lib/ReactPropTypesSecret.js","node_modules/react-dom/lib/ARIADOMPropertyConfig.js","node_modules/react-dom/lib/AutoFocusUtils.js","node_modules/react-dom/lib/BeforeInputEventPlugin.js","node_modules/react-dom/lib/CSSProperty.js","node_modules/react-dom/lib/CSSPropertyOperations.js","node_modules/react-dom/lib/CallbackQueue.js","node_modules/react-dom/lib/ChangeEventPlugin.js","node_modules/react-dom/lib/DOMChildrenOperations.js","node_modules/react-dom/lib/DOMLazyTree.js","node_modules/react-dom/lib/DOMNamespaces.js","node_modules/react-dom/lib/DOMProperty.js","node_modules/react-dom/lib/DOMPropertyOperations.js","node_modules/react-dom/lib/Danger.js","node_modules/react-dom/lib/DefaultEventPluginOrder.js","node_modules/react-dom/lib/EnterLeaveEventPlugin.js","node_modules/react-dom/lib/EventPluginHub.js","node_modules/react-dom/lib/EventPluginRegistry.js","node_modules/react-dom/lib/EventPluginUtils.js","node_modules/react-dom/lib/EventPropagators.js","node_modules/react-dom/lib/FallbackCompositionState.js","node_modules/react-dom/lib/HTMLDOMPropertyConfig.js","node_modules/react-dom/lib/KeyEscapeUtils.js","node_modules/react-dom/lib/LinkedValueUtils.js","node_modules/react-dom/lib/PooledClass.js","node_modules/react-dom/lib/ReactBrowserEventEmitter.js","node_modules/react-dom/lib/ReactChildReconciler.js","node_modules/react-dom/lib/ReactComponentBrowserEnvironment.js","node_modules/react-dom/lib/ReactComponentEnvironment.js","node_modules/react-dom/lib/ReactCompositeComponent.js","node_modules/react-dom/lib/ReactDOM.js","node_modules/react-dom/lib/ReactDOMComponent.js","node_modules/react-dom/lib/ReactDOMComponentFlags.js","node_modules/react-dom/lib/ReactDOMComponentTree.js","node_modules/react-dom/lib/ReactDOMContainerInfo.js","node_modules/react-dom/lib/ReactDOMEmptyComponent.js","node_modules/react-dom/lib/ReactDOMFeatureFlags.js","node_modules/react-dom/lib/ReactDOMIDOperations.js","node_modules/react-dom/lib/ReactDOMInput.js","node_modules/react-dom/lib/ReactDOMInvalidARIAHook.js","node_modules/react-dom/lib/ReactDOMNullInputValuePropHook.js","node_modules/react-dom/lib/ReactDOMOption.js","node_modules/react-dom/lib/ReactDOMSelect.js","node_modules/react-dom/lib/ReactDOMSelection.js","node_modules/react-dom/lib/ReactDOMTextComponent.js","node_modules/react-dom/lib/ReactDOMTextarea.js","node_modules/react-dom/lib/ReactDOMTreeTraversal.js","node_modules/react-dom/lib/ReactDOMUnknownPropertyHook.js","node_modules/react-dom/lib/ReactDebugTool.js","node_modules/react-dom/lib/ReactDefaultBatchingStrategy.js","node_modules/react-dom/lib/ReactDefaultInjection.js","node_modules/react-dom/lib/ReactElementSymbol.js","node_modules/react-dom/lib/ReactEmptyComponent.js","node_modules/react-dom/lib/ReactErrorUtils.js","node_modules/react-dom/lib/ReactEventEmitterMixin.js","node_modules/react-dom/lib/ReactEventListener.js","node_modules/react-dom/lib/ReactFeatureFlags.js","node_modules/react-dom/lib/ReactHostComponent.js","node_modules/react-dom/lib/ReactHostOperationHistoryHook.js","node_modules/react-dom/lib/ReactInjection.js","node_modules/react-dom/lib/ReactInputSelection.js","node_modules/react-dom/lib/ReactInstanceMap.js","node_modules/react-dom/lib/ReactInstrumentation.js","node_modules/react-dom/lib/ReactInvalidSetStateWarningHook.js","node_modules/react-dom/lib/ReactMarkupChecksum.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/ReactMultiChild.js","node_modules/react-dom/lib/ReactNodeTypes.js","node_modules/react-dom/lib/ReactOwner.js","node_modules/react-dom/lib/ReactPropTypeLocationNames.js","node_modules/react-dom/lib/ReactPropTypesSecret.js","node_modules/react-dom/lib/ReactReconcileTransaction.js","node_modules/react-dom/lib/ReactReconciler.js","node_modules/react-dom/lib/ReactRef.js","node_modules/react-dom/lib/ReactServerRenderingTransaction.js","node_modules/react-dom/lib/ReactServerUpdateQueue.js","node_modules/react-dom/lib/ReactUpdateQueue.js","node_modules/react-dom/lib/ReactUpdates.js","node_modules/react-dom/lib/ReactVersion.js","node_modules/react-dom/lib/SVGDOMPropertyConfig.js","node_modules/react-dom/lib/SelectEventPlugin.js","node_modules/react-dom/lib/SimpleEventPlugin.js","node_modules/react-dom/lib/SyntheticAnimationEvent.js","node_modules/react-dom/lib/SyntheticClipboardEvent.js","node_modules/react-dom/lib/SyntheticCompositionEvent.js","node_modules/react-dom/lib/SyntheticDragEvent.js","node_modules/react-dom/lib/SyntheticEvent.js","node_modules/react-dom/lib/SyntheticFocusEvent.js","node_modules/react-dom/lib/SyntheticInputEvent.js","node_modules/react-dom/lib/SyntheticKeyboardEvent.js","node_modules/react-dom/lib/SyntheticMouseEvent.js","node_modules/react-dom/lib/SyntheticTouchEvent.js","node_modules/react-dom/lib/SyntheticTransitionEvent.js","node_modules/react-dom/lib/SyntheticUIEvent.js","node_modules/react-dom/lib/SyntheticWheelEvent.js","node_modules/react-dom/lib/Transaction.js","node_modules/react-dom/lib/ViewportMetrics.js","node_modules/react-dom/lib/accumulateInto.js","node_modules/react-dom/lib/adler32.js","node_modules/react-dom/lib/checkReactTypeSpec.js","node_modules/react-dom/lib/createMicrosoftUnsafeLocalFunction.js","node_modules/react-dom/lib/dangerousStyleValue.js","node_modules/react-dom/lib/escapeTextContentForBrowser.js","node_modules/react-dom/lib/findDOMNode.js","node_modules/react-dom/lib/flattenChildren.js","node_modules/react-dom/lib/forEachAccumulated.js","node_modules/react-dom/lib/getEventCharCode.js","node_modules/react-dom/lib/getEventKey.js","node_modules/react-dom/lib/getEventModifierState.js","node_modules/react-dom/lib/getEventTarget.js","node_modules/react-dom/lib/getHostComponentFromComposite.js","node_modules/react-dom/lib/getIteratorFn.js","node_modules/react-dom/lib/getNodeForCharacterOffset.js","node_modules/react-dom/lib/getTextContentAccessor.js","node_modules/react-dom/lib/getVendorPrefixedEventName.js","node_modules/react-dom/lib/inputValueTracking.js","node_modules/react-dom/lib/instantiateReactComponent.js","node_modules/react-dom/lib/isEventSupported.js","node_modules/react-dom/lib/isTextInputElement.js","node_modules/react-dom/lib/quoteAttributeValueForBrowser.js","node_modules/react-dom/lib/reactProdInvariant.js","node_modules/react-dom/lib/renderSubtreeIntoContainer.js","node_modules/react-dom/lib/setInnerHTML.js","node_modules/react-dom/lib/setTextContent.js","node_modules/react-dom/lib/shouldUpdateReactComponent.js","node_modules/react-dom/lib/traverseAllChildren.js","node_modules/react-dom/lib/validateDOMNesting.js","node_modules/react/lib/React.js","node_modules/react/lib/ReactBaseClasses.js","node_modules/react/lib/ReactChildren.js","node_modules/react/lib/ReactComponentTreeHook.js","node_modules/react/lib/ReactCurrentOwner.js","node_modules/react/lib/ReactDOMFactories.js","node_modules/react/lib/ReactElement.js","node_modules/react/lib/ReactElementValidator.js","node_modules/react/lib/ReactNoopUpdateQueue.js","node_modules/react/lib/ReactPropTypes.js","node_modules/react/lib/canDefineProperty.js","node_modules/react/lib/checkReactTypeSpec.js","node_modules/react/lib/createClass.js","node_modules/react/lib/getNextDebugID.js","node_modules/react/lib/lowPriorityWarning.js","node_modules/react/lib/onlyChild.js","node_modules/react/lib/traverseAllChildren.js","react-dom","react"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","1","module","caml_array_blit","a1","i1","a2","i2","len","j","caml_array_sub","Array","caml_raise_with_arg","tag","arg","caml_str_repeat","repeat","slice","raw_array_sub","b","caml_subarray_to_string","String","fromCharCode","apply","Math","min","caml_convert_string_to_bytes","c","caml_is_ascii","charCodeAt","test","caml_utf16_of_utf8","c1","c2","v","substr","caml_to_js_string","MlString","contents","caml_new_string","caml_raise_with_string","msg","caml_invalid_argument","caml_global_data","Invalid_argument","caml_ba_get_size","dims","n_dims","size","caml_ba_init_views","caml_ba_views","g","joo_global_object","caml_js_from_array","caml_array_bound_error","caml_ba_create_from","data","data2","data_type","kind","layout","set_std_raw","off","set_int64_raw","set_complex_raw","nth_dim","offset","index","ofs","dim0","get","h","get1","set","set1","changed_dim","mul","new_data","subarray","new_data2","new_dims","vind","num_inds","sub_dims","from","num_dims","vdim","new_dim","num_elts","total","x","y","NaN","caml_ba_create","dims_ml","view","caml_convert_string_to_array","Uint8Array","caml_blit_string","s1","s2","caml_string_bound_error","caml_bytes_unsafe_get","caml_bytes_get","caml_bytes_unsafe_set","caml_bytes_set","raw_array_append_one","caml_call_gen","args","fun","argsLen","d","caml_check_bound","array","caml_classify_float","isFinite","abs","isNaN","caml_int64_compare","x3","y3","caml_int_compare","caml_string_compare","caml_compare_val","stack","ta","tb","push","compare","pop","caml_compare","caml_convert_raw_backtrace","caml_cosh_float","exp","caml_create_bytes","caml_create_string","caml_weak_create","caml_ephe_get_data","undefined","caml_ephe_data_offset","caml_ephe_set_data","caml_weak_set","caml_ephe_key_offset","caml_ephe_set_key","caml_equal","caml_final_register","caml_failwith","Failure","caml_bytes_of_string","caml_float_of_string","res","replace","m","exec","m3","mantissa","parseInt","exponent","pow","Infinity","caml_parse_format","fmt","charAt","width","prec","toLowerCase","caml_finish_formatting","rawbuffer","uppercase","toUpperCase","signedconv","sign","signstyle","alternate","base","buffer","justify","filler","caml_format_float","conv","toExponential","toFixed","indexOf","p","caml_format_int","toString","caml_fresh_oo_id","caml_oo_last_id","jsoo_floor_log2","log2_ok","floor","log2","caml_frexp_float","neg","caml_get_exception_raw_backtrace","caml_get_public_method","obj","cacheid","meths","caml_method_cache","mi","li","hi","caml_greaterequal","caml_greaterthan","caml_hash_mix_int","caml_mul","caml_hash_mix_int64","lo","caml_int64_bits_of_float","k","r3","r2","caml_hash_mix_float","v0","caml_hash_mix_string_arr","w","caml_hash_mix_string_str","caml_hash_mix_string","caml_hash_mix_final","caml_hash","count","limit","seed","queue","rd","wr","sz","num","HASH_QUEUE_SIZE","caml_utf8_of_utf16","caml_js_to_string","caml_hexstring_of_float","style","exp_sign","sign_str","cst","round","x_str","idx","caml_int64_float_of_bits","caml_int64_is_zero","caml_int64_of_int32","caml_obj_dup","caml_int64_sub","z1","z2","caml_int64_ucompare","caml_int64_lsl1","caml_int64_lsr1","caml_int64_udivmod","modulus","divisor","quotient","caml_int64_to_int32","caml_int64_is_negative","caml_int64_neg","y1","y2","caml_int64_format","wbase","caml_string_unsafe_get","caml_ml_string_length","caml_parse_sign_and_base","caml_parse_digit","caml_int_of_string","caml_js_fun_call","caml_js_object","raw_array_cons","caml_js_to_array","caml_js_wrap_callback","arguments","caml_js_wrap_meth_callback","this","caml_lazy_make_forward","caml_ldexp_float","caml_lessequal","caml_lessthan","caml_log10_float","LOG10E","log","caml_make_vect","init","caml_string_of_array","caml_ml_bytes_length","caml_raise_sys_error","Sys_error","caml_ml_flush","chanid","chan","caml_ml_channels","opened","output","fds","fd","caml_raise_no_such_file","name","caml_string_get","MlFile","MlFakeFile","content","MlFakeDevice","root","caml_array_of_string","caml_string_unsafe_set","caml_string_set","MlNodeFile","fs","MlNodeDevice","caml_std_output","str","slen","file","write","caml_sys_open_internal","flags","info","fd_last_idx","caml_ml_open_descriptor_out","rdonly","channel","caml_ml_out_channels_list","caml_ml_output","string","jsstring","id","lastIndexOf","caml_ml_output_char","caml_raise_constant","caml_raise_zero_divide","Division_by_zero","caml_mod","caml_modf_float","caml_notequal","caml_obj_block","caml_obj_set_tag","caml_obj_tag","caml_register_global","name_opt","caml_register_named_value","nm","caml_set_oo_id","caml_sinh_float","caml_string_equal","caml_string_notequal","caml_sys_exit","quit","process","exit","caml_raise_not_found","Not_found","caml_sys_getenv","env","caml_sys_random_seed","Date","random","caml_tanh_float","z","caml_trampoline","joo_tramp","joo_args","caml_trampoline_return","caml_update_dummy","caml_weak_blit","caml_weak_check","caml_weak_get","caml_return_exn_constant","caml_named_value","caml_named_values","caml_wrap_exception","message","match","Stack_overflow","erase_rel","param","rest$7","rest$8","ty1","concat_fmtty","fmtty1","fmtty2","ty2","concat_fmt","fmt1","fmt2","rest$1","rest$2","rest$3","pad$1","rest$4","prec$0","pad$2","rest$5","prec$1","pad$3","rest$6","prec$2","pad$4","prec$3","pad$5","rest$10","rest$11","rest$12","fmtty","rest$13","fmtty$0","rest$16","rest$17","rest$19","char_set","rest$20","rest$22","rest$23","failwith","invalid_arg","max","lnot","_h_","l2","l1","string_of_bool","_i_","_j_","string_of_number","append","tl","output_string","oc","prerr_string","outchan","do_at_exit","caml_call1","exit_function","l1$0","l2$0","l1$1","rev_append","map","accu","param$0","accu$0","l$0","l$1","caml_call2","fold_right","_Sk_","_Sj_","pair","remove_assq","rev","match$0","split","ry","_o_","chop","k$0","Assert_failure","_p_","chr","_q_","lowercase","uppercase_ascii","equal","make","caml_fill_bytes","copy","caml_blit_bytes","get_sub","_x_","sub_string","blit","ofs1","ofs2","_y_","blit$0","_z_","is_space","map$0","_Sg_","_Sh_","sep","seplen","acc","_A_","_Sb_","dst","_Se_","pos","_Sd_","_B_","is_space$0","_C_","empty","index_rec","lim","i$0","_D_","i$1","_E_","_F_","is_block","extension_constructor","slot","switch$0","switch$1","_I_","_H_","extension_id","_K_","_R7_","_R8_","hd","param$1","tl$0","hd$0","height","create","hl","hr","singleton","bal","h$0","lr","ld","lv","ll","lrr","lrd","lrv","lrl","_Q9_","_V_","_W_","rr","rv","rl","rlr","rld","rlv","rll","_Q$_","_X_","_Y_","add","Ord","min_binding","remove_min_binding","_Q2_","_Z_","remove","x$0","d$0","iter","mapi","fold","m$0","caml_call3","for_all","_QZ_","_Q0_","_Q1_","exists","_QW_","_QY_","_QX_","add_min_binding","add_max_binding","join","rh","lh","concat","concat_or_join","t1","t2","pres","pres$0","___","merge","h1","r1","d1","v1","_QS_","_QT_","d2","r2$0","d2$0","v2","r1$0","_QU_","_QV_","d1$0","_$_","union","h2","r$0","filter","pvd","partition","lf","rf","_QQ_","lt","rt","_QR_","_aa_","cons_enum","e$0","cardinal","_QM_","bindings_aux","_Q7_","cmp","m1","m2","e2$2","e1","e2","e2$0","e1$0","c$0","e2$1","_QN_","_QO_","_QP_","_Q5_","_Q4_","raise_undefined","Undefined","force_lazy_block","blk","closure","result","n$1","max_string_length","n$0","resize","more","new_len","_ai_","new_buffer","_QJ_","_QK_","_aj_","new_position","buffer_create","init_size","buffer_check_size","buf","overhead","min_len","_QH_","new_str","_QI_","buffer_add_char","buffer_add_string","str_len","buffer_contents","string_of_formatting_lit","formatting_lit","_ak_","_al_","_am_","_an_","_ao_","_ap_","_aq_","_ar_","make$0","bprint_fmtty","rest","_as_","rest$0","_at_","_au_","_av_","_aw_","_ax_","_ay_","_az_","sub_fmtty","_aA_","_aB_","sub_fmtty$0","_aC_","_aD_","rest$9","_aE_","_aF_","_aG_","_aH_","_aI_","symm","fmtty_rel_det","de","fa","af","ed","de$0","fa$0","af$0","ed$0","match$1","de$1","fa$1","af$1","ed$1","match$2","de$2","fa$2","af$2","ed$2","match$3","de$3","fa$3","af$3","ed$3","match$4","de$4","fa$4","af$4","ed$4","match$5","de$5","fa$5","af$5","ed$5","match$6","de$6","fa$6","af$6","ed$6","match$7","de$7","fa$7","af$7","ed$7","match$8","de$8","match$9","trans","jd","fa$8","ag","ga","af$8","ed$8","dj","match$10","de$9","fa$9","af$9","ed$9","match$11","de$10","fa$10","af$10","ed$10","match$12","de$11","fa$11","af$11","ed$11","match$13","de$12","fa$12","af$12","ed$12","match$14","de$13","fa$13","af$13","ed$13","_aJ_","_P2_","_P3_","_P4_","_P5_","_P6_","_P7_","_P8_","_P9_","_P$_","rest2$7","_Qa_","_P__","_Qc_","_Qd_","rest2$8","ty22","ty21","f4","_Qb_","_Qe_","_aU_","_Qf_","_Qg_","_Qh_","_Qi_","_aM_","_aN_","_aO_","_aP_","_aQ_","_aK_","_aL_","_aR_","type_padding","pad","Type_mismatch","type_padprec","_P1_","type_ignored_param_one","ign","type_format_gen","fmtty_rest","fmtty_rest$0","fmtty$1","fmt_rest$1","_Pz_","_PA_","fmtty$2","fmt_rest$2","_PC_","_PD_","fmtty$3","fmt_rest$3","iconv","_PF_","_PG_","fmtty$4","_PI_","_PH_","fmt_rest$4","iconv$0","_PJ_","_PK_","fmtty$5","_PM_","_PL_","fmt_rest$5","iconv$1","_PN_","_PO_","fmtty$6","_PQ_","_PP_","fmt_rest$6","iconv$2","_PR_","_PS_","fmtty$7","_PU_","_PT_","fmt_rest$7","fconv","_PV_","_PW_","fmtty$8","_PY_","_PX_","fmtty_rest$8","fmtty$9","fmtty$10","fmt_rest$10","fmtty$11","fmt_rest$11","fmtty$12","fmtty_rest$9","fmt_rest$12","pad_opt","fmtty$13","fmtty_rest$10","sub_fmtty1","fmt_rest$13","sub_fmtty$1","pad_opt$0","_PZ_","fmtty$14","fmtty_rest$11","fmtty$15","fmtty_rest$12","match$15","fmtty$16","fmt_rest$16","match$16","fmtty$17","fmt_rest$17","formatting_gen","str$0","match$20","match$21","match$22","fmtty3","str$1","match$23","match$24","fmtty2$0","match$25","fmtty3$0","fmt2$0","fmtty_rest$13","match$17","fmtty$18","fmtty_rest$14","fmt_rest$19","width_opt","match$18","fmtty$19","fmtty_rest$15","fmt_rest$20","counter","match$19","fmtty$20","match$26","fmtty$21","sub_fmtty$2","sub_fmtty$3","pad_opt$2","_P0_","type_ignored_format_substitution","match$27","fmt$22","fmtty$22","fmt$0","fmt$1","fmtty_rest$1","fmt$2","fmtty_rest$2","fmt$3","fmtty_rest$3","fmt$4","fmtty_rest$4","fmt$5","fmtty_rest$5","fmt$6","fmtty_rest$6","fmt$7","fmtty_rest$7","sub2_fmtty","sub_fmtty_rest$15","fmt$8","sub2_fmtty$1","sub1_fmtty","sub_fmtty_rest$17","sub2_fmtty$2","sub1_fmtty$0","_Px_","_Py_","fmt$9","fmt$10","fmt$11","fmt$12","fmt$13","fix_padding","padty","padty$0","width$0","fix_int_precision","res$1","res$0","string_to_caml_string","_Pv_","_Pn_","_Ps_","_Pt_","_Pq_","convert_int","convert_int32","convert_nativeint","convert_int64","convert_float","symb","_Pf_","_bP_","_bQ_","_Pg_","_Ph_","_bS_","make_int_padding_precision","make_printf","_Pd_","_Pc_","p$0","_Pe_","p$1","make_string_padding","new_acc","make_printf$0","acc$0","_r_","_s_","_t_","s$0","pad$0","default_float_precision","_O$_","_O__","_Pa_","ty","_Pb_","fmting_lit","koc","kacc","rest$14","_bT_","rest$15","_bU_","_bV_","rest$18","make_invalid_arg","_bW_","make_from_fmtty$0","arity","_O9_","make_custom$0","make_from_fmtty","_O7_","_bX_","_bY_","_O6_","_bZ_","arity$0","make_custom","_O5_","output_acc","_O4_","acc$1","_O3_","_b0_","acc$2","_b1_","strput_acc","add_string","_O2_","_O1_","_b2_","_b3_","add_char","open_box_of_string","invalid_box","create$0","parse_spaces","_b4_","_b5_","wend","j$0","parse_lword","wstart","box_name","sub","nstart","nend","parse_int","indent","_b6_","box_type","fprintf","sprintf","field","_cc_","_l_","_k_","_cd_","_ce_","other_fields","_cf_","_OW_","_OX_","_cg_","fields","_OT_","_OU_","_ch_","_ci_","_cj_","_OV_","_ck_","to_string","Out_of_memory","_cl_","char$0","line","locfmt","_cn_","char$1","line$0","file$0","_co_","Undefined_recursive_module","char$2","line$1","file$1","_cp_","_OQ_","_OS_","printers","register_printer","fn","ongoing_traversal","flip_ongoing_traversal","create$1","opt","initial_size","sth","randomized_default","max_array_length","prng","_OA_","_Oz_","_Ow_","newval30","curval","_Oy_","clear$0","_Ou_","_Ov_","reset","copy_bucketlist","key","next","key$0","data$0","next$0","_cD_","copy$1","_Oq_","_Or_","_Os_","map$1","length$0","resize$0","indexfun","osize","odata","nsize","_Oh_","ndata_tail","inplace","ndata","_Oj_","cell","cell$0","nidx","_Ol_","_Oo_","_On_","_Om_","iter$0","old_trav","_Od_","_Og_","_Oe_","exn","filter_map_inplace_bucket","slot$0","filter_map_inplace","_Ob_","_N6_","b$0","do_bucket","_N8_","_N9_","bucket_length","stats","_N3_","_NZ_","_N1_","_N2_","_N0_","histo","_NW_","_N4_","_NX_","add_queue","q","_NL_","take_queue","_NK_","Empty_queue","pp_enqueue","state","token","pp_output_string","pp_output_newline","pp_output_spaces","break_new_line","real_indent","break_line","break_same_line","pp_force_break_line","_NH_","bl_ty","_NJ_","pp_skip_token","format_pp_token","_Nw_","tabs","add_tab","ls","_Nx_","_Ny_","ls$0","_Nz_","_NA_","_NB_","tags","tag_name","_NC_","off$0","insertion_point","tabs$0","_NE_","find","tab","ty$0","off$1","insertion_point$0","bl_type","offset$0","tbox","tag_name$0","advance_loop","_Ns_","tok","_Nv_","_Nt_","pp_infinity","advance_left","enqueue_advance","enqueue_string_as","clear_scan_stack","scan_stack_bottom","set_size","_Nm_","queue_elem","left_tot","_No_","scan_push","pp_open_box_gen","br_ty","_Nk_","_Nl_","pp_close_box","_Ni_","_Nj_","pp_open_tag","_Nh_","pp_flush_queue","_Ng_","pp_print_as_size","_Nf_","pp_print_as","isize","pp_print_string","pp_print_char","pp_open_box","pp_print_flush","pp_force_newline","_Ne_","pp_print_break","_Nd_","pp_print_space","pp_print_cut","default_pp_mark_open_tag","_cJ_","_cI_","default_pp_mark_close_tag","_cL_","_cK_","default_pp_print_open_tag","_Nc_","default_pp_print_close_tag","_Nb_","make_formatter","flush","pp_queue","sys_tok","_cM_","ppf","_M$_","_Na_","_M__","_cH_","_M9_","blank_line","formatter_of_out_channel","_m_","formatter_of_buffer","_M4_","_M5_","_M6_","_M7_","pp_make_buffer","pp_buffer_size","flush_buffer_formatter","compute_tag","tag_acc","len$0","_ah_","output_formatting_lit","_MZ_","_M0_","_M1_","output_acc$0","_MQ_","_MP_","bty","_MS_","_MR_","size$0","_MU_","p$3","_MT_","p$2","_MW_","_MV_","_MY_","_MX_","f$0","strput_acc$0","_ME_","_MD_","_MG_","_MF_","_MI_","_MH_","_MK_","_MJ_","_MM_","_ML_","f$1","size$1","_MO_","_MN_","fprintf$0","sprintf$0","asprintf","register_exception","public_method_label","_My_","_Mz_","_MA_","fit_size","new_table","pub_labels","table_count","methods","dummy_met","_Mr_","_Mt_","_Mu_","_Mv_","_Mw_","initial_object_size","Meths","Labs","Vars","resize$1","new_size","old_size","_Mp_","new_buck","blit$1","_Mq_","new_method","table","get_method_label","label","_Mo_","new_slot","new_variable","_cQ_","_Mm_","new_cache","_HB_","is_raise","_cq_","_cr_","_cs_","_ct_","info$0","_Hu_","_Hv_","_Hw_","_cu_","_cw_","_Hy_","caml_call6","_cv_","_Hx_","_Ht_","_Hz_","_cx_","_cy_","_HC_","_cz_","_Ho_","Empty$0","_Hq_","_Hm_","cat_letter","cat_not_letter","break_state","_EW_","_EX_","_J_","_D5_","param$2","opt$0","pp_sep","pp_v","_DM_","_DL_","infinity","neg_infinity","Parse_error$0","_Dq_","sexp_of_int","sexp_of_exn","string_of_sexp","sexp","int_of_sexp","what","loc","rev_fld_names","of_sexp_error","_mH_","fld_names_str","bump_text_line","parse_pos","bump_text_pos","bump_pos_cont","max_pos","cont","caml_call4","bump_line_cont","add_bump","bump","add_bump_pos","set_parse_pos","buf_pos","mk_parse_pos","raise_parse_error","parse_state","location","err_msg","Parse_error$1","raise_unexpected_char","_m7_","mk_cont_parser","cont_parse","_m8_","atom","pbuf","_C4_","sexp_stack","rev_sexp_lst","clear","pstack","_m9_","_m__","_m$_","pos_len","_na_","_nb_","cont_state","used_ref","_nc_","_nd_","eof_safe","_ne_","_nf_","_nv_","_nh_","_ng_","_C3_","higher_sexp_stack","pstack$0","_nw_","_ni_","_nj_","_nm_","_nx_","_ny_","_nz_","pos$0","_nI_","_nn_","_np_","_no_","_C1_","atom$0","pbuf$0","_C2_","sexp_stack$0","higher_rev_sexp_lst","_nA_","_nk_","_nl_","_nB_","_nC_","loop","parse","old_pstack","parse$0","_CX_","_CY_","_CZ_","_C0_","depth","parse_block_depth","_nE_","parse_close_block","parse_open_block","parse_block_quote","_CS_","_CT_","_CU_","_CV_","_CN_","_CO_","_CP_","_CQ_","_nG_","_CI_","_CJ_","_CK_","_CL_","_CM_","_nH_","_CD_","_CE_","_CF_","_CG_","_CH_","_nJ_","_nK_","err_msg$0","_nL_","_nM_","err_msg$1","_nN_","_CC_","_nq_","_nu_","count$0","_Cx_","_nW_","d$1","_nX_","_nY_","_nt_","_nS_","_nT_","_nU_","_nO_","_nr_","_ns_","_nP_","_nQ_","my_parse","len$1","_nZ_","caml_ephe_create","imul","xx","ff","gg","hh","ii","md5","cwd","caml_current_dir","old","clen","old_data","lookupFun","lookup","name_slash","RegExp","seen","ok","wronly","text","binary","is_dir","excl","truncate","mlstring","Buffer","ftruncateSync","fstatSync","writeSync","buf_offset","readSync","closeSync","existsSync","readdirSync","statSync","isDirectory","unlinkSync","consts","openSync","renameSync","jsoo_mount_point","path","device","stdout","console","stderr","error","vals","ws_buf","loc$0","loc$1","Exit","_a_","_c_","nan","_d_","max_float","_e_","min_float","_f_","epsilon_float","_g_","delayed_rank","_Sl_","Break","_G_","params","_sq_","_cC_","_so_","contains_from","seed$0","_OK_","_cA_","_OG_","caml_md5_string","_OB_","_OH_","_OC_","_OD_","_OE_","_OI_","_OJ_","_cG_","std_formatter","stdbuf","at_exit","_M2_","default_token_buffer_size","scan_close_ic","iname","ic","eof","from_ic","End_of_file","_cO_","stdin","Scan_failure","_cP_","method_count","inst_var_count","public_methods","class_init","table$0","_Mj_","lab","met","_Mk_","env_init","make_class","_dF_","_dG_","_dH_","_dI_","nmeths","nvals","_Gl_","_Gm_","_Gh_","_Gi_","_Gj_","_Gk_","obj_0","_GL_","_GK_","_GJ_","_GI_","_GN_","_Gn_","_GS_","clo","clo$0","_GQ_","m$2","x$9","m$3","n$16","_GP_","m$4","e$5","n$17","_GO_","m$5","n$18","_GR_","backend_type","_dn_","_R1_","_M_","_N_","_R3_","_O_","_P_","add_min_element","add_max_element","min_elt","max_elt","_RY_","remove_min_elt","_RW_","_Q_","_RV_","_R_","_RT_","_RR_","_RS_","inter","_RN_","_RO_","_RP_","_RQ_","diff","_RJ_","_RK_","_RL_","_RM_","subset","s1$0","s2$0","_RG_","_RH_","_RI_","_RD_","_RE_","_RF_","_RA_","_RC_","_RB_","pv","_Ry_","_Rz_","_S_","_Rx_","elements_aux","v$0","_Rw_","_Rv_","_RU_","sort","x2","_Rs_","x1","_Rk_","_Ru_","x2$0","_Rt_","x1$0","c$1","c$2","c$3","c$4","c$5","c$6","n2","n1","rev_sort","_Rp_","_Rr_","_Rq_","_Rl_","l$3","l$4","_Rm_","l$5","_Ro_","_Rn_","nl","left","mid","l$2","_T_","_Ri_","_Rj_","_Rh_","_Rf_","_Rd_","H","key_index","_NU_","_cE_","bucket","_NT_","_NS_","k1","next1","k2","next2","k3","d3","next3","find_in_bucket","_NR_","_NP_","_NQ_","_NN_","_NM_","add$1","Conv_exn","_mO_","_mP_","ppos","pe","_C5_","_mY_","_C6_","_mZ_","_C7_","_m0_","_C8_","_m1_","_m5_","ba","i0","caml_ba_set_1","create$9","E","_n3_","osce","_n4_","_Cs_","_n8_","_B8_","_B7_","lazy_query","_Bj_","_Bt_","_mM_","state_field","duplicates","_ue_","field_sexp","fvalue","_mB_","_mz_","sexp_args","_t9_","v0$0","_t$_","_mC_","_mD_","_mE_","id_field","fvalue$0","done_field","fvalue$1","switch$6","description_field","fvalue$2","tail","_mF_","_ua_","record_superfluous_fields","_mI_","_mJ_","extra","_ug_","_uh_","_ui_","_uf_","state_value","id_value","done_value","_rB_","_rA_","_rz_","_ry_","_mL_","undefined$0","_t7_","v_state","arg$0","_rs_","_rt_","_rC_","arg$1","v_id","bnds$0","v_done","v_description","bnds$1","is_editing","todo","local_storage","optdef_get_exn","window","localStorage","todos","serialized","_t4_","setItem","return$0","equal$8","Tyxml","Make$4","Reactjs","xs","App","Make$3","_tX_","_tY_","save_todos","todos$0","_rI_","todos$1","todo$0","_tZ_","new$0","command","input","send","container","remove_todo","replace_todo","completed","yes","num_todos","num_left","_sT_","_sa_","_sW_","_sX_","cons_if","_sc_","_sb_","_sY_","_sZ_","_s0_","filter$0","uri_of_string","_r5_","_r8_","_r__","href","button_text","_tQ_","_tU_","_tT_","_tV_","_r7_","_tW_","_sd_","_s1_","_se_","_s2_","_sf_","_sj_","_s5_","_s4_","_s6_","_s7_","_s8_","_sg_","_s9_","_s__","_si_","_sh_","_s$_","all_completed","_sE_","_tO_","done","description","editing","_rQ_","_rP_","commit_edit","description$0","trim","_rR_","_ti_","_tL_","_rS_","_tj_","_tJ_","_rT_","_tI_","_tK_","_tk_","target","value","_tl_","_tm_","_tn_","_to_","_tp_","_rU_","_tw_","_tx_","_rV_","_ty_","_tz_","_tA_","_tB_","_tC_","_tD_","_tE_","_tF_","_rW_","_tG_","_tH_","_rX_","_tr_","class_names","_tq_","find_all","_sF_","_rY_","_sG_","_sH_","_rZ_","_sI_","_r0_","_sJ_","_sK_","_sL_","_sM_","_sN_","_r1_","_sO_","_r2_","_sP_","_sQ_","_r4_","_r3_","_sR_","_st_","_tf_","_rJ_","_tg_","_rK_","_rG_","_su_","_sv_","_sw_","_rL_","_sx_","_rM_","_sy_","_sz_","_sA_","_rN_","_sB_","_sC_","_rO_","_te_","_td_","eta","no","_sk_","getItem","no_handler","sexp$0","_n0_","_n1_","_t1_","sexp$1","_t3_","cont_state_str","_mR_","_t2_","_t0_","id$0","fold_left","create$10","O_RDONLY","O_WRONLY","O_RDWR","S_IFMT","S_IFREG","S_IFDIR","S_IFCHR","S_IFBLK","S_IFIFO","S_IFLNK","S_IFSOCK","O_CREAT","O_EXCL","O_NOCTTY","O_TRUNC","O_APPEND","O_DIRECTORY","O_NOFOLLOW","O_SYNC","O_SYMLINK","O_NONBLOCK","S_IRWXU","S_IRUSR","S_IWUSR","S_IXUSR","S_IRWXG","S_IRGRP","S_IWGRP","S_IXGRP","S_IRWXO","S_IROTH","S_IWOTH","S_IXOTH","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EAFNOSUPPORT","EAGAIN","EALREADY","EBADF","EBADMSG","EBUSY","ECANCELED","ECHILD","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDESTADDRREQ","EDOM","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTUNREACH","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","ELOOP","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOBUFS","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOLCK","ENOLINK","ENOMEM","ENOMSG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTSOCK","ENOTSUP","ENOTTY","ENXIO","EOPNOTSUPP","EOVERFLOW","EPERM","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EROFS","ESPIPE","ESRCH","ESTALE","ETIME","ETIMEDOUT","ETXTBSY","EWOULDBLOCK","EXDEV","SIGHUP","SIGINT","SIGQUIT","SIGILL","SIGTRAP","SIGABRT","SIGIOT","SIGBUS","SIGFPE","SIGKILL","SIGUSR1","SIGSEGV","SIGUSR2","SIGPIPE","SIGALRM","SIGTERM","SIGCHLD","SIGCONT","SIGSTOP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGXCPU","SIGXFSZ","SIGVTALRM","SIGPROF","SIGWINCH","SIGIO","SIGSYS","SSL_OP_ALL","SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","SSL_OP_CIPHER_SERVER_PREFERENCE","SSL_OP_CISCO_ANYCONNECT","SSL_OP_COOKIE_EXCHANGE","SSL_OP_CRYPTOPRO_TLSEXT_BUG","SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","SSL_OP_EPHEMERAL_RSA","SSL_OP_LEGACY_SERVER_CONNECT","SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","SSL_OP_MICROSOFT_SESS_ID_BUG","SSL_OP_MSIE_SSLV2_RSA_PADDING","SSL_OP_NETSCAPE_CA_DN_BUG","SSL_OP_NETSCAPE_CHALLENGE_BUG","SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG","SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","SSL_OP_NO_COMPRESSION","SSL_OP_NO_QUERY_MTU","SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","SSL_OP_NO_SSLv2","SSL_OP_NO_SSLv3","SSL_OP_NO_TICKET","SSL_OP_NO_TLSv1","SSL_OP_NO_TLSv1_1","SSL_OP_NO_TLSv1_2","SSL_OP_PKCS1_CHECK_1","SSL_OP_PKCS1_CHECK_2","SSL_OP_SINGLE_DH_USE","SSL_OP_SINGLE_ECDH_USE","SSL_OP_SSLEAY_080_CLIENT_DH_BUG","SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG","SSL_OP_TLS_BLOCK_PADDING_BUG","SSL_OP_TLS_D5_BUG","SSL_OP_TLS_ROLLBACK_BUG","ENGINE_METHOD_DSA","ENGINE_METHOD_DH","ENGINE_METHOD_RAND","ENGINE_METHOD_ECDH","ENGINE_METHOD_ECDSA","ENGINE_METHOD_CIPHERS","ENGINE_METHOD_DIGESTS","ENGINE_METHOD_STORE","ENGINE_METHOD_PKEY_METHS","ENGINE_METHOD_PKEY_ASN1_METHS","ENGINE_METHOD_ALL","ENGINE_METHOD_NONE","DH_CHECK_P_NOT_SAFE_PRIME","DH_CHECK_P_NOT_PRIME","DH_UNABLE_TO_CHECK_GENERATOR","DH_NOT_SUITABLE_GENERATOR","NPN_ENABLED","RSA_PKCS1_PADDING","RSA_SSLV23_PADDING","RSA_NO_PADDING","RSA_PKCS1_OAEP_PADDING","RSA_X931_PADDING","RSA_PKCS1_PSS_PADDING","POINT_CONVERSION_COMPRESSED","POINT_CONVERSION_UNCOMPRESSED","POINT_CONVERSION_HYBRID","F_OK","R_OK","W_OK","X_OK","UV_UDP_REUSEADDR","identity","_assign","emptyObject","_invariant","MIXINS_KEY","ReactComponent","isValidElement","ReactNoopUpdateQueue","validateMethodOverride","isAlreadyDefined","specPolicy","ReactClassInterface","hasOwnProperty","ReactClassMixin","mixSpecIntoComponent","Constructor","spec","proto","prototype","autoBindPairs","__reactAutoBindPairs","RESERVED_SPEC_KEYS","mixins","property","isReactClassMethod","autobind","createMergedResultFunction","createChainedFunction","mixStaticSpecIntoComponent","statics","mergeIntoWithNoDuplicateKeys","one","two","bindAutoBindMethod","component","method","boundMethod","bind","bindAutoBindMethods","pairs","autoBindKey","injectedMixins","propTypes","contextTypes","childContextTypes","getDefaultProps","getInitialState","getChildContext","render","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillUnmount","updateComponent","displayName","IsMountedPreMixin","__isMounted","IsMountedPostMixin","replaceState","newState","callback","updater","enqueueReplaceState","isMounted","ReactClassComponent","props","context","refs","initialState","isArray","constructor","forEach","defaultProps","methodName","emptyFunction","EventListener","listen","eventType","addEventListener","removeEventListener","attachEvent","detachEvent","capture","registerDefault","canUseDOM","document","createElement","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","canUseViewport","screen","isInWorker","_hyphenPattern","_","character","camelize","msPattern","containsNode","outerNode","innerNode","isTextNode","parentNode","contains","compareDocumentPosition","toArray","invariant","callee","ret","hasArrayNature","nodeType","getNodeName","markup","nodeNameMatch","nodeNamePattern","createArrayFromMixed","getMarkupWrap","dummyNode","handleScript","node","nodeName","wrap","innerHTML","wrapDepth","lastChild","scripts","getElementsByTagName","nodes","childNodes","removeChild","makeEmptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","focus","doc","activeElement","body","shouldWrap","selectWrap","tableWrap","trWrap","svgWrap","markupWrap","*","area","col","legend","tr","optgroup","option","caption","colgroup","tbody","tfoot","thead","td","th","firstChild","scrollable","Window","pageXOffset","documentElement","scrollLeft","pageYOffset","scrollTop","_uppercasePattern","hyphenate","validateFormat","format","condition","argIndex","framesToPop","object","defaultView","ownerDocument","Node","isNode","cache","performance","msPerformance","webkitPerformance","performanceNow","now","is","Object","objA","objB","keysA","keys","keysB","warning","toObject","val","TypeError","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","getOwnPropertyNames","test2","test3","letter","err","shouldUseNative","source","symbols","to","defaultSetTimout","defaultClearTimeout","runTimeout","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","timeout","run","Item","noop","nextTick","title","browser","argv","version","versions","on","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","dir","umask","typeSpecs","values","componentName","getStack","factory","ReactPropTypesSecret","checkPropTypes","throwOnDirectAccess","getIteratorFn","maybeIterable","iteratorFn","ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","PropTypeError","createChainableTypeChecker","validate","checkType","isRequired","propName","propFullName","secret","ANONYMOUS","chainedCheckType","createPrimitiveTypeChecker","expectedType","propValue","getPropType","getPreciseType","every","step","iterator","entries","entry","isSymbol","propType","Symbol","getPostfixForTypeWarning","type","getClassName","ReactPropTypes","bool","func","number","symbol","any","arrayOf","typeChecker","element","createElementTypeChecker","instanceOf","expectedClass","expectedClassName","createNodeChecker","objectOf","oneOf","expectedValues","JSON","stringify","oneOfType","arrayOfTypeCheckers","checker","shape","shapeTypes","PropTypes","ARIADOMPropertyConfig","Properties","aria-current","aria-details","aria-disabled","aria-hidden","aria-invalid","aria-keyshortcuts","aria-label","aria-roledescription","aria-autocomplete","aria-checked","aria-expanded","aria-haspopup","aria-level","aria-modal","aria-multiline","aria-multiselectable","aria-orientation","aria-placeholder","aria-pressed","aria-readonly","aria-required","aria-selected","aria-sort","aria-valuemax","aria-valuemin","aria-valuenow","aria-valuetext","aria-atomic","aria-busy","aria-live","aria-relevant","aria-dropeffect","aria-grabbed","aria-activedescendant","aria-colcount","aria-colindex","aria-colspan","aria-controls","aria-describedby","aria-errormessage","aria-flowto","aria-labelledby","aria-owns","aria-posinset","aria-rowcount","aria-rowindex","aria-rowspan","aria-setsize","DOMAttributeNames","DOMPropertyNames","ReactDOMComponentTree","focusNode","AutoFocusUtils","focusDOMComponent","getNodeFromInstance","isKeypressCommand","nativeEvent","ctrlKey","altKey","metaKey","getCompositionEventType","topLevelType","eventTypes","compositionStart","compositionEnd","compositionUpdate","isFallbackCompositionStart","keyCode","START_KEYCODE","isFallbackCompositionEnd","END_KEYCODES","getDataFromCustomEvent","detail","extractCompositionEvent","targetInst","nativeEventTarget","fallbackData","canUseCompositionEvent","currentComposition","useFallbackCompositionData","getData","FallbackCompositionState","getPooled","event","SyntheticCompositionEvent","customData","EventPropagators","accumulateTwoPhaseDispatches","getNativeBeforeInputChars","which","SPACEBAR_CODE","hasSpaceKeypress","SPACEBAR_CHAR","chars","getFallbackBeforeInputChars","release","extractBeforeInputEvent","canUseTextInputEvent","SyntheticInputEvent","beforeInput","documentMode","opera","isPresto","phasedRegistrationNames","bubbled","captured","dependencies","BeforeInputEventPlugin","extractEvents","prefixKey","prefix","substring","isUnitlessNumber","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixes","prop","CSSProperty","shorthandPropertyExpansions","background","backgroundAttachment","backgroundColor","backgroundImage","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundPosition","border","borderWidth","borderStyle","borderColor","borderBottom","borderBottomWidth","borderBottomStyle","borderBottomColor","borderLeft","borderLeftWidth","borderLeftStyle","borderLeftColor","borderRight","borderRightWidth","borderRightStyle","borderRightColor","borderTop","borderTopWidth","borderTopStyle","borderTopColor","font","fontStyle","fontVariant","fontSize","fontFamily","outline","outlineWidth","outlineStyle","outlineColor","dangerousStyleValue","hyphenateStyleName","memoizeStringOnly","processStyleName","styleName","hasShorthandPropertyBug","styleFloatAccessor","tempStyle","cssFloat","CSSPropertyOperations","createMarkupForStyles","styles","isCustomProperty","styleValue","setValueForStyles","setProperty","expansion","individualStyleName","_classCallCheck","instance","_prodInvariant","PooledClass","CallbackQueue","_callbacks","_contexts","_arg","enqueue","notifyAll","callbacks","contexts","checkpoint","rollback","destructor","addPoolingTo","createAndAccumulateChangeEvent","inst","SyntheticEvent","change","shouldUseChangeEvent","elem","manualDispatchChangeEvent","activeElementInst","getEventTarget","ReactUpdates","batchedUpdates","runEventInBatch","EventPluginHub","enqueueEvents","processEventQueue","startWatchingForChangeEventIE8","stopWatchingForChangeEventIE8","getInstIfValueChanged","updated","inputValueTracking","updateValueIfChanged","simulated","ChangeEventPlugin","_allowSimulatedPassThrough","getTargetInstForChangeEvent","handleEventsForChangeEventIE8","startWatchingForValueChange","handlePropertyChange","stopWatchingForValueChange","propertyName","handleEventsForInputEventPolyfill","getTargetInstForInputEventPolyfill","shouldUseClickEvent","getTargetInstForClickEvent","getTargetInstForInputOrChangeEvent","handleControlledInputBlur","_wrapperState","controlled","getAttribute","setAttribute","isEventSupported","isTextInputElement","doesChangeEventBubble","isInputEventSupported","_isInputEventSupported","getTargetInstFunc","handleEventFunc","targetNode","getNodeAfter","nextSibling","insertLazyTreeChildAt","childTree","referenceNode","DOMLazyTree","insertTreeBefore","moveChild","childNode","moveDelimitedText","insertChildAt","closingComment","removeDelimitedText","openingComment","nextNode","startNode","Danger","createMicrosoftUnsafeLocalFunction","setInnerHTML","setTextContent","insertBefore","dangerouslyReplaceNodeWithMarkup","DOMChildrenOperations","replaceDelimitedText","stringText","nodeAfterComment","createTextNode","processUpdates","updates","update","afterNode","fromNode","insertTreeChildren","tree","enableLazy","children","html","DOMNamespaces","navigator","userAgent","namespaceURI","replaceChildWithTree","oldNode","newTree","replaceChild","queueChild","parentTree","appendChild","queueHTML","queueText","mathml","svg","checkMask","bitmask","DOMPropertyInjection","MUST_USE_PROPERTY","HAS_BOOLEAN_VALUE","HAS_NUMERIC_VALUE","HAS_POSITIVE_NUMERIC_VALUE","HAS_OVERLOADED_BOOLEAN_VALUE","injectDOMPropertyConfig","domPropertyConfig","Injection","DOMAttributeNamespaces","DOMMutationMethods","isCustomAttribute","DOMProperty","_isCustomAttributeFunctions","properties","lowerCased","propConfig","propertyInfo","attributeName","attributeNamespace","mutationMethod","mustUseProperty","hasBooleanValue","hasNumericValue","hasPositiveNumericValue","hasOverloadedBooleanValue","ATTRIBUTE_NAME_START_CHAR","ID_ATTRIBUTE_NAME","ROOT_ATTRIBUTE_NAME","ATTRIBUTE_NAME_CHAR","getPossibleStandardName","isCustomAttributeFn","injection","isAttributeNameSafe","validatedAttributeNameCache","illegalAttributeNameCache","VALID_ATTRIBUTE_NAME_REGEX","shouldIgnoreValue","quoteAttributeValueForBrowser","DOMPropertyOperations","createMarkupForID","setAttributeForID","createMarkupForRoot","setAttributeForRoot","createMarkupForProperty","createMarkupForCustomAttribute","setValueForProperty","deleteValueForProperty","namespace","setAttributeNS","setValueForAttribute","removeAttribute","deleteValueForAttribute","createNodesFromMarkup","oldChild","newChild","DefaultEventPluginOrder","SyntheticMouseEvent","mouseEnter","registrationName","mouseLeave","EnterLeaveEventPlugin","relatedTarget","fromElement","win","parentWindow","related","toElement","getClosestInstanceFromNode","toNode","leave","enter","accumulateEnterLeaveDispatches","isInteractive","shouldPreventMouseEvent","disabled","EventPluginRegistry","EventPluginUtils","ReactErrorUtils","accumulateInto","forEachAccumulated","listenerBank","eventQueue","executeDispatchesAndRelease","executeDispatchesInOrder","isPersistent","executeDispatchesAndReleaseSimulated","executeDispatchesAndReleaseTopLevel","getDictionaryKey","_rootNodeID","injectEventPluginOrder","injectEventPluginsByName","putListener","listener","PluginModule","registrationNameModules","didPutListener","getListener","bankForRegistrationName","_currentElement","deleteListener","willDeleteListener","deleteAllListeners","events","plugins","possiblePlugin","extractedEvents","processingEventQueue","rethrowCaughtError","__purge","__getListenerBank","recomputePluginOrdering","eventPluginOrder","pluginName","namesToPlugins","pluginModule","pluginIndex","publishedEvents","eventName","publishEventForPlugin","dispatchConfig","eventNameDispatchConfigs","phaseName","publishRegistrationName","registrationNameDependencies","possibleRegistrationNames","injectedEventPluginOrder","injectedNamesToPlugins","isOrderingDirty","getPluginModuleForEvent","phase","_resetEventPlugins","executeDispatch","currentTarget","invokeGuardedCallbackWithCatch","invokeGuardedCallback","executeDispatchesInOrderStopAtTrueImpl","dispatchListeners","_dispatchListeners","dispatchInstances","_dispatchInstances","isPropagationStopped","ComponentTree","TreeTraversal","isEndish","isMoveish","isStartish","executeDirectDispatch","dispatchListener","dispatchInstance","executeDispatchesInOrderStopAtTrue","hasDispatches","getInstanceFromNode","isAncestor","getLowestCommonAncestor","getParentInstance","traverseTwoPhase","traverseEnterLeave","argFrom","argTo","injectComponentTree","Injected","injectTreeTraversal","listenerAtPhase","propagationPhase","accumulateDirectionalDispatches","accumulateTwoPhaseDispatchesSingle","_targetInst","accumulateTwoPhaseDispatchesSingleSkipTarget","parentInst","accumulateDispatches","ignoredDirection","accumulateDirectDispatchesSingle","accumulateTwoPhaseDispatchesSkipTarget","accumulateDirectDispatches","_root","_startText","getText","_fallbackText","getTextContentAccessor","start","end","startValue","startLength","endValue","endLength","minEnd","sliceTail","HTMLDOMPropertyConfig","accept","acceptCharset","accessKey","action","allowFullScreen","allowTransparency","alt","as","async","autoComplete","autoPlay","cellPadding","cellSpacing","charSet","challenge","checked","cite","classID","className","cols","colSpan","contentEditable","contextMenu","controls","coords","crossOrigin","dateTime","default","defer","download","draggable","encType","form","formAction","formEncType","formMethod","formNoValidate","formTarget","frameBorder","headers","hidden","high","hrefLang","htmlFor","httpEquiv","icon","inputMode","integrity","keyParams","keyType","lang","list","low","manifest","marginHeight","marginWidth","maxLength","media","mediaGroup","minLength","multiple","muted","nonce","noValidate","open","optimum","pattern","placeholder","playsInline","poster","preload","profile","radioGroup","readOnly","referrerPolicy","rel","required","reversed","role","rows","rowSpan","sandbox","scope","scoped","scrolling","seamless","selected","sizes","span","spellCheck","src","srcDoc","srcLang","srcSet","summary","tabIndex","useMap","wmode","about","datatype","inlist","resource","typeof","vocab","autoCapitalize","autoCorrect","autoSave","color","itemProp","itemScope","itemType","itemID","itemRef","results","security","unselectable","hasAttribute","validity","badInput","KeyEscapeUtils","escape","escapeRegex","escaperLookup","=",":","unescape","unescapeRegex","unescaperLookup","=0","=2","_assertSingleLink","inputProps","checkedLink","valueLink","_assertValueLink","onChange","_assertCheckedLink","getDeclarationErrorAddendum","owner","getName","hasReadOnlyValue","button","checkbox","image","radio","submit","loggedTypeFailures","LinkedValueUtils","tagName","getValue","getChecked","executeOnChange","requestChange","oneArgumentPooler","copyFieldsFrom","Klass","instancePool","standardReleaser","poolSize","DEFAULT_POOLER","CopyConstructor","pooler","NewKlass","twoArgumentPooler","threeArgumentPooler","a3","fourArgumentPooler","a4","getListeningForDocument","mountAt","topListenersIDKey","reactTopListenersCounter","alreadyListeningTo","hasEventPageXY","ReactEventEmitterMixin","ViewportMetrics","getVendorPrefixedEventName","isMonitoringScrollValue","topEventMapping","topAbort","topAnimationEnd","topAnimationIteration","topAnimationStart","topBlur","topCanPlay","topCanPlayThrough","topChange","topClick","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topDurationChange","topEmptied","topEncrypted","topEnded","topError","topFocus","topInput","topKeyDown","topKeyPress","topKeyUp","topLoadedData","topLoadedMetadata","topLoadStart","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topPause","topPlay","topPlaying","topProgress","topRateChange","topScroll","topSeeked","topSeeking","topSelectionChange","topStalled","topSuspend","topTextInput","topTimeUpdate","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topTransitionEnd","topVolumeChange","topWaiting","topWheel","ReactBrowserEventEmitter","ReactEventListener","injectReactEventListener","setHandleTopLevel","handleTopLevel","setEnabled","enabled","isEnabled","listenTo","contentDocumentHandle","isListening","dependency","trapBubbledEvent","trapCapturedEvent","WINDOW_HANDLE","handlerBaseName","handle","supportsEventPageXY","createEvent","ev","ensureScrollValueMonitoring","refresh","refreshScrollValues","monitorScrollValue","instantiateChild","childInstances","child","selfDebugID","keyUnique","instantiateReactComponent","ReactReconciler","shouldUpdateReactComponent","traverseAllChildren","ReactChildReconciler","instantiateChildren","nestedChildNodes","transaction","updateChildren","prevChildren","nextChildren","mountImages","removedNodes","hostParent","hostContainerInfo","prevChild","prevElement","nextElement","receiveComponent","getHostNode","unmountComponent","nextChildInstance","nextChildMountImage","mountComponent","unmountChildren","renderedChildren","safely","renderedChild","ReactComponentBrowserEnvironment","processChildrenUpdates","dangerouslyProcessChildrenUpdates","replaceNodeWithMarkup","injected","ReactComponentEnvironment","injectEnvironment","environment","StatelessComponent","Component","warnIfInvalidElement","shouldConstruct","isReactComponent","isPureComponent","isPureReactComponent","React","ReactCurrentOwner","ReactInstanceMap","ReactNodeTypes","shallowEqual","CompositeTypes","ImpureClass","PureClass","StatelessFunctional","nextMountID","ReactCompositeComponent","construct","_compositeType","_instance","_hostParent","_hostContainerInfo","_updateBatchNumber","_pendingElement","_pendingStateQueue","_pendingReplaceState","_pendingForceUpdate","_renderedNodeType","_renderedComponent","_context","_mountOrder","_topLevelWrapper","_pendingCallbacks","_calledComponentWillUnmount","renderedElement","publicProps","publicContext","_processContext","updateQueue","getUpdateQueue","doConstruct","_constructComponent","unstable_handleError","performInitialMountWithErrorHandling","performInitialMount","getReactMountReady","_constructComponentWithoutOwner","_processPendingState","debugID","_renderValidatedComponent","getType","_instantiateReactComponent","EMPTY","_processChildContext","_maskContext","maskedContext","contextName","currentContext","childContext","_checkContextTypes","nextContext","prevContext","performUpdateIfNecessary","prevParentElement","nextParentElement","prevUnmaskedContext","nextUnmaskedContext","willReceive","prevProps","nextProps","nextState","shouldUpdate","_performComponentUpdate","partial","unmaskedContext","prevState","hasComponentDidUpdate","Boolean","_updateRenderedComponent","prevComponentInstance","prevRenderedElement","nextRenderedElement","oldHostNode","nextMarkup","_replaceNodeWithMarkup","prevInstance","_renderValidatedComponentWithoutOwnerOrContext","current","attachRef","ref","getPublicInstance","publicComponentInstance","detachRef","ReactDefaultInjection","ReactMount","ReactVersion","findDOMNode","getHostComponentFromComposite","renderSubtreeIntoContainer","inject","ReactDOM","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","__REACT_DEVTOOLS_GLOBAL_HOOK__","Mount","Reconciler","internalInstance","_owner","assertValidProps","voidElementTags","_tag","dangerouslySetInnerHTML","HTML","enqueuePutListener","ReactServerRenderingTransaction","containerInfo","_node","DOC_FRAGMENT_TYPE","_ownerDocument","listenerToPut","inputPostMount","ReactDOMInput","postMountWrapper","textareaPostMount","ReactDOMTextarea","optionPostMount","ReactDOMOption","trackInputValue","track","trapBubbledEventsLocal","getNode","mediaEvents","postUpdateSelectWrapper","ReactDOMSelect","postUpdateWrapper","validateDangerousTag","validatedTagCache","VALID_TAG_REGEX","isCustomComponent","ReactDOMComponent","_namespaceURI","_renderedChildren","_previousStyle","_previousStyleCopy","_hostNode","_domID","_flags","ReactDOMComponentFlags","ReactMultiChild","escapeTextContentForBrowser","Flags","CONTENT_TYPES","RESERVED_PROPS","suppressContentEditableWarning","omittedCloseTags","br","embed","img","keygen","link","meta","wbr","newlineEatingTags","listing","pre","textarea","menuitem","globalIdCounter","Mixin","_idCounter","mountWrapper","getHostProps","parentTag","mountImage","useCreateElement","el","div","createElementNS","precacheNode","hasCachedChildNodes","_updateDOMProperties","lazyTree","_createInitialChildren","tagOpen","_createOpenTagMarkupAndPutListeners","tagContent","_createContentMarkup","autoFocus","propKey","renderToStaticMarkup","__html","contentToUse","childrenToUse","mountChildren","lastProps","_updateDOMChildren","updateWrapper","styleUpdates","lastStyle","nextProp","lastProp","lastContent","nextContent","lastHtml","nextHtml","lastChildren","lastHasContentOrHtml","nextHasContentOrHtml","updateTextContent","updateMarkup","stopTracking","uncacheNode","shouldPrecacheNode","nodeID","ATTR_NAME","nodeValue","getRenderedHostOrTextFromComponent","rendered","hostInst","internalInstanceKey","precacheChildNodes","outer","childInst","childID","parents","closest","DOC_NODE_TYPE","topLevelWrapper","ReactDOMEmptyComponent","instantiate","domID","createComment","ReactDOMFeatureFlags","useFiber","ReactDOMIDOperations","forceUpdateIfMounted","isControlled","_handleChange","returnValue","asap","rootNode","queryRoot","group","querySelectorAll","otherNode","otherInstance","defaultChecked","defaultValue","initialValue","initialChecked","valueAsNumber","parseFloat","ReactDOMInvalidARIAHook","onBeforeMountComponent","onBeforeUpdateComponent","handleElement","didWarnValueNull","ReactDOMNullInputValuePropHook","flattenChildren","Children","didWarnInvalidOptionChildren","selectValue","selectParent","getSelectValueContext","hostProps","updateOptionsIfPendingUpdateAndMounted","pendingUpdate","updateOptions","selectedValue","options","didWarnValueDefaultValue","wasMultiple","isCollapsed","anchorNode","anchorOffset","focusOffset","getNodeForCharacterOffset","useIEOffsets","ReactDOMSelection","getOffsets","selectedRange","selection","createRange","selectedLength","fromStart","duplicate","moveToElementText","setEndPoint","startOffset","getSelection","rangeCount","currentRange","getRangeAt","startContainer","endContainer","rangeLength","tempRange","cloneRange","selectNodeContents","setEnd","endOffset","detectionRange","setStart","isBackward","collapsed","setOffsets","offsets","range","moveStart","moveEnd","select","extend","temp","startMarker","endMarker","removeAllRanges","addRange","ReactDOMTextComponent","_stringText","_mountIndex","_closingComment","_commentNodes","openingValue","createDocumentFragment","escapedText","nextText","nextStringText","commentNodes","hostNode","newValue","textContent","instA","instB","depthA","tempA","depthB","tempB","common","pathFrom","pathTo","warnUnknownProperties","validateProperty","unknownProps","ReactDOMUnknownPropertyHook","callHook","arg1","arg2","arg3","arg4","arg5","didHookThrowForEvent","emitEvent","hooks","hook","clearHistory","ReactComponentTreeHook","purgeUnmountedComponents","ReactHostOperationHistoryHook","getTreeSnapshot","registeredIDs","reduce","ownerID","getOwnerID","parentID","getParentID","getDisplayName","updateCount","getUpdateCount","childIDs","getChildIDs","resetMeasurements","previousStartTime","currentFlushStartTime","previousMeasurements","currentFlushMeasurements","previousOperations","getHistory","currentFlushNesting","getRegisteredIDs","flushHistory","duration","measurements","operations","treeSnapshot","checkDebugID","beginLifeCycleTimer","timerType","currentTimerType","lifeCycleTimerHasWarned","currentTimerStartTime","currentTimerNestedFlushDuration","currentTimerDebugID","endLifeCycleTimer","isProfiling","instanceID","pauseCurrentLifeCycleTimer","currentTimer","startTime","nestedFlushStartTime","lifeCycleTimerStack","resumeCurrentLifeCycleTimer","_lifeCycleTimerStack$","nestedFlushDuration","shouldMark","canUsePerformanceMeasure","getElement","markBegin","markType","markName","lastMarkTimeStamp","mark","markEnd","measurementName","measure","clearMarks","clearMeasures","ReactInvalidSetStateWarningHook","ReactDebugTool","addHook","removeHook","splice","beginProfiling","endProfiling","getFlushHistory","onBeginFlush","onEndFlush","onBeginLifeCycleTimer","onEndLifeCycleTimer","onBeginProcessingChildContext","onEndProcessingChildContext","onHostOperation","operation","onSetState","onSetChildren","childDebugIDs","parentDebugID","onMountComponent","onUpdateComponent","onBeforeUnmountComponent","onUnmountComponent","onTestEvent","addDevtool","removeDevtool","url","ReactDefaultBatchingStrategyTransaction","reinitializeTransaction","Transaction","RESET_BATCHED_UPDATES","initialize","close","ReactDefaultBatchingStrategy","isBatchingUpdates","TRANSACTION_WRAPPERS","flushBatchedUpdates","getTransactionWrappers","alreadyBatchingUpdates","perform","ReactDOMTreeTraversal","ReactInjection","ReactReconcileTransaction","SVGDOMPropertyConfig","SelectEventPlugin","SimpleEventPlugin","alreadyInjected","EventEmitter","HostComponent","injectGenericComponentClass","injectTextComponentClass","EmptyComponent","injectEmptyComponentFactory","Updates","injectReconcileTransaction","injectBatchingStrategy","REACT_ELEMENT_TYPE","emptyComponentFactory","ReactEmptyComponentInjection","ReactEmptyComponent","caughtError","runEventQueueInBatch","findParent","TopLevelCallbackBookKeeping","ancestors","handleTopLevelImpl","bookKeeping","ancestor","_handleTopLevel","scrollValueMonitor","cb","getUnboundedScrollPosition","_enabled","dispatchEvent","ReactFeatureFlags","logTopLevelRenders","genericComponentClass","textComponentClass","ReactHostComponent","createInternalComponent","createInstanceForText","isTextComponent","componentClass","history","_preventClearing","isInDocument","getActiveElement","ReactInputSelection","hasSelectionCapabilities","getSelectionInformation","focusedElem","selectionRange","restoreSelection","priorSelectionInformation","curFocusedElem","priorFocusedElem","priorSelectionRange","setSelection","selectionStart","selectionEnd","parentElement","createTextRange","collapse","_reactInternalInstance","has","debugTool","processingChildContext","warnInvalidSetState","adler32","TAG_END","COMMENT_START","ReactMarkupChecksum","CHECKSUM_ATTR_NAME","addChecksumToMarkup","checksum","canReuseMarkup","existingChecksum","firstDifferenceIndex","string1","string2","minLen","getReactRootElementInContainer","internalGetID","mountComponentIntoNode","wrapperInstance","shouldReuseMarkup","markerName","time","ReactDOMContainerInfo","timeEnd","_mountImageIntoNode","batchedMountComponentIntoNode","componentInstance","unmountComponentFromNode","hasNonRootReactChild","rootEl","isValidContainer","ELEMENT_NODE_TYPE","DOCUMENT_FRAGMENT_NODE_TYPE","getHostRootInstanceInContainer","prevHostInstance","getTopLevelWrapperInContainer","ReactUpdateQueue","ROOT_ATTR_NAME","instancesByReactRootID","topLevelRootCounter","TopLevelWrapper","rootID","isReactTopLevelWrapper","_instancesByReactRootID","scrollMonitor","renderCallback","_updateRootComponent","prevComponent","enqueueElementInternal","enqueueCallbackInternal","_renderNewRootComponent","wrapperID","parentComponent","_renderSubtreeIntoContainer","validateCallback","nextWrappedElement","publicInst","updatedCallback","reactRootElement","containerHasReactMarkup","containerHasNonRootReactChild","rootElement","rootMarkup","outerHTML","normalizedMarkup","diffIndex","difference","makeInsertMarkup","toIndex","fromIndex","makeMove","makeRemove","makeSetMarkup","makeTextContent","processQueue","_reconcilerInstantiateChildren","nestedChildren","_reconcilerUpdateChildren","nextNestedChildrenElements","_updateChildren","nextIndex","lastIndex","nextMountIndex","lastPlacedNode","nextChild","_mountChildAtIndex","_unmountChild","createChild","HOST","COMPOSITE","isValidOwner","ReactOwner","addComponentAsRefTo","removeComponentAsRefFrom","ownerPublicInstance","ReactPropTypeLocationNames","reactMountReady","currentlyEnabled","previouslyEnabled","attachRefs","ReactRef","detachRefs","refsChanged","shouldUpdateRefs","updateBatchNumber","prevRef","prevOwner","nextRef","nextOwner","ReactServerUpdateQueue","noopCallbackQueue","warnNoop","publicInstance","callerName","enqueueCallback","isInTransaction","enqueueForceUpdate","completeState","enqueueSetState","partialState","enqueueUpdate","formatUnexpectedArgument","getInternalInstanceReadyForUpdate","ensureInjected","batchingStrategy","ReactUpdatesFlushTransaction","dirtyComponentsLength","callbackQueue","reconcileTransaction","mountOrderComparator","runBatchedUpdates","dirtyComponents","namedComponent","asapCallbackQueue","asapEnqueued","ReconcileTransaction","_batchingStrategy","NS","xlink","xml","ATTRS","accentHeight","accumulate","additive","alignmentBaseline","allowReorder","alphabetic","amplitude","arabicForm","ascent","attributeType","autoReverse","azimuth","baseFrequency","baseProfile","baselineShift","bbox","begin","bias","by","calcMode","capHeight","clip","clipPath","clipRule","clipPathUnits","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","contentScriptType","contentStyleType","cursor","cx","cy","decelerate","descent","diffuseConstant","direction","display","dominantBaseline","dur","dx","dy","edgeMode","elevation","enableBackground","externalResourcesRequired","fill","fillRule","filterRes","filterUnits","floodColor","focusable","fontSizeAdjust","fontStretch","fx","fy","g1","g2","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","glyphRef","gradientTransform","gradientUnits","hanging","horizAdvX","horizOriginX","ideographic","imageRendering","in","in2","intercept","k4","kernelMatrix","kernelUnitLength","kerning","keyPoints","keySplines","keyTimes","lengthAdjust","letterSpacing","lightingColor","limitingConeAngle","local","markerEnd","markerMid","markerStart","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mode","numOctaves","operator","orient","orientation","origin","overflow","overlinePosition","overlineThickness","paintOrder","panose1","pathLength","patternContentUnits","patternTransform","patternUnits","pointerEvents","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","radius","refX","refY","renderingIntent","repeatCount","repeatDur","requiredExtensions","requiredFeatures","restart","rotate","rx","scale","shapeRendering","slope","spacing","specularConstant","specularExponent","speed","spreadMethod","stdDeviation","stemh","stemv","stitchTiles","stopColor","strikethroughPosition","strikethroughThickness","stroke","strokeLinecap","strokeLinejoin","surfaceScale","systemLanguage","tableValues","targetX","targetY","textAnchor","textDecoration","textRendering","textLength","transform","u1","u2","underlinePosition","underlineThickness","unicode","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","viewBox","viewTarget","visibility","widths","wordSpacing","writingMode","xHeight","xChannelSelector","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlns","xmlnsXlink","xmlLang","xmlSpace","yChannelSelector","zoomAndPan","top","boundingTop","boundingLeft","constructSelectEvent","mouseDown","currentSelection","lastSelection","syntheticEvent","skipSelectionChangeEvent","hasListener","SyntheticAnimationEvent","SyntheticClipboardEvent","SyntheticFocusEvent","SyntheticKeyboardEvent","SyntheticDragEvent","SyntheticTouchEvent","SyntheticTransitionEvent","SyntheticUIEvent","SyntheticWheelEvent","getEventCharCode","topLevelEventsToDispatchConfig","capitalizedEvent","onEvent","topEvent","onClickListeners","EventConstructor","dispatchMarker","AnimationEventInterface","animationName","elapsedTime","pseudoElement","augmentClass","ClipboardEventInterface","clipboardData","CompositionEventInterface","DragEventInterface","dataTransfer","Interface","normalize","defaultPrevented","isDefaultPrevented","shouldBeReleasedProperties","EventInterface","eventPhase","bubbles","cancelable","timeStamp","isTrusted","preventDefault","stopPropagation","cancelBubble","persist","Class","Super","FocusEventInterface","InputEventInterface","KeyboardEventInterface","shiftKey","locale","getModifierState","charCode","MouseEventInterface","screenX","screenY","clientX","clientY","buttons","srcElement","pageX","currentScrollLeft","pageY","currentScrollTop","TouchEventInterface","touches","targetTouches","changedTouches","TransitionEventInterface","UIEventInterface","WheelEventInterface","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","OBSERVED_ERROR","TransactionImpl","transactionWrappers","wrapperInitData","_isInTransaction","errorThrown","initializeAll","closeAll","startIndex","wrapper","initData","scrollPosition","MOD","typeSpecName","ex","MSApp","execUnsafeLocalFunction","arg0","isNonNumeric","escapeHtml","matchHtmlRegExp","componentOrElement","flattenSingleChildIntoContext","traverseContext","arr","normalizeKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","translateToKey","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","modifierStateGetter","keyArg","keyProp","modifierKeyToProp","Alt","Control","Meta","Shift","correspondingUseElement","getLeafNode","getSiblingNode","nodeStart","nodeEnd","contentKey","makePrefixMap","styleProp","vendorPrefixes","animationend","animationiteration","animationstart","transitionend","prefixedEventNames","animation","transition","prefixMap","isCheckable","getTracker","valueTracker","attachTracker","tracker","detachTracker","getValueFromNode","_getTrackerFromNode","valueField","descriptor","getOwnPropertyDescriptor","currentValue","defineProperty","enumerable","configurable","setValue","lastValue","nextValue","isInternalComponentType","shouldHaveDebugID","getNativeNode","ReactCompositeComponentWrapper","_mountImage","useHasFeature","implementation","hasFeature","eventNameSuffix","isSupported","supportedInputTypes","date","datetime","datetime-local","email","month","password","search","tel","week","argCount","argIdx","encodeURIComponent","reusableSVGContainer","WHITESPACE_TEST","NONVISIBLE_TEST","svgNode","testElement","textNode","deleteData","prevEmpty","nextEmpty","prevType","nextType","getComponentKey","traverseAllChildrenImpl","nameSoFar","$$typeof","SEPARATOR","subtreeCount","nextNamePrefix","SUBSEPARATOR","addendum","childrenString","validateDOMNesting","ReactBaseClasses","ReactChildren","ReactDOMFactories","ReactElement","createReactClass","onlyChild","createFactory","cloneElement","__spread","createMixin","mixin","only","PureComponent","createClass","DOM","ReactPureComponent","ComponentDummy","setState","forceUpdate","escapeUserProvidedKey","userProvidedKeyEscapeRegex","ForEachBookKeeping","forEachFunction","forEachContext","forEachSingleChild","MapBookKeeping","mapResult","keyPrefix","mapFunction","mapContext","mapSingleChildIntoContext","childKey","mappedChild","mapIntoWithKeyPrefixInternal","cloneAndReplaceKey","escapedPrefix","forEachSingleChildDummy","forEachFunc","isNative","funcToString","Function","reIsNative","purgeDeep","item","removeItem","describeComponentFrame","ownerName","fileName","lineNumber","describeID","_source","getItemIDs","addRoot","removeRoot","getRootIDs","Map","Set","itemMap","rootIDSet","itemByKey","rootByKey","getKeyFromID","getIDFromKey","unmountedIDs","nextChildIDs","nextChildID","_preventPurging","getCurrentStackAddendum","topElement","currentOwner","_debugID","getStackAddendumByID","getSource","pushNonStandardWarningStack","isCreatingElement","currentSource","reactStack","popNonStandardWarningStack","reactStackEnd","createDOMFactory","abbr","address","article","aside","audio","bdi","bdo","big","blockquote","canvas","datalist","dd","del","details","dfn","dialog","dl","dt","em","fieldset","figcaption","figure","footer","h3","h4","h5","h6","head","header","hgroup","iframe","ins","kbd","main","menu","meter","nav","noscript","ol","picture","progress","rp","ruby","samp","script","section","small","strong","sup","ul","var","video","circle","defs","ellipse","linearGradient","polygon","polyline","radialGradient","rect","stop","tspan","hasValidRef","config","hasValidKey","__self","__source","self","childrenLength","childArray","oldElement","newKey","_self","getSourceInfoErrorAddendum","elementProps","getCurrentComponentErrorInfo","parentType","parentName","validateExplicitKey","_store","validated","memoizer","ownerHasKeyUseWarning","uniqueKey","currentComponentErrorInfo","validateChildKeys","validatePropTypes","checkReactTypeSpec","ReactElementValidator","validType","sourceInfo","validatedFactory","newElement","canDefineProperty","nextDebugID","lowPriorityWarning"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// Js_of_ocaml runtime support\n// http://www.ocsigen.org/js_of_ocaml/\n// Copyright (C) 2010 Jérôme Vouillon\n// Laboratoire PPS - CNRS Université Paris Diderot\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, with linking exception;\n// either version 2.1 of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n///////////// Core\n\n//Provides: raw_array_sub\nfunction raw_array_sub (a,i,l) {\n  var b = new Array(l);\n  for(var j = 0; j < l; j++) b[j] = a[i+j];\n  return b\n}\n\n//Provides: raw_array_copy\nfunction raw_array_copy (a) {\n  var l = a.length;\n  var b = new Array(l);\n  for(var i = 0; i < l; i++ ) b[i] = a[i];\n  return b\n}\n\n//Provides: raw_array_cons\nfunction raw_array_cons (a,x) {\n  var l = a.length;\n  var b = new Array(l+1);\n  b[0]=x;\n  for(var i = 1; i <= l; i++ ) b[i] = a[i-1];\n  return b\n}\n\n//Provides: raw_array_append_one\nfunction raw_array_append_one(a,x) {\n  var l = a.length;\n  var b = new Array(l+1);\n  var i = 0;\n  for(; i < l; i++ ) b[i] = a[i];\n  b[i]=x;\n  return b\n}\n\n//Provides: caml_call_gen (const, shallow)\n//Requires: raw_array_sub\n//Requires: raw_array_append_one\nfunction caml_call_gen(f, args) {\n  if(f.fun)\n    return caml_call_gen(f.fun, args);\n  var n = f.length;\n  var argsLen = args.length;\n  var d = n - argsLen;\n  if (d == 0)\n    return f.apply(null, args);\n  else if (d < 0)\n    return caml_call_gen(f.apply(null,\n                                 raw_array_sub(args,0,n)),\n                         raw_array_sub(args,n,argsLen - n));\n  else\n    return function (x){ return caml_call_gen(f, raw_array_append_one(args,x)); };\n}\n\n//Provides: caml_named_values\nvar caml_named_values = {};\n\n//Provides: caml_register_named_value (const,const)\n//Requires: caml_named_values, caml_bytes_of_string\nfunction caml_register_named_value(nm,v) {\n  caml_named_values[caml_bytes_of_string(nm)] = v;\n  return 0;\n}\n\n//Provides: caml_named_value\n//Requires: caml_named_values\nfunction caml_named_value(nm) {\n  return caml_named_values[nm]\n}\n\n//Provides: caml_global_data\nvar caml_global_data = [0];\n\n//Provides: caml_register_global (const, shallow, const)\n//Requires: caml_global_data\nfunction caml_register_global (n, v, name_opt) {\n  caml_global_data[n + 1] = v;\n  if(name_opt) caml_global_data[name_opt] = v;\n}\n\n//Provides: caml_get_global_data mutable\n//Requires: caml_global_data\nfunction caml_get_global_data () { return caml_global_data; }\n\n//Raise exception\n\n\n//Provides: caml_raise_constant (const)\n//Version: < 4.02\nfunction caml_raise_constant (tag) { throw [0, tag]; }\n\n//Provides: caml_raise_constant (const)\n//Version: >= 4.02\nfunction caml_raise_constant (tag) { throw tag; }\n\n//Provides: caml_return_exn_constant (const)\n//Version: < 4.02\nfunction caml_return_exn_constant (tag) { return [0, tag]; }\n\n//Provides: caml_return_exn_constant (const)\n//Version: >= 4.02\nfunction caml_return_exn_constant (tag) { return tag; }\n\n//Provides: caml_raise_with_arg (const, const)\nfunction caml_raise_with_arg (tag, arg) { throw [0, tag, arg]; }\n\n//Provides: caml_raise_with_string (const, const)\n//Requires: caml_raise_with_arg,caml_new_string\nfunction caml_raise_with_string (tag, msg) {\n  caml_raise_with_arg (tag, caml_new_string (msg));\n}\n\n//Provides: caml_raise_sys_error (const)\n//Requires: caml_raise_with_string, caml_global_data\nfunction caml_raise_sys_error (msg) {\n  caml_raise_with_string(caml_global_data.Sys_error, msg);\n}\n\n//Provides: caml_failwith (const)\n//Requires: caml_raise_with_string, caml_global_data\nfunction caml_failwith (msg) {\n  caml_raise_with_string(caml_global_data.Failure, msg);\n}\n\n//Provides: caml_wrap_exception const (const)\n//Requires: caml_global_data,caml_js_to_string,caml_named_value\n//Requires: caml_return_exn_constant\nfunction caml_wrap_exception(e) {\n  if(e instanceof Array) return e;\n  //Stack_overflow: chrome, safari\n  if(joo_global_object.RangeError\n     && e instanceof joo_global_object.RangeError\n     && e.message\n     && e.message.match(/maximum call stack/i))\n    return caml_return_exn_constant(caml_global_data.Stack_overflow);\n  //Stack_overflow: firefox\n  if(joo_global_object.InternalError\n     && e instanceof joo_global_object.InternalError\n     && e.message\n     && e.message.match(/too much recursion/i))\n    return caml_return_exn_constant(caml_global_data.Stack_overflow);\n  //Wrap Error in Js.Error exception\n  if(e instanceof joo_global_object.Error && caml_named_value(\"jsError\"))\n    return [0,caml_named_value(\"jsError\"),e];\n  //fallback: wrapped in Failure\n  return [0,caml_global_data.Failure,caml_js_to_string (String(e))];\n}\n\n// Experimental\n//Provides: caml_exn_with_js_backtrace\n//Requires: caml_global_data\nfunction caml_exn_with_js_backtrace(exn, force) {\n  if(!exn.js_error || force) exn.js_error = new joo_global_object.Error(\"Js exception containing backtrace\");\n  return exn;\n}\n//Provides: caml_js_error_of_exception\nfunction caml_js_error_of_exception(exn) {\n  if(exn.js_error) { return exn.js_error; }\n  return null;\n}\n\n//Provides: caml_invalid_argument (const)\n//Requires: caml_raise_with_string, caml_global_data\nfunction caml_invalid_argument (msg) {\n  caml_raise_with_string(caml_global_data.Invalid_argument, msg);\n}\n\n//Provides: caml_raise_end_of_file\n//Requires: caml_raise_constant, caml_global_data\nfunction caml_raise_end_of_file () {\n  caml_raise_constant(caml_global_data.End_of_file);\n}\n\n//Provides: caml_raise_zero_divide\n//Requires: caml_raise_constant, caml_global_data\nfunction caml_raise_zero_divide () {\n  caml_raise_constant(caml_global_data.Division_by_zero);\n}\n\n//Provides: caml_raise_not_found\n//Requires: caml_raise_constant, caml_global_data\nfunction caml_raise_not_found () {\n  caml_raise_constant(caml_global_data.Not_found); }\n\n\n//Provides: caml_array_bound_error\n//Requires: caml_invalid_argument\nfunction caml_array_bound_error () {\n  caml_invalid_argument(\"index out of bounds\");\n}\n\n//Provides: caml_update_dummy\nfunction caml_update_dummy (x, y) {\n  if( typeof y===\"function\" ) { x.fun = y; return 0; }\n  if( y.fun ) { x.fun = y.fun; return 0; }\n  var i = y.length; while (i--) x[i] = y[i]; return 0;\n}\n\n//Provides: caml_obj_is_block const (const)\nfunction caml_obj_is_block (x) { return +(x instanceof Array); }\n//Provides: caml_obj_tag const (const)\n//Requires: MlString\nfunction caml_obj_tag (x) { return (x instanceof Array)?x[0]:(x instanceof MlString)?252:1000; }\n//Provides: caml_obj_set_tag (mutable, const)\nfunction caml_obj_set_tag (x, tag) { x[0] = tag; return 0; }\n//Provides: caml_obj_block const (const,const)\nfunction caml_obj_block (tag, size) {\n  var o = new Array(size+1);\n  o[0]=tag;\n  for (var i = 1; i <= size; i++) o[i] = 0;\n  return o;\n}\n//Provides: caml_obj_dup mutable (const)\nfunction caml_obj_dup (x) {\n  var l = x.length;\n  var a = new Array(l);\n  for(var i = 0; i < l; i++ ) a[i] = x[i];\n  return a;\n}\n//Provides: caml_obj_truncate (mutable, const)\n//Requires: caml_invalid_argument\nfunction caml_obj_truncate (x, s) {\n  if (s<=0 || s + 1 > x.length)\n    caml_invalid_argument (\"Obj.truncate\");\n  if (x.length != s + 1) x.length = s + 1;\n  return 0;\n}\n\n//Provides: caml_lazy_make_forward const (const)\nfunction caml_lazy_make_forward (v) { return [250, v]; }\n\n//Provides: caml_mul const\nif (!Math.imul)\n  Math.imul =\n    function (x,y)\n    { y |= 0; return ((((x >> 16) * y) << 16) + (x & 0xffff) * y)|0; };\nvar caml_mul = Math.imul;\n\n//slightly slower\n// function mul32(x,y) {\n//   var xlo = x & 0xffff;\n//   var xhi = x - xlo;\n//   return (((xhi * y) |0) + xlo * y)|0;\n// }\n\n//Provides: caml_div\n//Requires: caml_raise_zero_divide\nfunction caml_div(x,y) {\n  if (y == 0) caml_raise_zero_divide ();\n  return (x/y)|0;\n}\n\n//Provides: caml_mod\n//Requires: caml_raise_zero_divide\nfunction caml_mod(x,y) {\n  if (y == 0) caml_raise_zero_divide ();\n  return x%y;\n}\n\n///////////// Pervasive\n//Provides: caml_array_set (mutable, const, const)\n//Requires: caml_array_bound_error\nfunction caml_array_set (array, index, newval) {\n  if ((index < 0) || (index >= array.length - 1)) caml_array_bound_error();\n  array[index+1]=newval; return 0;\n}\n\n//Provides: caml_array_get mutable (const, const)\n//Requires: caml_array_bound_error\nfunction caml_array_get (array, index) {\n  if ((index < 0) || (index >= array.length - 1)) caml_array_bound_error();\n  return array[index+1];\n}\n\n//Provides: caml_check_bound (const, const)\n//Requires: caml_array_bound_error\nfunction caml_check_bound (array, index) {\n  if (index >>> 0 >= array.length - 1) caml_array_bound_error();\n  return array;\n}\n\n//Provides: caml_make_vect const (const, const)\nfunction caml_make_vect (len, init) {\n  var len = len + 1 | 0;\n  var b = new Array(len);\n  b[0]=0;\n  for (var i = 1; i < len; i++) b[i] = init;\n  return b;\n}\n\n//Provides: caml_make_float_vect const (const)\nfunction caml_make_float_vect(len){\n  var len = len + 1 | 0;\n  var b = new Array(len);\n  b[0]=254;\n  for (var i = 1; i < len; i++) b[i] = 0;\n  return b\n}\n\n//Provides: caml_compare_val (const, const, const)\n//Requires: MlString, caml_int64_compare, caml_int_compare, caml_string_compare\n//Requires: caml_invalid_argument\nfunction caml_compare_val (a, b, total) {\n  var stack = [];\n  for(;;) {\n    if (!(total && a === b)) {\n      if (a instanceof MlString) {\n        if (b instanceof MlString) {\n            if (a !== b) {\n\t\tvar x = caml_string_compare(a, b);\n\t\tif (x != 0) return x;\n\t    }\n        } else\n          // Should not happen\n          return 1;\n      } else if (a instanceof Array && a[0] === (a[0]|0)) {\n        var ta = a[0];\n        // ignore double_array_tag\n        if (ta === 254) ta=0;\n        // Forward object\n        if (ta === 250) {\n          a = a[1];\n          continue;\n        } else if (b instanceof Array && b[0] === (b[0]|0)) {\n          var tb = b[0];\n          // ignore double_array_tag\n          if (tb === 254) tb=0;\n          // Forward object\n          if (tb === 250) {\n            b = b[1];\n            continue;\n          } else if (ta != tb) {\n            return (ta < tb)?-1:1;\n          } else {\n            switch (ta) {\n            case 248: {\n\t\t// Object\n\t\tvar x = caml_int_compare(a[2], b[2]);\n\t\tif (x != 0) return x;\n\t\tbreak;\n\t    }\n            case 251: {\n                caml_invalid_argument(\"equal: abstract value\");\n            }\n            case 255: {\n\t\t// Int64\n\t\tvar x = caml_int64_compare(a, b);\n\t\tif (x != 0) return x;\n\t\tbreak;\n\t    }\n            default:\n              if (a.length != b.length) return (a.length < b.length)?-1:1;\n              if (a.length > 1) stack.push(a, b, 1);\n            }\n          }\n        } else\n          return 1;\n      } else if (b instanceof MlString ||\n                 (b instanceof Array && b[0] === (b[0]|0))) {\n        return -1;\n      } else if (typeof a != \"number\" && a && a.compare) {\n        return a.compare(b,total);\n      } else if (typeof a == \"function\") {\n        caml_invalid_argument(\"compare: functional value\");\n      } else {\n        if (a < b) return -1;\n        if (a > b) return 1;\n        if (a != b) {\n          if (!total) return NaN;\n          if (a == a) return 1;\n          if (b == b) return -1;\n        }\n      }\n    }\n    if (stack.length == 0) return 0;\n    var i = stack.pop();\n    b = stack.pop();\n    a = stack.pop();\n    if (i + 1 < a.length) stack.push(a, b, i + 1);\n    a = a[i];\n    b = b[i];\n  }\n}\n//Provides: caml_compare (const, const)\n//Requires: caml_compare_val\nfunction caml_compare (a, b) { return caml_compare_val (a, b, true); }\n//Provides: caml_int_compare mutable (const, const)\nfunction caml_int_compare (a, b) {\n  if (a < b) return (-1); if (a == b) return 0; return 1;\n}\n//Provides: caml_equal mutable (const, const)\n//Requires: caml_compare_val\nfunction caml_equal (x, y) { return +(caml_compare_val(x,y,false) == 0); }\n//Provides: caml_notequal mutable (const, const)\n//Requires: caml_compare_val\nfunction caml_notequal (x, y) { return +(caml_compare_val(x,y,false) != 0); }\n//Provides: caml_greaterequal mutable (const, const)\n//Requires: caml_compare_val\nfunction caml_greaterequal (x, y) { return +(caml_compare_val(x,y,false) >= 0); }\n//Provides: caml_greaterthan mutable (const, const)\n//Requires: caml_compare_val\nfunction caml_greaterthan (x, y) { return +(caml_compare_val(x,y,false) > 0); }\n//Provides: caml_lessequal mutable (const, const)\n//Requires: caml_compare_val\nfunction caml_lessequal (x, y) { return +(caml_compare_val(x,y,false) <= 0); }\n//Provides: caml_lessthan mutable (const, const)\n//Requires: caml_compare_val\nfunction caml_lessthan (x, y) { return +(caml_compare_val(x,y,false) < 0); }\n\n//Provides: caml_parse_sign_and_base\n//Requires: caml_string_unsafe_get, caml_ml_string_length\nfunction caml_parse_sign_and_base (s) {\n  var i = 0, len = caml_ml_string_length(s), base = 10,\n     sign = (len > 0 && caml_string_unsafe_get(s,0) == 45)?(i++,-1):1;\n  if (i + 1 < len && caml_string_unsafe_get(s, i) == 48)\n    switch (caml_string_unsafe_get(s, i + 1)) {\n    case 120: case 88: base = 16; i += 2; break;\n    case 111: case 79: base =  8; i += 2; break;\n    case  98: case 66: base =  2; i += 2; break;\n    }\n  return [i, sign, base];\n}\n\n//Provides: caml_parse_digit\nfunction caml_parse_digit(c) {\n  if (c >= 48 && c <= 57)  return c - 48;\n  if (c >= 65 && c <= 90)  return c - 55;\n  if (c >= 97 && c <= 122) return c - 87;\n  return -1;\n}\n\n//Provides: caml_int_of_string (const)\n//Requires: caml_ml_string_length, caml_string_unsafe_get\n//Requires: caml_parse_sign_and_base, caml_parse_digit, caml_failwith\nfunction caml_int_of_string (s) {\n  var r = caml_parse_sign_and_base (s);\n  var i = r[0], sign = r[1], base = r[2];\n  var len = caml_ml_string_length(s);\n  var threshold = -1 >>> 0;\n  var c = (i < len)?caml_string_unsafe_get(s, i):0;\n  var d = caml_parse_digit(c);\n  if (d < 0 || d >= base) caml_failwith(\"int_of_string\");\n  var res = d;\n  for (i++;i<len;i++) {\n    c = caml_string_unsafe_get(s, i);\n    if (c == 95) continue;\n    d = caml_parse_digit(c);\n    if (d < 0 || d >= base) break;\n    res = base * res + d;\n    if (res > threshold) caml_failwith(\"int_of_string\");\n  }\n  if (i != len) caml_failwith(\"int_of_string\");\n  // For base different from 10, we expect an unsigned representation,\n  // hence any value of 'res' (less than 'threshold') is acceptable.\n  // But we have to convert the result back to a signed integer.\n  res = sign * res;\n  if ((base == 10) && ((res | 0) != res))\n    /* Signed representation expected, allow -2^(nbits-1) to 2^(nbits-1) - 1 */\n    caml_failwith(\"int_of_string\");\n  return res | 0;\n}\n\n//Provides: caml_float_of_string (const)\n//Requires: caml_failwith, caml_bytes_of_string\nfunction caml_float_of_string(s) {\n  var res;\n  s = caml_bytes_of_string (s);\n  res = +s;\n  if ((s.length > 0) && (res === res)) return res;\n  s = s.replace(/_/g,\"\");\n  res = +s;\n  if (((s.length > 0) && (res === res)) || /^[+-]?nan$/i.test(s)) return res;\n  var m = /^ *([+-]?)0x([0-9a-f]+)\\.?([0-9a-f]*)p([+-]?[0-9]+)/i.exec(s);\n//            1        2             3           4\n  if(m){\n    var m3 = m[3].replace(/0+$/,'');\n    var mantissa = parseInt(m[1] + m[2] + m3, 16);\n    var exponent = (m[4]|0) - 4*m3.length;\n    res = mantissa * Math.pow(2, exponent);\n    return res;\n  }\n  if(/^\\+?inf(inity)?$/i.test(s)) return Infinity;\n  if(/^-inf(inity)?$/i.test(s)) return -Infinity;\n  caml_failwith(\"float_of_string\");\n}\n\n//Provides: caml_is_printable const (const)\nfunction caml_is_printable(c) { return +(c > 31 && c < 127); }\n\n///////////// Format\n//Provides: caml_parse_format\n//Requires: caml_bytes_of_string, caml_invalid_argument\nfunction caml_parse_format (fmt) {\n  fmt = caml_bytes_of_string(fmt);\n  var len = fmt.length;\n  if (len > 31) caml_invalid_argument(\"format_int: format too long\");\n  var f =\n    { justify:'+', signstyle:'-', filler:' ', alternate:false,\n      base:0, signedconv:false, width:0, uppercase:false,\n      sign:1, prec:-1, conv:'f' };\n  for (var i = 0; i < len; i++) {\n    var c = fmt.charAt(i);\n    switch (c) {\n    case '-':\n      f.justify = '-'; break;\n    case '+': case ' ':\n      f.signstyle = c; break;\n    case '0':\n      f.filler = '0'; break;\n    case '#':\n      f.alternate = true; break;\n    case '1': case '2': case '3': case '4': case '5':\n    case '6': case '7': case '8': case '9':\n      f.width = 0;\n      while (c=fmt.charCodeAt(i) - 48, c >= 0 && c <= 9) {\n        f.width = f.width * 10 + c; i++\n      }\n      i--;\n     break;\n    case '.':\n      f.prec = 0;\n      i++;\n      while (c=fmt.charCodeAt(i) - 48, c >= 0 && c <= 9) {\n        f.prec = f.prec * 10 + c; i++\n      }\n      i--;\n    case 'd': case 'i':\n      f.signedconv = true; /* fallthrough */\n    case 'u':\n      f.base = 10; break;\n    case 'x':\n      f.base = 16; break;\n    case 'X':\n      f.base = 16; f.uppercase = true; break;\n    case 'o':\n      f.base = 8; break;\n    case 'e': case 'f': case 'g':\n      f.signedconv = true; f.conv = c; break;\n    case 'E': case 'F': case 'G':\n      f.signedconv = true; f.uppercase = true;\n      f.conv = c.toLowerCase (); break;\n    }\n  }\n  return f;\n}\n\n//Provides: caml_finish_formatting\n//Requires: caml_new_string\nfunction caml_finish_formatting(f, rawbuffer) {\n  if (f.uppercase) rawbuffer = rawbuffer.toUpperCase();\n  var len = rawbuffer.length;\n  /* Adjust len to reflect additional chars (sign, etc) */\n  if (f.signedconv && (f.sign < 0 || f.signstyle != '-')) len++;\n  if (f.alternate) {\n    if (f.base == 8) len += 1;\n    if (f.base == 16) len += 2;\n  }\n  /* Do the formatting */\n  var buffer = \"\";\n  if (f.justify == '+' && f.filler == ' ')\n    for (var i = len; i < f.width; i++) buffer += ' ';\n  if (f.signedconv) {\n    if (f.sign < 0) buffer += '-';\n    else if (f.signstyle != '-') buffer += f.signstyle;\n  }\n  if (f.alternate && f.base == 8) buffer += '0';\n  if (f.alternate && f.base == 16) buffer += \"0x\";\n  if (f.justify == '+' && f.filler == '0')\n    for (var i = len; i < f.width; i++) buffer += '0';\n  buffer += rawbuffer;\n  if (f.justify == '-')\n    for (var i = len; i < f.width; i++) buffer += ' ';\n  return caml_new_string (buffer);\n}\n\n//Provides: caml_format_int const (const, const)\n//Requires: caml_parse_format, caml_finish_formatting, caml_str_repeat\n//Requires: caml_new_string, caml_bytes_of_string\nfunction caml_format_int(fmt, i) {\n  if (caml_bytes_of_string(fmt) == \"%d\") return caml_new_string(\"\"+i);\n  var f = caml_parse_format(fmt);\n  if (i < 0) { if (f.signedconv) { f.sign = -1; i = -i; } else i >>>= 0; }\n  var s = i.toString(f.base);\n  if (f.prec >= 0) {\n    f.filler = ' ';\n    var n = f.prec - s.length;\n    if (n > 0) s = caml_str_repeat (n, '0') + s;\n  }\n  return caml_finish_formatting(f, s);\n}\n\n//Provides: caml_format_float const\n//Requires: caml_parse_format, caml_finish_formatting\nfunction caml_format_float (fmt, x) {\n  var s, f = caml_parse_format(fmt);\n  var prec = (f.prec < 0)?6:f.prec;\n  if (x < 0 || (x == 0 && 1/x == -Infinity)) { f.sign = -1; x = -x; }\n  if (isNaN(x)) { s = \"nan\"; f.filler = ' '; }\n  else if (!isFinite(x)) { s = \"inf\"; f.filler = ' '; }\n  else\n    switch (f.conv) {\n    case 'e':\n      var s = x.toExponential(prec);\n      // exponent should be at least two digits\n      var i = s.length;\n      if (s.charAt(i - 3) == 'e')\n        s = s.slice (0, i - 1) + '0' + s.slice (i - 1);\n      break;\n    case 'f':\n      s = x.toFixed(prec); break;\n    case 'g':\n      prec = prec?prec:1;\n      s = x.toExponential(prec - 1);\n      var j = s.indexOf('e');\n      var exp = +s.slice(j + 1);\n      if (exp < -4 || x >= 1e21 || x.toFixed(0).length > prec) {\n        // remove trailing zeroes\n        var i = j - 1; while (s.charAt(i) == '0') i--;\n        if (s.charAt(i) == '.') i--;\n        s = s.slice(0, i + 1) + s.slice(j);\n        i = s.length;\n        if (s.charAt(i - 3) == 'e')\n          s = s.slice (0, i - 1) + '0' + s.slice (i - 1);\n        break;\n      } else {\n        var p = prec;\n        if (exp < 0) { p -= exp + 1; s = x.toFixed(p); }\n        else while (s = x.toFixed(p), s.length > prec + 1) p--;\n        if (p) {\n          // remove trailing zeroes\n          var i = s.length - 1; while (s.charAt(i) == '0') i--;\n          if (s.charAt(i) == '.') i--;\n          s = s.slice(0, i + 1);\n        }\n      }\n      break;\n    }\n  return caml_finish_formatting(f, s);\n}\n\n///////////// Hashtbl\n//Provides: caml_hash_univ_param mutable\n//Requires: MlString, caml_convert_string_to_bytes\n//Requires: caml_int64_to_bytes, caml_int64_bits_of_float\nfunction caml_hash_univ_param (count, limit, obj) {\n  var hash_accu = 0;\n  function hash_aux (obj) {\n    limit --;\n    if (count < 0 || limit < 0) return;\n    if (obj instanceof Array && obj[0] === (obj[0]|0)) {\n      switch (obj[0]) {\n      case 248:\n        // Object\n        count --;\n        hash_accu = (hash_accu * 65599 + obj[2]) | 0;\n        break;\n      case 250:\n        // Forward\n        limit++; hash_aux(obj); break;\n      case 255:\n        // Int64\n        count --;\n        hash_accu = (hash_accu * 65599 + obj[1] + (obj[2] << 24)) | 0;\n        break;\n      default:\n        count --;\n        hash_accu = (hash_accu * 19 + obj[0]) | 0;\n        for (var i = obj.length - 1; i > 0; i--) hash_aux (obj[i]);\n      }\n    } else if (obj instanceof MlString) {\n      count --;\n      switch (obj.t & 6) {\n      default: /* PARTIAL */\n        caml_convert_string_to_bytes(obj);\n      case 0: /* BYTES */\n        for (var b = obj.c, l = obj.l, i = 0; i < l; i++)\n          hash_accu = (hash_accu * 19 + b.charCodeAt(i)) | 0;\n        break;\n      case 2: /* ARRAY */\n        for (var a = obj.c, l = obj.l, i = 0; i < l; i++)\n          hash_accu = (hash_accu * 19 + a[i]) | 0;\n      }\n    } else if (obj === (obj|0)) {\n      // Integer\n      count --;\n      hash_accu = (hash_accu * 65599 + obj) | 0;\n    } else if (obj === +obj) {\n      // Float\n      count--;\n      var p = caml_int64_to_bytes (caml_int64_bits_of_float (obj));\n      for (var i = 7; i >= 0; i--) hash_accu = (hash_accu * 19 + p[i]) | 0;\n    }\n  }\n  hash_aux (obj);\n  return hash_accu & 0x3FFFFFFF;\n}\n\n//function ROTL32(x,n) { return ((x << n) | (x >>> (32-n))); }\n//Provides: caml_hash_mix_int\n//Requires: caml_mul\nfunction caml_hash_mix_int(h,d) {\n  d = caml_mul(d, 0xcc9e2d51|0);\n  d = ((d << 15) | (d >>> (32-15))); // ROTL32(d, 15);\n  d = caml_mul(d, 0x1b873593);\n  h ^= d;\n  h = ((h << 13) | (h >>> (32-13)));   //ROTL32(h, 13);\n  return (((h + (h << 2))|0) + (0xe6546b64|0))|0;\n}\n\n//Provides: caml_hash_mix_final\n//Requires: caml_mul\nfunction caml_hash_mix_final(h) {\n  h ^= h >>> 16;\n  h = caml_mul (h, 0x85ebca6b|0);\n  h ^= h >>> 13;\n  h = caml_mul (h, 0xc2b2ae35|0);\n  h ^= h >>> 16;\n  return h;\n}\n\n//Provides: caml_hash_mix_float\n//Requires: caml_hash_mix_int, caml_int64_bits_of_float\nfunction caml_hash_mix_float (h, v0) {\n  var v = caml_int64_bits_of_float (v0);\n  var lo = v[1] | (v[2] << 24);\n  var hi = (v[2] >>> 8) | (v[3] << 16);\n  h = caml_hash_mix_int(h, lo);\n  h = caml_hash_mix_int(h, hi);\n  return h;\n}\n//Provides: caml_hash_mix_int64\n//Requires: caml_hash_mix_int\nfunction caml_hash_mix_int64 (h, v) {\n  var lo = v[1] | (v[2] << 24);\n  var hi = (v[2] >>> 8) | (v[3] << 16);\n  h = caml_hash_mix_int(h, hi ^ lo);\n  return h;\n}\n\n//Provides: caml_hash_mix_string_str\n//Requires: caml_hash_mix_int\nfunction caml_hash_mix_string_str(h, s) {\n  var len = s.length, i, w;\n  for (i = 0; i + 4 <= len; i += 4) {\n    w = s.charCodeAt(i)\n        | (s.charCodeAt(i+1) << 8)\n        | (s.charCodeAt(i+2) << 16)\n        | (s.charCodeAt(i+3) << 24);\n    h = caml_hash_mix_int(h, w);\n  }\n  w = 0;\n  switch (len & 3) {\n  case 3: w  = s.charCodeAt(i+2) << 16;\n  case 2: w |= s.charCodeAt(i+1) << 8;\n  case 1: w |= s.charCodeAt(i);\n          h = caml_hash_mix_int(h, w);\n  default:\n  }\n  h ^= len;\n  return h;\n}\n\n//Provides: caml_hash_mix_string_arr\n//Requires: caml_hash_mix_int\nfunction caml_hash_mix_string_arr(h, s) {\n  var len = s.length, i, w;\n  for (i = 0; i + 4 <= len; i += 4) {\n    w = s[i]\n      | (s[i+1] << 8)\n      | (s[i+2] << 16)\n      | (s[i+3] << 24);\n    h = caml_hash_mix_int(h, w);\n  }\n  w = 0;\n  switch (len & 3) {\n  case 3: w  = s[i+2] << 16;\n  case 2: w |= s[i+1] << 8;\n  case 1: w |= s[i];\n    h = caml_hash_mix_int(h, w);\n  default:\n  }\n  h ^= len;\n  return h;\n}\n\n//Provides: caml_hash_mix_string\n//Requires: caml_convert_string_to_bytes\n//Requires: caml_hash_mix_string_str\n//Requires: caml_hash_mix_string_arr\nfunction caml_hash_mix_string(h, v) {\n    switch (v.t & 6) {\n    default:\n        caml_convert_string_to_bytes (v);\n    case 0: /* BYTES */\n        h = caml_hash_mix_string_str(h, v.c);\n        break;\n    case 2: /* ARRAY */\n        h = caml_hash_mix_string_arr(h, v.c);\n    }\n    return h\n}\n\n\n//Provides: caml_hash mutable\n//Requires: MlString\n//Requires: caml_int64_bits_of_float, caml_hash_mix_int, caml_hash_mix_final\n//Requires: caml_hash_mix_int64, caml_hash_mix_float, caml_hash_mix_string\nvar HASH_QUEUE_SIZE = 256;\nfunction caml_hash (count, limit, seed, obj) {\n    var queue, rd, wr, sz, num, h, v, i, len;\n    sz = limit;\n    if (sz < 0 || sz > HASH_QUEUE_SIZE) sz = HASH_QUEUE_SIZE;\n    num = count;\n    h = seed;\n    queue = [obj]; rd = 0; wr = 1;\n    while (rd < wr && num > 0) {\n        v = queue[rd++];\n        if (v instanceof Array && v[0] === (v[0]|0)) {\n            switch (v[0]) {\n            case 248:\n                // Object\n                h = caml_hash_mix_int(h, v[2]);\n                num--;\n                break;\n            case 250:\n                // Forward\n                queue[--rd] = v[1];\n                break;\n            case 255:\n                // Int64\n                h = caml_hash_mix_int64 (h, v);\n                num --;\n                break;\n            default:\n                var tag = ((v.length - 1) << 10) | v[0];\n                h = caml_hash_mix_int(h, tag);\n                for (i = 1, len = v.length; i < len; i++) {\n                    if (wr >= sz) break;\n                    queue[wr++] = v[i];\n                }\n                break;\n            }\n        } else if (v instanceof MlString) {\n            h = caml_hash_mix_string(h,v)\n            num--;\n        } else if (v === (v|0)) {\n            // Integer\n            h = caml_hash_mix_int(h, v+v+1);\n            num--;\n        } else if (v === +v) {\n            // Float\n            h = caml_hash_mix_float(h,v);\n            num--;\n        }\n    }\n    h = caml_hash_mix_final(h);\n    return h & 0x3FFFFFFF;\n}\n\n///////////// Sys\n//Provides: caml_sys_time mutable\nvar caml_initial_time = new Date() * 0.001;\nfunction caml_sys_time () { return new Date() * 0.001 - caml_initial_time; }\n//Provides: caml_sys_get_config const\n//Requires: caml_new_string\nfunction caml_sys_get_config () {\n  return [0, caml_new_string(\"Unix\"), 32, 0];\n}\n\n//Provides: caml_sys_const_backend_type const\n//Requires: caml_new_string\nfunction caml_sys_const_backend_type () {\n  return [0, caml_new_string(\"js_of_ocaml\")];\n}\n\n\n//Provides: caml_sys_random_seed mutable\n//Version: < 4.00\n//The function needs to return an array since OCaml 4.0...\nfunction caml_sys_random_seed () {\n  var x = new Date()^0xffffffff*Math.random();\n  return x;\n}\n\n//Provides: caml_sys_random_seed mutable\n//Version: >= 4.00\n//The function needs to return an array since OCaml 4.0...\nfunction caml_sys_random_seed () {\n  var x = new Date()^0xffffffff*Math.random();\n  return [0,x];\n}\n\n\n\n//Provides: caml_sys_const_big_endian const\nfunction caml_sys_const_big_endian () { return 0; }\n//Provides: caml_sys_const_word_size const\nfunction caml_sys_const_word_size () { return 32; }\n//Provides: caml_sys_const_int_size const\nfunction caml_sys_const_int_size () { return 32; }\n\n//Provides: caml_sys_const_max_wosize const\n// max_int / 4 so that the following does not overflow\n//let max_string_length = word_size / 8 * max_array_length - 1;;\nfunction caml_sys_const_max_wosize () { return (0x7FFFFFFF/4) | 0;}\n\n//Provides: caml_sys_const_ostype_cygwin const\nfunction caml_sys_const_ostype_cygwin () { return 0; }\n//Provides: caml_sys_const_ostype_unix const\nfunction caml_sys_const_ostype_unix () { return 1; }\n//Provides: caml_sys_const_ostype_win32 const\nfunction caml_sys_const_ostype_win32 () { return 0; }\n\n//Provides: caml_sys_system_command\nfunction caml_sys_system_command(cmd){\n  var cmd = cmd.toString();\n  joo_global_object.console.log(cmd);\n  if (typeof require != \"undefined\"\n      && require('child_process')\n      && require('child_process').execSync) {\n    try {require('child_process').execSync(cmd); return 0}\n    catch (e) {return 1}\n  }\n  else return 127;\n}\n\n///////////// Array\n//Provides: caml_array_sub mutable\nfunction caml_array_sub (a, i, len) {\n  var a2 = new Array(len+1);\n  a2[0]=0;\n  for(var i2 = 1, i1= i+1; i2 <= len; i2++,i1++ ){\n    a2[i2]=a[i1];\n  }\n  return a2;\n}\n\n//Provides: caml_array_append mutable\nfunction caml_array_append(a1, a2) {\n  var l1 = a1.length, l2 = a2.length;\n  var l = l1+l2-1\n  var a = new Array(l);\n  a[0] = 0;\n  var i = 1,j = 1;\n  for(;i<l1;i++) a[i]=a1[i];\n  for(;i<l;i++,j++) a[i]=a2[j];\n  return a;\n}\n\n//Provides: caml_array_concat mutable\nfunction caml_array_concat(l) {\n  var a = [0];\n  while (l !== 0) {\n    var b = l[1];\n    for (var i = 1; i < b.length; i++) a.push(b[i]);\n    l = l[2];\n  }\n  return a;\n}\n\n//Provides: caml_array_blit\nfunction caml_array_blit(a1, i1, a2, i2, len) {\n  if (i2 <= i1) {\n    for (var j = 1; j <= len; j++) a2[i2 + j] = a1[i1 + j];\n  } else {\n    for (var j = len; j >= 1; j--) a2[i2 + j] = a1[i1 + j];\n  };\n  return 0;\n}\n\n///////////// CamlinternalOO\n//Provides: caml_get_public_method const\nvar caml_method_cache = [];\nfunction caml_get_public_method (obj, tag, cacheid) {\n  var meths = obj[1];\n  var ofs = caml_method_cache[cacheid];\n  if (ofs === null) {\n    // Make sure the array is not sparse\n    for (var i = caml_method_cache.length; i < cacheid; i++)\n      caml_method_cache[i] = 0;\n  } else if (meths[ofs] === tag) {\n    return meths[ofs - 1];\n  }\n  var li = 3, hi = meths[1] * 2 + 1, mi;\n  while (li < hi) {\n    mi = ((li+hi) >> 1) | 1;\n    if (tag < meths[mi+1]) hi = mi-2;\n    else li = mi;\n  }\n  caml_method_cache[cacheid] = li + 1;\n  /* return 0 if tag is not there */\n  return (tag == meths[li+1] ? meths[li] : 0);\n}\n\n//Provides: caml_final_register const\nfunction caml_final_register () { return 0; }\n//Provides: caml_final_register_called_without_value const\nfunction caml_final_register_called_without_value () { return 0; }\n//Provides: caml_final_release const\nfunction caml_final_release () { return 0; }\n//Provides: caml_backtrace_status const\nfunction caml_backtrace_status () { return 0; }\n//Provides: caml_get_exception_backtrace const\nfunction caml_get_exception_backtrace () { return 0; }\n//Provides: caml_get_exception_raw_backtrace const\nfunction caml_get_exception_raw_backtrace () { return [0]; }\n//Provides: caml_record_backtrace\nfunction caml_record_backtrace () { return 0; }\n//Provides: caml_convert_raw_backtrace const\nfunction caml_convert_raw_backtrace () { return [0]; }\n//Provides: caml_raw_backtrace_length\nfunction caml_raw_backtrace_length() { return 0; }\n//Provides: caml_raw_backtrace_next_slot\nfunction caml_raw_backtrace_next_slot() { return 0 }\n//Provides: caml_raw_backtrace_slot\n//Requires: caml_invalid_argument\nfunction caml_raw_backtrace_slot () {\n  caml_invalid_argument(\"Printexc.get_raw_backtrace_slot: index out of bounds\");\n}\n//Provides: caml_get_current_callstack const\nfunction caml_get_current_callstack () { return [0]; }\n//Provides: caml_sys_getenv (const)\n//Requires: caml_raise_not_found\n//Requires: caml_js_to_string\nfunction caml_sys_getenv (name) {\n  var g = joo_global_object;\n  var n = name.toString();\n  //nodejs env\n  if(g.process\n     && g.process.env\n     && g.process.env[n] != undefined)\n    return caml_js_to_string(g.process.env[n]);\n  caml_raise_not_found ();\n}\n//Provides: caml_sys_exit\n//Requires: caml_invalid_argument\nfunction caml_sys_exit (code) {\n  var g = joo_global_object;\n  if(g.quit) g.quit(code);\n  //nodejs\n  if(g.process && g.process.exit)\n    g.process.exit(code);\n  caml_invalid_argument(\"Function 'exit' not implemented\");\n}\n\n//Provides: caml_sys_get_argv const\n//Requires: caml_js_to_string\n//Requires: raw_array_sub\nfunction caml_sys_get_argv () {\n  var g = joo_global_object;\n  var main = \"a.out\";\n  var args = []\n\n  if(g.process\n     && g.process.argv\n     && g.process.argv.length > 1) {\n    var argv = g.process.argv\n    //nodejs\n    main = argv[1];\n    args = raw_array_sub(argv,2,argv.length - 2);\n  }\n\n  var p = caml_js_to_string(main);\n  var args2 = [0, p];\n  for(var i = 0; i < args.length; i++)\n    args2.push(caml_js_to_string(args[i]));\n  return [0, p, args2];\n}\n\n//Provides: unix_inet_addr_of_string\nfunction unix_inet_addr_of_string () {return 0;}\n\n//Provides: caml_oo_last_id\nvar caml_oo_last_id = 0;\n\n//Provides: caml_set_oo_id\n//Requires: caml_oo_last_id\nfunction caml_set_oo_id (b) {\n  b[2]=caml_oo_last_id++;\n  return b;\n}\n\n//Provides: caml_fresh_oo_id\n//Requires: caml_oo_last_id\nfunction caml_fresh_oo_id() {\n  return caml_oo_last_id++;\n}\n\n//Provides: caml_install_signal_handler const\nfunction caml_install_signal_handler(){return 0}\n\n\n//Provides: caml_convert_raw_backtrace_slot\n//Requires: caml_failwith\nfunction caml_convert_raw_backtrace_slot(){\n  caml_failwith(\"caml_convert_raw_backtrace_slot\");\n}\n\n//Provides: caml_bswap16\nfunction caml_bswap16(x) {\n  return ((((x & 0x00FF) << 8) |\n           ((x & 0xFF00) >> 8)));\n}\n//Provides: caml_int32_bswap\nfunction caml_int32_bswap(x) {\n  return (((x & 0x000000FF) << 24) |\n          ((x & 0x0000FF00) << 8) |\n          ((x & 0x00FF0000) >>> 8) |\n          ((x & 0xFF000000) >>> 24));\n}\n//Provides: caml_int64_bswap\nfunction caml_int64_bswap(x) {\n  return [\n    255,\n    (((x[3] & 0x0000ff00) >> 8) |\n     ((x[3] & 0x000000ff) << 8) |\n     ((x[2] & 0x00ff0000))),\n    (((x[2] & 0x0000ff00) >> 8) |\n     ((x[2] & 0x000000ff) << 8) |\n     ((x[1] & 0x00ff0000))),\n    (((x[1] & 0x0000ff00) >> 8) |\n     ((x[1] & 0x000000ff) << 8))]\n}\n\n//Provides: caml_list_of_js_array const (const)\nfunction caml_list_of_js_array(a){\n  var l = 0;\n  for(var i=a.length - 1; i>=0; i--){\n    var e = a[i];\n    l = [0,e,l];\n  }\n  return l\n}\n\n//Provides: caml_runtime_warnings\nvar caml_runtime_warnings = 0;\n\n//Provides: caml_ml_enable_runtime_warnings\n//Requires: caml_runtime_warnings\nfunction caml_ml_enable_runtime_warnings (bool) {\n  caml_runtime_warnings = bool;\n  return 0;\n}\n\n//Provides: caml_ml_runtime_warnings_enabled\n//Requires: caml_runtime_warnings\nfunction caml_ml_runtime_warnings_enabled (_unit) {\n  return caml_runtime_warnings;\n}\n\n//Provides: caml_runtime_variant\n//Requires: caml_new_string\nfunction caml_runtime_variant(_unit) {\n  return caml_new_string(\"\");\n}\n//Provides: caml_runtime_parameters\n//Requires: caml_new_string\nfunction caml_runtime_parameters(_unit) {\n  return caml_new_string(\"\");\n}\n\n\n//Provides: caml_sys_isatty\nfunction caml_sys_isatty(_chan) {\n  return 0;\n}\n\n//Provides: caml_spacetime_enabled const (const)\nfunction caml_spacetime_enabled(_unit) {\n  return 0;\n}\n\n//Provides: caml_register_channel_for_spacetime const (const)\nfunction caml_register_channel_for_spacetime(_channel) {\n  return 0;\n}\n\n//Provides: caml_spacetime_only_works_for_native_code\n//Requires: caml_failwith\nfunction caml_spacetime_only_works_for_native_code() {\n  caml_failwith(\"Spacetime profiling only works for native code\");\n}\n","// Js_of_ocaml runtime support\n// http://www.ocsigen.org/js_of_ocaml/\n// Copyright (C) 2010-2014 Jérôme Vouillon\n// Laboratoire PPS - CNRS Université Paris Diderot\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, with linking exception;\n// either version 2.1 of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n// An OCaml string is an object with three fields:\n// - tag 't'\n// - length 'l'\n// - contents 'c'\n//\n// The contents of the string can be either a JavaScript array or\n// a JavaScript string. The length of this string can be less than the\n// length of the OCaml string. In this case, remaining bytes are\n// assumed to be zeroes. Arrays are mutable but consumes more memory\n// than strings. A common pattern is to start from an empty string and\n// progressively fill it from the start. Partial strings makes it\n// possible to implement this efficiently.\n//\n// When converting to and from UTF-16, we keep track of whether the\n// string is composed only of ASCII characters (in which case, no\n// conversion needs to be performed) or not.\n//\n// The string tag can thus take the following values:\n//   full string     BYTE | UNKNOWN:      0\n//                   BYTE | ASCII:        9\n//                   BYTE | NOT_ASCII:    8\n//   string prefix   PARTIAL:             2\n//   array           ARRAY:               4\n//\n// One can use bit masking to discriminate these different cases:\n//   known_encoding(x) = x&8\n//   is_ascii(x) =       x&1\n//   kind(x) =           x&6\n\n//Provides: caml_str_repeat\nfunction caml_str_repeat(n, s) {\n  if (s.repeat) return s.repeat(n); // ECMAscript 6 and Firefox 24+\n  var r = \"\", l = 0;\n  if (n == 0) return r;\n  for(;;) {\n    if (n & 1) r += s;\n    n >>= 1;\n    if (n == 0) return r;\n    s += s;\n    l++;\n    if (l == 9) {\n      s.slice(0,1); // flatten the string\n      // then, the flattening of the whole string will be faster,\n      // as it will be composed of larger pieces\n    }\n  }\n}\n\n//Provides: caml_subarray_to_string\n//Requires: raw_array_sub\nfunction caml_subarray_to_string (a, i, len) {\n  var f = String.fromCharCode;\n  if (i == 0 && len <= 4096 && len == a.length) return f.apply (null, a);\n  var s = \"\";\n  for (; 0 < len; i += 1024,len-=1024)\n    s += f.apply (null, raw_array_sub(a,i, Math.min(len, 1024)));\n  return s;\n}\n\n//Provides: caml_utf8_of_utf16\nfunction caml_utf8_of_utf16(s) {\n  for (var b = \"\", t = b, c, d, i = 0, l = s.length; i < l; i++) {\n    c = s.charCodeAt(i);\n    if (c < 0x80) {\n      for (var j = i + 1; (j < l) && (c = s.charCodeAt(j)) < 0x80; j++);\n      if (j - i > 512) { t.substr(0, 1); b += t; t = \"\"; b += s.slice(i, j) }\n      else t += s.slice(i, j);\n      if (j == l) break;\n      i = j;\n    }\n    if (c < 0x800) {\n      t += String.fromCharCode(0xc0 | (c >> 6));\n      t += String.fromCharCode(0x80 | (c & 0x3f));\n    } else if (c < 0xd800 || c >= 0xdfff) {\n      t += String.fromCharCode(0xe0 | (c >> 12),\n                               0x80 | ((c >> 6) & 0x3f),\n                               0x80 | (c & 0x3f));\n    } else if (c >= 0xdbff || i + 1 == l ||\n               (d = s.charCodeAt(i + 1)) < 0xdc00 || d > 0xdfff) {\n      // Unmatched surrogate pair, replaced by \\ufffd (replacement character)\n      t += \"\\xef\\xbf\\xbd\";\n    } else {\n      i++;\n      c = (c << 10) + d - 0x35fdc00;\n      t += String.fromCharCode(0xf0 | (c >> 18),\n                               0x80 | ((c >> 12) & 0x3f),\n                               0x80 | ((c >> 6) & 0x3f),\n                               0x80 | (c & 0x3f));\n    }\n    if (t.length > 1024) {t.substr(0, 1); b += t; t = \"\";}\n  }\n  return b+t;\n}\n\n//Provides: caml_utf16_of_utf8\nfunction caml_utf16_of_utf8(s) {\n  for (var b = \"\", t = \"\", c, c1, c2, v, i = 0, l = s.length; i < l; i++) {\n    c1 = s.charCodeAt(i);\n    if (c1 < 0x80) {\n      for (var j = i + 1; (j < l) && (c1 = s.charCodeAt(j)) < 0x80; j++);\n      if (j - i > 512) { t.substr(0, 1); b += t; t = \"\"; b += s.slice(i, j) }\n      else t += s.slice(i, j);\n      if (j == l) break;\n      i = j;\n    }\n    v = 1;\n    if ((++i < l) && (((c2 = s.charCodeAt(i)) & -64) == 128)) {\n      c = c2 + (c1 << 6);\n      if (c1 < 0xe0) {\n        v = c - 0x3080;\n        if (v < 0x80) v = 1;\n      } else {\n        v = 2;\n        if ((++i < l) && (((c2 = s.charCodeAt(i)) & -64) == 128)) {\n          c = c2 + (c << 6);\n          if (c1 < 0xf0) {\n            v = c - 0xe2080;\n            if ((v < 0x800) || ((v >= 0xd7ff) && (v < 0xe000))) v = 2;\n          } else {\n              v = 3;\n              if ((++i < l) && (((c2 = s.charCodeAt(i)) & -64) == 128) &&\n                  (c1 < 0xf5)) {\n                v = c2 - 0x3c82080 + (c << 6);\n                if (v < 0x10000 || v > 0x10ffff) v = 3;\n              }\n          }\n        }\n      }\n    }\n    if (v < 4) { // Invalid sequence\n      i -= v;\n      t += \"\\ufffd\";\n    } else if (v > 0xffff)\n      t += String.fromCharCode(0xd7c0 + (v >> 10), 0xdc00 + (v & 0x3FF))\n    else\n      t += String.fromCharCode(v);\n    if (t.length > 1024) {t.substr(0, 1); b += t; t = \"\";}\n  }\n  return b+t;\n}\n\n//Provides: caml_is_ascii\nfunction caml_is_ascii (s) {\n  // The regular expression gets better at around this point for all browsers\n  if (s.length < 24) {\n    // Spidermonkey gets much slower when s.length >= 24 (on 64 bit archs)\n    for (var i = 0; i < s.length; i++) if (s.charCodeAt(i) > 127) return false;\n    return true;\n  } else\n    return !/[^\\x00-\\x7f]/.test(s);\n}\n\n//Provides: caml_to_js_string\n//Requires: caml_convert_string_to_bytes, caml_is_ascii, caml_utf16_of_utf8\nfunction caml_to_js_string(s) {\n  switch (s.t) {\n  case 9: /*BYTES | ASCII*/\n    return s.c;\n  default:\n    caml_convert_string_to_bytes(s);\n  case 0: /*BYTES | UNKOWN*/\n    if (caml_is_ascii(s.c)) {\n      s.t = 9; /*BYTES | ASCII*/\n      return s.c;\n    }\n    s.t = 8; /*BYTES | NOT_ASCII*/\n  case 8: /*BYTES | NOT_ASCII*/\n    return caml_utf16_of_utf8(s.c);\n  }\n}\n\n//Provides: caml_string_unsafe_get mutable\nfunction caml_string_unsafe_get (s, i) {\n  switch (s.t & 6) {\n  default: /* PARTIAL */\n    if (i >= s.c.length) return 0;\n  case 0: /* BYTES */\n    return s.c.charCodeAt(i);\n  case 4: /* ARRAY */\n    return s.c[i]\n  }\n}\n\n//Provides: caml_bytes_unsafe_get mutable\nfunction caml_bytes_unsafe_get (s, i) {\n  switch (s.t & 6) {\n  default: /* PARTIAL */\n    if (i >= s.c.length) return 0;\n  case 0: /* BYTES */\n    return s.c.charCodeAt(i);\n  case 4: /* ARRAY */\n    return s.c[i]\n  }\n}\n\n//Provides: caml_string_unsafe_set\n//Requires: caml_convert_string_to_array\nfunction caml_string_unsafe_set (s, i, c) {\n  // The OCaml compiler uses Char.unsafe_chr on integers larger than 255!\n  c &= 0xff;\n  if (s.t != 4 /* ARRAY */) {\n    if (i == s.c.length) {\n      s.c += String.fromCharCode (c);\n      if (i + 1 == s.l) s.t = 0; /*BYTES | UNKOWN*/\n      return 0;\n    }\n    caml_convert_string_to_array (s);\n  }\n  s.c[i] = c;\n  return 0;\n}\n\n//Provides: caml_bytes_unsafe_set\n//Requires: caml_convert_string_to_array\nfunction caml_bytes_unsafe_set (s, i, c) {\n  // The OCaml compiler uses Char.unsafe_chr on integers larger than 255!\n  c &= 0xff;\n  if (s.t != 4 /* ARRAY */) {\n    if (i == s.c.length) {\n      s.c += String.fromCharCode (c);\n      if (i + 1 == s.l) s.t = 0; /*BYTES | UNKOWN*/\n      return 0;\n    }\n    caml_convert_string_to_array (s);\n  }\n  s.c[i] = c;\n  return 0;\n}\n\n//Provides: caml_string_bound_error\n//Requires: caml_invalid_argument\nfunction caml_string_bound_error () {\n  caml_invalid_argument (\"index out of bounds\");\n}\n\n//Provides: caml_string_get\n//Requires: caml_string_bound_error, caml_string_unsafe_get\nfunction caml_string_get (s, i) {\n  if (i >>> 0 >= s.l) caml_string_bound_error();\n  return caml_string_unsafe_get (s, i);\n}\n\n//Provides: caml_string_get16\n//Requires: caml_string_unsafe_get, caml_string_bound_error\nfunction caml_string_get16(s,i) {\n  if (i >>> 0 >= s.l + 1) caml_string_bound_error();\n  var b1 = caml_string_unsafe_get (s, i),\n      b2 = caml_string_unsafe_get (s, i + 1);\n  return (b2 << 8 | b1);\n}\n\n//Provides: caml_string_get32\n//Requires: caml_string_unsafe_get, caml_string_bound_error\nfunction caml_string_get32(s,i) {\n  if (i >>> 0 >= s.l + 3) caml_string_bound_error();\n  var b1 = caml_string_unsafe_get (s, i),\n      b2 = caml_string_unsafe_get (s, i + 1),\n      b3 = caml_string_unsafe_get (s, i + 2),\n      b4 = caml_string_unsafe_get (s, i + 3);\n  return (b4 << 24 | b3 << 16 | b2 << 8 | b1);\n}\n\n//Provides: caml_string_get64\n//Requires: caml_string_unsafe_get, caml_string_bound_error\n//Requires: caml_int64_of_bytes\nfunction caml_string_get64(s,i) {\n  if (i >>> 0 >= s.l + 7) caml_string_bound_error();\n  var a = new Array(8);\n  for(var j = 0; j < 8; j++){\n    a[7 - j] = caml_string_unsafe_get (s, i + j);\n  }\n  return caml_int64_of_bytes(a);\n}\n\n//Provides: caml_bytes_get\n//Requires: caml_string_bound_error, caml_bytes_unsafe_get\nfunction caml_bytes_get (s, i) {\n  if (i >>> 0 >= s.l) caml_string_bound_error();\n  return caml_bytes_unsafe_get (s, i);\n}\n\n//Provides: caml_string_set\n//Requires: caml_string_bound_error, caml_string_unsafe_set\nfunction caml_string_set (s, i, c) {\n  if (i >>> 0 >= s.l) caml_string_bound_error();\n  return caml_string_unsafe_set (s, i, c);\n}\n\n//Provides: caml_string_set16\n//Requires: caml_string_bound_error, caml_string_unsafe_set\nfunction caml_string_set16(s,i,i16){\n  if (i >>> 0 >= s.l + 1) caml_string_bound_error();\n  var b2 = 0xFF & i16 >> 8,\n      b1 = 0xFF & i16;\n  caml_string_unsafe_set (s, i + 0, b1);\n  caml_string_unsafe_set (s, i + 1, b2);\n  return 0\n}\n\n//Provides: caml_string_set32\n//Requires: caml_string_bound_error, caml_string_unsafe_set\nfunction caml_string_set32(s,i,i32){\n  if (i >>> 0 >= s.l + 3) caml_string_bound_error();\n  var b4 = 0xFF & i32 >> 24,\n      b3 = 0xFF & i32 >> 16,\n      b2 = 0xFF & i32 >> 8,\n      b1 = 0xFF & i32;\n  caml_string_unsafe_set (s, i + 0, b1);\n  caml_string_unsafe_set (s, i + 1, b2);\n  caml_string_unsafe_set (s, i + 2, b3);\n  caml_string_unsafe_set (s, i + 3, b4);\n  return 0\n}\n\n//Provides: caml_string_set64\n//Requires: caml_string_bound_error, caml_string_unsafe_set\n//Requires: caml_int64_to_bytes\nfunction caml_string_set64(s,i,i64){\n  if (i >>> 0 >= s.l + 7) caml_string_bound_error();\n  var a = caml_int64_to_bytes(i64);\n  for(var j = 0; j < 8; j++) {\n    caml_string_unsafe_set (s, i + 7 - j, a[j]);\n  }\n  return 0\n}\n\n\n\n//Provides: caml_bytes_set\n//Requires: caml_string_bound_error, caml_bytes_unsafe_set\nfunction caml_bytes_set (s, i, c) {\n  if (i >>> 0 >= s.l) caml_string_bound_error();\n  return caml_bytes_unsafe_set (s, i, c);\n}\n\n//Provides: MlString\n//Requires: caml_to_js_string\nfunction MlString (tag, contents, length) {\n  this.t=tag; this.c=contents; this.l=length;\n}\nMlString.prototype.toString = function(){return caml_to_js_string(this)};\n\n//Provides: caml_convert_string_to_bytes\n//Requires: caml_str_repeat, caml_subarray_to_string\nfunction caml_convert_string_to_bytes (s) {\n  /* Assumes not BYTES */\n  if (s.t == 2 /* PARTIAL */)\n    s.c += caml_str_repeat(s.l - s.c.length, '\\0')\n  else\n    s.c = caml_subarray_to_string (s.c, 0, s.c.length);\n  s.t = 0; /*BYTES | UNKOWN*/\n}\n\n//Provides: caml_convert_string_to_array\nfunction caml_convert_string_to_array (s) {\n  /* Assumes not ARRAY */\n  if(joo_global_object.Uint8Array) {\n    var a = new joo_global_object.Uint8Array(s.l);\n  } else {\n    var a = new Array(s.l);\n  }\n  var b = s.c, l = b.length, i = 0;\n  for (; i < l; i++) a[i] = b.charCodeAt(i);\n  for (l = s.l; i < l; i++) a[i] = 0;\n  s.c = a;\n  s.t = 4; /* ARRAY */\n  return a;\n}\n\n//Provides: caml_array_of_string mutable\n//Requires: caml_convert_string_to_array\nfunction caml_array_of_string (s) {\n  if (s.t != 4 /* ARRAY */) caml_convert_string_to_array(s);\n  return s.c;\n}\n\n//Provides: caml_bytes_of_string mutable\n//Requires: caml_convert_string_to_bytes\nfunction caml_bytes_of_string (s) {\n  if ((s.t & 6) != 0 /* BYTES */) caml_convert_string_to_bytes(s);\n  return s.c;\n}\n\n//Provides: caml_js_to_string const\n//Requires: caml_is_ascii, caml_utf8_of_utf16, MlString\nfunction caml_js_to_string (s) {\n  var tag = 9 /* BYTES | ASCII */;\n  if (!caml_is_ascii(s))\n    tag = 8 /* BYTES | NOT_ASCII */, s = caml_utf8_of_utf16(s);\n  return new MlString(tag, s, s.length);\n}\n\n//Provides: caml_create_string const\n//Requires: MlString,caml_invalid_argument\nfunction caml_create_string(len) {\n  if (len < 0) caml_invalid_argument(\"String.create\");\n  return new MlString(len?2:9,\"\",len);\n}\n//Provides: caml_create_bytes const\n//Requires: MlString,caml_invalid_argument\nfunction caml_create_bytes(len) {\n  if (len < 0) caml_invalid_argument(\"Bytes.create\");\n  return new MlString(len?2:9,\"\",len);\n}\n\n//Provides: caml_new_string\n//Requires: MlString\nfunction caml_new_string (s) { return new MlString(0,s,s.length); }\n//Provides: caml_string_of_array\n//Requires: MlString\nfunction caml_string_of_array (a) { return new MlString(4,a,a.length); }\n\n//Provides: caml_string_compare mutable\n//Requires: caml_convert_string_to_bytes\nfunction caml_string_compare(s1, s2) {\n  (s1.t & 6) && caml_convert_string_to_bytes(s1);\n  (s2.t & 6) && caml_convert_string_to_bytes(s2);\n  return (s1.c < s2.c)?-1:(s1.c > s2.c)?1:0;\n}\n\n\n//Provides: caml_bytes_compare mutable\n//Requires: caml_convert_string_to_bytes\nfunction caml_bytes_compare(s1, s2) {\n  (s1.t & 6) && caml_convert_string_to_bytes(s1);\n  (s2.t & 6) && caml_convert_string_to_bytes(s2);\n  return (s1.c < s2.c)?-1:(s1.c > s2.c)?1:0;\n}\n\n//Provides: caml_string_equal mutable (const, const)\n//Requires: caml_convert_string_to_bytes\nfunction caml_string_equal(s1, s2) {\n  if(s1 === s2) return 1;\n  (s1.t & 6) && caml_convert_string_to_bytes(s1);\n  (s2.t & 6) && caml_convert_string_to_bytes(s2);\n  return (s1.c == s2.c)?1:0;\n}\n\n//Provides: caml_bytes_equal mutable (const, const)\n//Requires: caml_convert_string_to_bytes\nfunction caml_bytes_equal(s1, s2) {\n  if(s1 === s2) return 1;\n  (s1.t & 6) && caml_convert_string_to_bytes(s1);\n  (s2.t & 6) && caml_convert_string_to_bytes(s2);\n  return (s1.c == s2.c)?1:0;\n}\n\n//Provides: caml_string_notequal mutable (const, const)\n//Requires: caml_string_equal\nfunction caml_string_notequal(s1, s2) { return 1-caml_string_equal(s1, s2); }\n\n//Provides: caml_bytes_notequal mutable (const, const)\n//Requires: caml_string_equal\nfunction caml_bytes_notequal(s1, s2) { return 1-caml_string_equal(s1, s2); }\n\n//Provides: caml_string_lessequal mutable\n//Requires: caml_convert_string_to_bytes\nfunction caml_string_lessequal(s1, s2) {\n  (s1.t & 6) && caml_convert_string_to_bytes(s1);\n  (s2.t & 6) && caml_convert_string_to_bytes(s2);\n  return (s1.c <= s2.c)?1:0;\n}\n\n//Provides: caml_bytes_lessequal mutable\n//Requires: caml_convert_string_to_bytes\nfunction caml_bytes_lessequal(s1, s2) {\n  (s1.t & 6) && caml_convert_string_to_bytes(s1);\n  (s2.t & 6) && caml_convert_string_to_bytes(s2);\n  return (s1.c <= s2.c)?1:0;\n}\n\n//Provides: caml_string_lessthan mutable\n//Requires: caml_convert_string_to_bytes\nfunction caml_string_lessthan(s1, s2) {\n  (s1.t & 6) && caml_convert_string_to_bytes(s1);\n  (s2.t & 6) && caml_convert_string_to_bytes(s2);\n  return (s1.c < s2.c)?1:0;\n}\n\n//Provides: caml_bytes_lessthan mutable\n//Requires: caml_convert_string_to_bytes\nfunction caml_bytes_lessthan(s1, s2) {\n  (s1.t & 6) && caml_convert_string_to_bytes(s1);\n  (s2.t & 6) && caml_convert_string_to_bytes(s2);\n  return (s1.c < s2.c)?1:0;\n}\n\n//Provides: caml_string_greaterequal\n//Requires: caml_string_lessequal\nfunction caml_string_greaterequal(s1, s2) {\n  return caml_string_lessequal(s2,s1);\n}\n//Provides: caml_bytes_greaterequal\n//Requires: caml_bytes_lessequal\nfunction caml_bytes_greaterequal(s1, s2) {\n  return caml_bytes_lessequal(s2,s1);\n}\n\n//Provides: caml_string_greaterthan\n//Requires: caml_string_lessthan\nfunction caml_string_greaterthan(s1, s2) {\n  return caml_string_lessthan(s2, s1);\n}\n\n//Provides: caml_bytes_greaterthan\n//Requires: caml_bytes_lessthan\nfunction caml_bytes_greaterthan(s1, s2) {\n  return caml_bytes_lessthan(s2, s1);\n}\n\n//Provides: caml_fill_string\n//Requires: caml_str_repeat, caml_convert_string_to_array\nfunction caml_fill_string(s, i, l, c) {\n  if (l > 0) {\n    if (i == 0 && (l >= s.l || (s.t == 2 /* PARTIAL */ && l >= s.c.length))) {\n      if (c == 0) {\n        s.c = \"\";\n        s.t = 2; /* PARTIAL */\n      } else {\n        s.c = caml_str_repeat (l, String.fromCharCode(c));\n        s.t = (l == s.l)?0 /* BYTES | UNKOWN */ :2; /* PARTIAL */\n      }\n    } else {\n      if (s.t != 4 /* ARRAY */) caml_convert_string_to_array(s);\n      for (l += i; i < l; i++) s.c[i] = c;\n    }\n  }\n  return 0;\n}\n\n//Provides: caml_fill_bytes\n//Requires: caml_fill_string\nvar caml_fill_bytes = caml_fill_string\n\n//Provides: caml_blit_string\n//Requires: caml_subarray_to_string, caml_convert_string_to_array\nfunction caml_blit_string(s1, i1, s2, i2, len) {\n  if (len == 0) return 0;\n  if ((i2 == 0) &&\n      (len >= s2.l || (s2.t == 2 /* PARTIAL */ && len >= s2.c.length))) {\n    s2.c = (s1.t == 4 /* ARRAY */)?\n             caml_subarray_to_string(s1.c, i1, len):\n             (i1 == 0 && s1.c.length == len)?s1.c:s1.c.substr(i1, len);\n    s2.t = (s2.c.length == s2.l)?0 /* BYTES | UNKOWN */ :2; /* PARTIAL */\n  } else if (s2.t == 2 /* PARTIAL */ && i2 == s2.c.length) {\n    s2.c += (s1.t == 4 /* ARRAY */)?\n             caml_subarray_to_string(s1.c, i1, len):\n             (i1 == 0 && s1.c.length == len)?s1.c:s1.c.substr(i1, len);\n    s2.t = (s2.c.length == s2.l)?0 /* BYTES | UNKOWN */ :2; /* PARTIAL */\n  } else {\n    if (s2.t != 4 /* ARRAY */) caml_convert_string_to_array(s2);\n    var c1 = s1.c, c2 = s2.c;\n    if (s1.t == 4 /* ARRAY */) {\n        if (i2 <= i1) {\n          for (var i = 0; i < len; i++) c2 [i2 + i] = c1 [i1 + i];\n        } else {\n          for (var i = len - 1; i >= 0; i--) c2 [i2 + i] = c1 [i1 + i];\n        }\n   } else {\n      var l = Math.min (len, c1.length - i1);\n      for (var i = 0; i < l; i++) c2 [i2 + i] = c1.charCodeAt(i1 + i);\n      for (; i < len; i++) c2 [i2 + i] = 0;\n    }\n  }\n  return 0;\n}\n\n//Provides: caml_blit_bytes\n//Requires: caml_blit_string\nvar caml_blit_bytes = caml_blit_string\n\n//Provides: caml_ml_string_length const\nfunction caml_ml_string_length(s) { return s.l }\n\n//Provides: caml_ml_bytes_length const\nfunction caml_ml_bytes_length(s) { return s.l }\n","// Js_of_ocaml runtime support\n// http://www.ocsigen.org/js_of_ocaml/\n// Copyright (C) 2014 Jérôme Vouillon, Hugo Heuzard, Andy Ray\n// Laboratoire PPS - CNRS Université Paris Diderot\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, with linking exception;\n// either version 2.1 of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n//\n// Bigarray.\n//\n// - all bigarray types including Int64 and Complex.\n// - fortran + c layouts\n// - sub/slice/reshape\n// - retain fast path for 1d array access\n//\n// Note; int64+complex support if provided by allocating a second TypedArray\n// Note; accessor functions are selected when the bigarray is created.  It is assumed\n//       that this results in just a function pointer and will thus be fast.\n\n//Provides: caml_ba_init const\nfunction caml_ba_init() {\n    return 0;\n}\n\n//Provides: caml_ba_init_views\n//Requires: caml_ba_views\nfunction caml_ba_init_views() {\n    if (!caml_ba_views) {\n        var g = joo_global_object;\n        caml_ba_views = [\n            [\n                g.Float32Array, g.Float64Array, g.Int8Array, g.Uint8Array,\n                g.Int16Array, g.Uint16Array, g.Int32Array, g.Int32Array,\n                g.Int32Array, g.Int32Array, g.Float32Array, g.Float64Array, g.Uint8Array],\n            [\n                0 /* General */, 0 /* General */, 0 /* General */, 0 /* General */,\n                0 /* General */, 0 /* General */, 0 /* General */, 1 /* Int64 */,\n                0 /* General */, 0 /* General */, 2 /* Complex */, 2 /* Complex */, 0 /* General */]\n        ];\n    }\n}\n\n//Provides: caml_ba_get_size\n//Requires: caml_invalid_argument\nfunction caml_ba_get_size(dims) {\n    var n_dims = dims.length;\n    var size = 1;\n    for (var i = 0; i < n_dims; i++) {\n        if (dims[i] < 0)\n            caml_invalid_argument(\"Bigarray.create: negative dimension\");\n        size = size * dims[i];\n    }\n    return size;\n}\n\n//Provides: caml_ba_views\nvar caml_ba_views;\n\n//Provides: caml_ba_create_from\n//Requires: caml_ba_get_size\n//Requires: caml_invalid_argument\n//Requires: caml_array_bound_error\nfunction caml_ba_create_from(data, data2, data_type, kind, layout, dims) {\n    var n_dims = dims.length;\n    var size = caml_ba_get_size(dims);\n\n    //\n    // Functions to compute the offsets for C or Fortran layout arrays\n    // from the given array of indices.\n    //\n    function offset_c(index) {\n        var ofs = 0;\n        if (n_dims != index.length)\n            caml_invalid_argument(\"Bigarray.get/set: bad number of dimensions\");\n        for (var i = 0; i < n_dims; i++) {\n            if (index[i] < 0 || index[i] >= dims[i])\n                caml_array_bound_error();\n            ofs = (ofs * dims[i]) + index[i];\n        }\n        return ofs;\n    }\n\n    function offset_fortran(index) {\n        var ofs = 0;\n        if (n_dims != index.length)\n            caml_invalid_argument(\"Bigarray.get/set: wrong number of indices\");\n        for (var i = n_dims - 1; i >= 0; i--) {\n            if (index[i] < 1 || index[i] > dims[i])\n                caml_array_bound_error();\n            ofs = (ofs * dims[i]) + (index[i] - 1);\n        }\n        return ofs;\n    }\n\n    var offset = layout == 0 ? offset_c : offset_fortran;\n\n    var dim0 = dims[0];\n\n    //\n    // Element get functions.\n    //\n    function get_std(index) {\n        var ofs = offset(index);\n        var v = data[ofs];\n        return v;\n    }\n\n    function get_int64(index) {\n        var off = offset(index);\n        var l = data[off];\n        var h = data2[off];\n        return [\n            255,\n            l & 0xffffff,\n            ((l >>> 24) & 0xff) | ((h & 0xffff) << 8),\n            (h >>> 16) & 0xffff];\n    }\n\n    function get_complex(index) {\n        var off = offset(index);\n        var r = data[off];\n        var i = data2[off];\n        return [254, r, i];\n    }\n\n    var get = data_type == 1 /* Int64 */ ? get_int64 : (data_type == 2 /* Complex */ ? get_complex : get_std);\n\n    function get1_c(i) {\n        if (i < 0 || i >= dim0)\n            caml_array_bound_error();\n        return data[i];\n    }\n    function get1_fortran(i) {\n        if (i < 1 || i > dim0)\n            caml_array_bound_error();\n        return data[i - 1];\n    }\n    function get1_any(i) {\n        return get([i]);\n    }\n\n    var get1 = data_type == 0 /* General */ ? (layout == 0 ? get1_c : get1_fortran) : get1_any;\n\n    //\n    // Element set functions\n    //\n    function set_std_raw(off, v) {\n        data[off] = v;\n    }\n\n    function set_int64_raw(off, v) {\n        data[off] = v[1] | ((v[2] & 0xff) << 24);\n        data2[off] = ((v[2] >>> 8) & 0xffff) | (v[3] << 16);\n    }\n\n    function set_complex_raw(off, v) {\n        data[off] = v[1];\n        data2[off] = v[2];\n    }\n\n    function set_std(index, v) {\n        var ofs = offset(index);\n        return set_std_raw(ofs, v);\n    }\n    function set_int64(index, v) {\n        return set_int64_raw(offset(index), v);\n    }\n    function set_complex(index, v) {\n        return set_complex_raw(offset(index), v);\n    }\n\n    var set = data_type == 1 /* Int64 */ ? set_int64 : (data_type == 2 /* Complex */ ? set_complex : set_std);\n\n    function set1_c(i, v) {\n        if (i < 0 || i >= dim0)\n            caml_array_bound_error();\n        data[i] = v;\n    }\n    function set1_fortran(i, v) {\n        if (i < 1 || i > dim0)\n            caml_array_bound_error();\n        data[i - 1] = v;\n    }\n    function set1_any(i, v) {\n        set([i], v);\n    }\n\n    var set1 = data_type == 0 /* General */ ? (layout == 0 ? set1_c : set1_fortran) : set1_any;\n\n    //\n    // other\n    //\n    function nth_dim(i) {\n        if (i < 0 || i >= n_dims)\n            caml_invalid_argument(\"Bigarray.dim\");\n        return dims[i];\n    }\n\n    function fill(v) {\n        if (data_type == 0 /* General */)\n            for (var i = 0; i < data.length; i++)\n                set_std_raw(i, v);\n        if (data_type == 1 /* Int64 */)\n            for (var i = 0; i < data.length; i++)\n                set_int64_raw(i, v);\n        if (data_type == 2 /* Complex */)\n            for (var i = 0; i < data.length; i++)\n                set_complex_raw(i, v);\n    }\n    function blit(from) {\n        if (n_dims != from.num_dims)\n            caml_invalid_argument(\"Bigarray.blit: dimension mismatch\");\n        for (var i = 0; i < n_dims; i++)\n            if (dims[i] != from.nth_dim(i))\n                caml_invalid_argument(\"Bigarray.blit: dimension mismatch\");\n        data.set(from.data);\n        if (data_type != 0 /* General */)\n            data2.set(from.data2);\n    }\n\n    function sub(ofs, len) {\n        var changed_dim;\n        var mul = 1;\n\n        if (layout == 0) {\n            for (var i = 1; i < n_dims; i++)\n                mul = mul * dims[i];\n            changed_dim = 0;\n        } else {\n            for (var i = 0; i < (n_dims - 1); i++)\n                mul = mul * dims[i];\n            changed_dim = n_dims - 1;\n            ofs = ofs - 1;\n        }\n\n        if (ofs < 0 || len < 0 || (ofs + len) > dims[changed_dim])\n            caml_invalid_argument(\"Bigarray.sub: bad sub-array\");\n\n        var new_data = data.subarray(ofs * mul, (ofs + len) * mul);\n        var new_data2 = data_type == 0 /* General */ ? null : data2.subarray(ofs * mul, (ofs + len) * mul);\n\n        var new_dims = [];\n        for (var i = 0; i < n_dims; i++)\n            new_dims[i] = dims[i];\n        new_dims[changed_dim] = len;\n\n        return caml_ba_create_from(new_data, new_data2, data_type, kind, layout, new_dims);\n    }\n\n    function slice(vind) {\n        var num_inds = vind.length;\n        var index = [];\n        var sub_dims = [];\n        var ofs;\n\n        if (num_inds >= n_dims)\n            caml_invalid_argument(\"Bigarray.slice: too many indices\");\n\n        // Compute offset and check bounds\n        if (layout == 0) {\n            for (var i = 0; i < num_inds; i++)\n                index[i] = vind[i];\n            for (; i < n_dims; i++)\n                index[i] = 0;\n            ofs = offset(index);\n            sub_dims = dims.slice(num_inds);\n        } else {\n            for (var i = 0; i < num_inds; i++)\n                index[n_dims - num_inds + i] = vind[i];\n            for (var i = 0; i < n_dims - num_inds; i++)\n                index[i] = 1;\n            ofs = offset(index);\n            sub_dims = dims.slice(0, num_inds);\n        }\n\n        var size = caml_ba_get_size(sub_dims);\n        var new_data = data.subarray(ofs, ofs + size);\n        var new_data2 = data_type == 0 /* General */ ? null : data2.subarray(ofs, ofs + size);\n\n        return caml_ba_create_from(new_data, new_data2, data_type, kind, layout, sub_dims);\n    }\n\n    function reshape(vdim) {\n        var new_dim = [];\n        var num_dims = vdim.length;\n\n        if (num_dims < 1)\n            caml_invalid_argument(\"Bigarray.reshape: bad number of dimensions\");\n        var num_elts = 1;\n        for (var i = 0; i < num_dims; i++) {\n            new_dim[i] = vdim[i];\n            if (new_dim[i] < 0)\n                caml_invalid_argument(\"Bigarray.reshape: negative dimension\");\n            num_elts = num_elts * new_dim[i];\n        }\n\n        // Check that sizes agree\n        if (num_elts != size)\n            caml_invalid_argument(\"Bigarray.reshape: size mismatch\");\n\n        return caml_ba_create_from(data, data2, data_type, kind, layout, new_dim);\n    }\n\n    function compare(b, total) {\n        if (layout != b.layout)\n            return b.layout - layout;\n        if (n_dims != b.num_dims)\n            return b.num_dims - n_dims;\n        for (var i = 0; i < n_dims; i++)\n            if (nth_dim(i) != b.nth_dim(i))\n                return (nth_dim(i) < b.nth_dim(i)) ? -1 : 1;\n        switch (kind) {\n            case 0:\n            case 1:\n            case 10:\n            case 11:\n                var x, y;\n                for (var i = 0; i < data.length; i++) {\n                    x = data[i];\n                    y = b.data[i];\n\n                    //first array\n                    if (x < y)\n                        return -1;\n                    if (x > y)\n                        return 1;\n                    if (x != y) {\n                        if (x != y) {\n                            if (!total)\n                                return NaN;\n                            if (x == x)\n                                return 1;\n                            if (y == y)\n                                return -1;\n                        }\n                    }\n                    if (data2) {\n                        //second array\n                        x = data2[i];\n                        y = b.data2[i];\n                        if (x < y)\n                            return -1;\n                        if (x > y)\n                            return 1;\n                        if (x != y) {\n                            if (x != y) {\n                                if (!total)\n                                    return NaN;\n                                if (x == x)\n                                    return 1;\n                                if (y == y)\n                                    return -1;\n                            }\n                        }\n                    }\n                }\n                ;\n                break;\n\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 8:\n            case 9:\n            case 12:\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] < b.data[i])\n                        return -1;\n                    if (data[i] > b.data[i])\n                        return 1;\n                }\n                ;\n                break;\n\n            case 7:\n                for (var i = 0; i < data.length; i++) {\n                    if (data2[i] < b.data2[i])\n                        return -1;\n                    if (data2[i] > b.data2[i])\n                        return 1;\n                    if (data[i] < b.data[i])\n                        return -1;\n                    if (data[i] > b.data[i])\n                        return 1;\n                }\n                ;\n                break;\n        }\n        return 0;\n    }\n\n    return {\n        data: data,\n        data2: data2,\n        data_type: data_type,\n        num_dims: n_dims,\n        nth_dim: nth_dim,\n        kind: kind,\n        layout: layout,\n        size: size,\n        sub: sub,\n        slice: slice,\n        blit: blit,\n        fill: fill,\n        reshape: reshape,\n        get: get,\n        get1: get1,\n        set: set,\n        set1: set1,\n        compare: compare\n    };\n}\n\n//Provides: caml_ba_create\n//Requires: caml_ba_create_from\n//Requires: caml_js_from_array\n//Requires: caml_ba_views\n//Requires: caml_ba_init_views\n//Requires: caml_invalid_argument\n//Requires: caml_ba_get_size\nfunction caml_ba_create(kind, layout, dims_ml) {\n    // Initialize TypedArray views\n    caml_ba_init_views();\n\n    // set up dimensions and calculate size\n    var dims = caml_js_from_array(dims_ml);\n\n    //var n_dims = dims.length;\n    var size = caml_ba_get_size(dims);\n\n    // Allocate TypedArray\n    var view = caml_ba_views[0][kind];\n    if (!view)\n        caml_invalid_argument(\"Bigarray.create: unsupported kind\");\n    var data = new view(size);\n\n    // 2nd TypedArray for int64, complex32 and complex64\n    var data_type = caml_ba_views[1][kind];\n    var data2 = null;\n    if (data_type != 0 /* General */) {\n        data2 = new view(size);\n    }\n\n    return caml_ba_create_from(data, data2, data_type, kind, layout, dims);\n}\n\n//Provides: caml_ba_kind\nfunction caml_ba_kind(ba) {\n    return ba.kind;\n}\n\n//Provides: caml_ba_layout\nfunction caml_ba_layout(ba) {\n    return ba.layout;\n}\n\n//Provides: caml_ba_num_dims\nfunction caml_ba_num_dims(ba, _dim) {\n    return ba.num_dims;\n}\n\n//Provides: caml_ba_dim\nfunction caml_ba_dim(ba, dim) {\n    return ba.nth_dim(dim);\n}\n\n//Provides: caml_ba_dim_1\nfunction caml_ba_dim_1(ba) {\n    return ba.nth_dim(0);\n}\n\n//Provides: caml_ba_dim_2\nfunction caml_ba_dim_2(ba) {\n    return ba.nth_dim(1);\n}\n\n//Provides: caml_ba_dim_3\nfunction caml_ba_dim_3(ba) {\n    return ba.nth_dim(2);\n}\n\n//Provides: caml_ba_get_generic\n//Requires: caml_js_from_array\nfunction caml_ba_get_generic(ba, index) {\n    return ba.get(caml_js_from_array(index));\n}\n\n//Provides: caml_ba_uint8_get16\nfunction caml_ba_uint8_get16(ba, i0) {\n    var b1 = ba.get1(i0);\n    var b2 = ba.get1(i0+1) << 8;\n    return (b1 | b2);\n}\n\n//Provides: caml_ba_uint8_get32\nfunction caml_ba_uint8_get32(ba, i0) {\n    var b1 = ba.get1(i0);\n    var b2 = ba.get1(i0+1) << 8;\n    var b3 = ba.get1(i0+2) << 16;\n    var b4 = ba.get1(i0+3) << 24;\n    return (b1 | b2 | b3 | b4);\n}\n\n//Provides: caml_ba_uint8_get64\nfunction caml_ba_uint8_get64(ba, i0) {\n    var b1 = ba.get1(i0);\n    var b2 = ba.get1(i0+1) << 8;\n    var b3 = ba.get1(i0+2) << 16;\n    var b4 = ba.get1(i0+3);\n    var b5 = ba.get1(i0+4) << 8;\n    var b6 = ba.get1(i0+5) << 16;\n    var b7 = ba.get1(i0+6);\n    var b8 = ba.get1(i0+7) << 8;\n    return [255, b1 | b2 | b3, b4 | b5 | b6, b7 | b8 ];\n}\n\n//Provides: caml_ba_get_1\nfunction caml_ba_get_1(ba, i0) {\n    return ba.get1(i0);\n}\n\n//Provides: caml_ba_get_2\nfunction caml_ba_get_2(ba, i0, i1) {\n    return ba.get([i0, i1]);\n}\n\n//Provides: caml_ba_get_3\nfunction caml_ba_get_3(ba, i0, i1, i2) {\n    return ba.get([i0, i1, i2]);\n}\n\n//Provides: caml_ba_set_generic\n//Requires: caml_js_from_array\nfunction caml_ba_set_generic(ba, index, v) {\n    return ba.set(caml_js_from_array(index), v);\n}\n\n//Provides: caml_ba_uint8_set16\nfunction caml_ba_uint8_set16(ba, i0, v) {\n    ba.set1(i0, v & 0xff);\n    ba.set1(i0+1, (v >>> 8) & 0xff);\n    return 0;\n}\n\n//Provides: caml_ba_uint8_set32\nfunction caml_ba_uint8_set32(ba, i0, v) {\n    ba.set1(i0, v & 0xff);\n    ba.set1(i0+1, (v >>> 8) & 0xff);\n    ba.set1(i0+2, (v >>> 16) & 0xff);\n    ba.set1(i0+3, (v >>> 24) & 0xff);\n    return 0;\n}\n\n//Provides: caml_ba_uint8_set64\nfunction caml_ba_uint8_set64(ba, i0, v) {\n    ba.set1(i0, v[1] & 0xff);\n    ba.set1(i0+1, (v[1] >> 8) & 0xff);\n    ba.set1(i0+2, v[1] >> 16);\n    ba.set1(i0+3, v[2] & 0xff);\n    ba.set1(i0+4, (v[2] >> 8) & 0xff);\n    ba.set1(i0+5, v[2] >> 16);\n    ba.set1(i0+6, v[3] & 0xff);\n    ba.set1(i0+7, v[3] >> 8);\n    return 0;\n}\n\n//Provides: caml_ba_set_1\nfunction caml_ba_set_1(ba, i0, v) {\n    return ba.set1(i0, v);\n}\n\n//Provides: caml_ba_set_2\nfunction caml_ba_set_2(ba, i0, i1, v) {\n    return ba.set([i0, i1], v);\n}\n\n//Provides: caml_ba_set_3\nfunction caml_ba_set_3(ba, i0, i1, i2, v) {\n    return ba.set([i0, i1, i2], v);\n}\n\n//Provides: caml_ba_blit\nfunction caml_ba_blit(src, dst) {\n    dst.blit(src);\n    return 0;\n}\n\n//Provides: caml_ba_fill\nfunction caml_ba_fill(ba, init) {\n    ba.fill(init);\n    return 0;\n}\n\n//Provides: caml_ba_sub\nfunction caml_ba_sub(ba, ofs, len) {\n    return ba.sub(ofs, len);\n}\n\n//Provides: caml_ba_slice\n//Requires: caml_js_from_array\nfunction caml_ba_slice(ba, vind) {\n    return ba.slice(caml_js_from_array(vind));\n}\n\n//Provides: caml_ba_reshape\n//Requires: caml_js_from_array\nfunction caml_ba_reshape(ba, vind) {\n    return ba.reshape(caml_js_from_array(vind));\n}\n","// Js_of_ocaml library\n// http://www.ocsigen.org/js_of_ocaml/\n// Copyright (C) 2010 Jérôme Vouillon\n// Laboratoire PPS - CNRS Université Paris Diderot\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, with linking exception;\n// either version 2.1 of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n///////////// Jslib: code specific to Js_of_ocaml\n\n//Provides: caml_js_from_bool const (const)\nfunction caml_js_from_bool(x) { return !!x; }\n//Provides: caml_js_to_bool const (const)\nfunction caml_js_to_bool(x) { return +x; }\n//Provides: caml_js_from_float const (const)\nfunction caml_js_from_float(x) { return x; }\n//Provides: caml_js_to_float const (const)\nfunction caml_js_to_float(x) { return x; }\n//Provides: caml_js_from_string mutable (const)\n//Requires: MlString\nfunction caml_js_from_string(s) { return s.toString(); }\n//Provides: caml_js_from_array mutable (shallow)\n//Requires: raw_array_sub\nfunction caml_js_from_array(a) { return raw_array_sub(a,1,a.length-1); }\n//Provides: caml_js_to_array mutable (shallow)\n//Requires: raw_array_cons\nfunction caml_js_to_array(a) { return raw_array_cons(a,0); }\n\n//Provides: caml_js_var mutable (const)\n//Requires: js_print_stderr\n//Requires: MlString\nfunction caml_js_var(x) {\n  var x = x.toString();\n  //Checks that x has the form ident[.ident]*\n  if(!x.match(/^[a-zA-Z_$][a-zA-Z_$0-9]*(\\.[a-zA-Z_$][a-zA-Z_$0-9]*)*$/)){\n    js_print_stderr(\"caml_js_var: \\\"\" + x + \"\\\" is not a valid JavaScript variable. continuing ..\");\n    //joo_global_object.console.error(\"Js.Unsafe.eval_string\")\n  }\n  return eval(x);\n}\n//Provides: caml_js_call (const, mutable, shallow)\n//Requires: caml_js_from_array\nfunction caml_js_call(f, o, args) { return f.apply(o, caml_js_from_array(args)); }\n//Provides: caml_js_fun_call (const, shallow)\n//Requires: caml_js_from_array\nfunction caml_js_fun_call(f, a) {\n  switch (a.length) {\n  case 1: return f();\n  case 2: return f (a[1]);\n  case 3: return f (a[1],a[2]);\n  case 4: return f (a[1],a[2],a[3]);\n  case 5: return f (a[1],a[2],a[3],a[4]);\n  case 6: return f (a[1],a[2],a[3],a[4],a[5]);\n  case 7: return f (a[1],a[2],a[3],a[4],a[5],a[6]);\n  case 8: return f (a[1],a[2],a[3],a[4],a[5],a[6],a[7]);\n  }\n  return f.apply(null, caml_js_from_array(a));\n}\n//Provides: caml_js_meth_call (mutable, const, shallow)\n//Requires: MlString\n//Requires: caml_js_from_array\nfunction caml_js_meth_call(o, f, args) {\n  return o[f.toString()].apply(o, caml_js_from_array(args));\n}\n//Provides: caml_js_new (const, shallow)\n//Requires: caml_js_from_array\nfunction caml_js_new(c, a) {\n  switch (a.length) {\n  case 1: return new c;\n  case 2: return new c (a[1]);\n  case 3: return new c (a[1],a[2]);\n  case 4: return new c (a[1],a[2],a[3]);\n  case 5: return new c (a[1],a[2],a[3],a[4]);\n  case 6: return new c (a[1],a[2],a[3],a[4],a[5]);\n  case 7: return new c (a[1],a[2],a[3],a[4],a[5],a[6]);\n  case 8: return new c (a[1],a[2],a[3],a[4],a[5],a[6],a[7]);\n  }\n  function F() { return c.apply(this, caml_js_from_array(a)); }\n  F.prototype = c.prototype;\n  return new F;\n}\n//Provides: caml_ojs_new_arr (const, shallow)\n//Requires: caml_js_from_array\nfunction caml_ojs_new_arr(c, a) {\n  switch (a.length) {\n  case 1: return new c;\n  case 2: return new c (a[0]);\n  case 3: return new c (a[0],a[1]);\n  case 4: return new c (a[0],a[1],a[2]);\n  case 5: return new c (a[0],a[1],a[2],a[3]);\n  case 6: return new c (a[0],a[1],a[2],a[3],a[4]);\n  case 7: return new c (a[0],a[1],a[2],a[3],a[4],a[5]);\n  case 8: return new c (a[0],a[1],a[2],a[3],a[4],a[5],a[6]);\n  }\n  function F() { return c.apply(this, a); }\n  F.prototype = c.prototype;\n  return new F;\n}\n//Provides: caml_js_wrap_callback const (const)\n//Requires: caml_call_gen\nfunction caml_js_wrap_callback(f) {\n  return function () {\n    if(arguments.length > 0){\n      return caml_call_gen(f, arguments);\n    } else {\n      return caml_call_gen(f, [undefined]);\n    }\n  }\n}\n\n//Provides: caml_js_wrap_callback_arguments\n//Requires: caml_js_wrap_callback\nfunction caml_js_wrap_callback_arguments(f) {\n  return function() {\n    return caml_js_wrap_callback(f)(arguments);\n  }\n}\n//Provides: caml_js_wrap_callback_strict const\n//Requires: caml_call_gen\nfunction caml_js_wrap_callback_strict(arity, f) {\n  return function () {\n    var n = arguments.length;\n    if(n == arity) return caml_call_gen(f, arguments);\n    var args = new Array(arity);\n    for (var i = 0; i < n && i < arity; i++) args[i] = arguments[i];\n    return caml_call_gen(f, args);\n  };\n}\n//Provides: caml_js_wrap_meth_callback const (const)\n//Requires: caml_call_gen,raw_array_cons\nfunction caml_js_wrap_meth_callback(f) {\n  return function () {\n    return caml_call_gen(f,raw_array_cons(arguments,this));\n  }\n}\n//Provides: caml_js_wrap_meth_callback_arguments const (const)\n//Requires: caml_call_gen,raw_array_cons\nfunction caml_js_wrap_meth_callback_arguments(f) {\n  return function () {\n    return caml_call_gen(f,[this,arguments]);\n  }\n}\n//Provides: caml_js_wrap_meth_callback_strict const\n//Requires: caml_call_gen, raw_array_cons\nfunction caml_js_wrap_meth_callback_strict(arity, f) {\n  return function () {\n    var n = arguments.length;\n    if(n == arity) return caml_call_gen(f, raw_array_cons(arguments,this));\n    var args = new Array(arity + 1);\n    args[0] = this;\n    for (var i = 1; i < n && i <= arity; i++) args[i] = arguments[i];\n    return caml_call_gen(f, args);\n  };\n}\n//Provides: caml_js_wrap_meth_callback_unsafe const (const)\n//Requires: caml_call_gen,raw_array_cons\nfunction caml_js_wrap_meth_callback_unsafe(f) {\n  return function () { f.apply(null, raw_array_cons(arguments,this)); }\n}\n//Provides: caml_js_equals mutable (const, const)\nfunction caml_js_equals (x, y) { return +(x == y); }\n//Provides: caml_js_to_byte_string const\n//Requires: caml_new_string\nfunction caml_js_to_byte_string (s) {return caml_new_string (s);}\n\n//Provides: caml_js_eval_string (const)\n//Requires: MlString\nfunction caml_js_eval_string (s) {return eval(s.toString());}\n\n//Provides: caml_js_expr (const)\n//Requires: js_print_stderr\n//Requires: MlString\nfunction caml_js_expr(s) {\n  js_print_stderr(\"caml_js_expr: fallback to runtime evaluation\");\n  return eval(s.toString());}\n\n//Provides: caml_pure_js_expr const (const)\n//Requires: js_print_stderr\n//Requires: MlString\nfunction caml_pure_js_expr (s){\n  js_print_stderr(\"caml_pure_js_expr: fallback to runtime evaluation\");\n  return eval(s.toString());}\n\n//Provides: caml_js_object (object_literal)\n//Requires: MlString\nfunction caml_js_object (a) {\n  var o = {};\n  for (var i = 1; i < a.length; i++) {\n    var p = a[i];\n    o[p[1].toString()] = p[2];\n  }\n  return o;\n}\n\n\n//Provides: caml_js_export_var\nfunction caml_js_export_var (){\n  if(typeof module !== 'undefined' && module && module.exports)\n    return module.exports\n  else\n    return joo_global_object;\n}\n","// Js_of_ocaml runtime support\n// http://www.ocsigen.org/js_of_ocaml/\n// Copyright (C) 2010 Jérôme Vouillon\n// Laboratoire PPS - CNRS Université Paris Diderot\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, with linking exception;\n// either version 2.1 of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n//Provides: jsoo_floor_log2\nvar log2_ok = Math.log2 && Math.log2(1.1235582092889474E+307) == 1020\nfunction jsoo_floor_log2(x) {\n    if(log2_ok) return Math.floor(Math.log2(x))\n    var i = 0;\n    if (x == 0) return -Infinity;\n    if(x>=1) {while (x>=2) {x/=2; i++} }\n    else {while (x < 1) {x*=2; i--} };\n    return i;\n}\n\n//Provides: caml_int64_bits_of_float const\n//Requires: jsoo_floor_log2\nfunction caml_int64_bits_of_float (x) {\n  if (!isFinite(x)) {\n    if (isNaN(x)) return [255, 1, 0, 0x7ff0];\n    return (x > 0)?[255,0,0,0x7ff0]:[255,0,0,0xfff0];\n  }\n  var sign = (x==0 && 1/x == -Infinity)?0x8000:(x>=0)?0:0x8000;\n  if (sign) x = -x;\n  // Int64.bits_of_float 1.1235582092889474E+307 = 0x7fb0000000000000L\n  // using Math.LOG2E*Math.log(x) in place of Math.log2 result in precision lost\n  var exp = jsoo_floor_log2(x) + 1023;\n  if (exp <= 0) {\n    exp = 0;\n    x /= Math.pow(2,-1026);\n  } else {\n    x /= Math.pow(2,exp-1027);\n    if (x < 16) {\n      x *= 2; exp -=1; }\n    if (exp == 0) {\n      x /= 2; }\n  }\n  var k = Math.pow(2,24);\n  var r3 = x|0;\n  x = (x - r3) * k;\n  var r2 = x|0;\n  x = (x - r2) * k;\n  var r1 = x|0;\n  r3 = (r3 &0xf) | sign | exp << 4;\n  return [255, r1, r2, r3];\n}\n\n//Provides: caml_int32_bits_of_float const\n//Requires: jsoo_floor_log2\nfunction caml_int32_bits_of_float (x) {\n  var float32a = new joo_global_object.Float32Array(1);\n  float32a[0] = x;\n  var int32a = new joo_global_object.Int32Array(float32a.buffer);\n  return int32a[0] | 0;\n}\n\n//FP literals can be written using the hexadecimal\n//notation 0x<mantissa in hex>p<exponent> from ISO C99.\n//https://github.com/dankogai/js-hexfloat/blob/master/hexfloat.js\n//Provides: caml_hexstring_of_float const\n//Requires: caml_js_to_string, caml_str_repeat\nfunction caml_hexstring_of_float (x, prec, style) {\n  if (!isFinite(x)) {\n    if (isNaN(x)) return caml_js_to_string(\"nan\");\n    return caml_js_to_string ((x > 0)?\"infinity\":\"-infinity\");\n  }\n  var sign = (x==0 && 1/x == -Infinity)?1:(x>=0)?0:1;\n  if(sign) x = -x;\n  var exp = 0;\n  if (x == 0) { }\n  else if (x < 1) {\n    while (x < 1 && exp > -1022)  { x *= 2; exp-- }\n  } else {\n    while (x >= 2) { x /= 2; exp++ }\n  }\n  var exp_sign = exp < 0 ? '' : '+';\n  var sign_str = '';\n  if (sign) sign_str = '-'\n  else {\n    switch(style){\n    case 43 /* '+' */: sign_str = '+'; break;\n    case 32 /* ' ' */: sign_str = ' '; break;\n    default: break;\n    }\n  }\n  if (prec >= 0 && prec < 13) {\n    /* If a precision is given, and is small, round mantissa accordingly */\n      var cst = Math.pow(2,prec * 4);\n      x = Math.round(x * cst) / cst;\n  }\n  var x_str = x.toString(16);\n  if(prec >= 0){\n      var idx = x_str.indexOf('.');\n    if(idx<0) {\n      x_str += '.' + caml_str_repeat(prec, '0');\n    }\n    else {\n      var size = idx+1+prec;\n      if(x_str.length < size)\n        x_str += caml_str_repeat(size - x_str.length, '0');\n      else\n        x_str = x_str.substr(0,size);\n    }\n  }\n  return caml_js_to_string (sign_str + '0x' + x_str + 'p' + exp_sign + exp.toString(10));\n}\n\n//Provides: caml_int64_float_of_bits const\nfunction caml_int64_float_of_bits (x) {\n  var exp = (x[3] & 0x7fff) >> 4;\n  if (exp == 2047) {\n      if ((x[1]|x[2]|(x[3]&0xf)) == 0)\n        return (x[3] & 0x8000)?(-Infinity):Infinity;\n      else\n        return NaN;\n  }\n  var k = Math.pow(2,-24);\n  var res = (x[1]*k+x[2])*k+(x[3]&0xf);\n  if (exp > 0) {\n    res += 16;\n    res *= Math.pow(2,exp-1027);\n  } else\n    res *= Math.pow(2,-1026);\n  if (x[3] & 0x8000) res = - res;\n  return res;\n}\n\n//Provides: caml_int32_float_of_bits const\nfunction caml_int32_float_of_bits (x) {\n  var int32a = new joo_global_object.Int32Array(1);\n  int32a[0] = x;\n  var float32a = new joo_global_object.Float32Array(int32a.buffer);\n  return float32a[0];\n}\n\n//Provides: caml_classify_float const\nfunction caml_classify_float (x) {\n  if (isFinite (x)) {\n    if (Math.abs(x) >= 2.2250738585072014e-308) return 0;\n    if (x != 0) return 1;\n    return 2;\n  }\n  return isNaN(x)?4:3;\n}\n//Provides: caml_modf_float const\nfunction caml_modf_float (x) {\n  if (isFinite (x)) {\n    var neg = (1/x) < 0;\n    x = Math.abs(x);\n    var i = Math.floor (x);\n    var f = x - i;\n    if (neg) { i = -i; f = -f; }\n    return [0, f, i];\n  }\n  if (isNaN (x)) return [0, NaN, NaN];\n  return [0, 1/x, x];\n}\n//Provides: caml_ldexp_float const\nfunction caml_ldexp_float (x,exp) {\n  exp |= 0;\n  if (exp > 1023) {\n    exp -= 1023;\n    x *= Math.pow(2, 1023);\n    if (exp > 1023) {  // in case x is subnormal\n      exp -= 1023;\n      x *= Math.pow(2, 1023);\n    }\n  }\n  if (exp < -1023) {\n    exp += 1023;\n    x *= Math.pow(2, -1023);\n  }\n  x *= Math.pow(2, exp);\n  return x;\n}\n//Provides: caml_frexp_float const\n//Requires: jsoo_floor_log2\nfunction caml_frexp_float (x) {\n  if ((x == 0) || !isFinite(x)) return [0, x, 0];\n  var neg = x < 0;\n  if (neg) x = - x;\n  var exp = jsoo_floor_log2(x) + 1;\n  x *= Math.pow(2,-exp);\n  if (x < 0.5) { x *= 2; exp -= 1; }\n  if (neg) x = - x;\n  return [0, x, exp];\n}\n\n//Provides: caml_float_compare const\nfunction caml_float_compare (x, y) {\n  if (x === y) return 0;\n  if (x < y) return -1;\n  if (x > y) return 1;\n  if (x === x) return 1;\n  if (y === y) return -1;\n  return 0;\n}\n\n//Provides: caml_copysign_float const\nfunction caml_copysign_float (x, y) {\n  if (y == 0) y = 1 / y;\n  x = Math.abs(x);\n  return (y < 0)?(-x):x;\n}\n\n//Provides: caml_expm1_float const\nfunction caml_expm1_float (x) {\n  var y = Math.exp(x), z = y - 1;\n  return (Math.abs(x)>1?z:(z==0?x:x*z/Math.log(y)));\n}\n\n//Provides: caml_log1p_float const\nfunction caml_log1p_float (x) {\n  var y = 1 + x, z = y - 1;\n  return (z==0?x:x*Math.log(y)/z);\n}\n\n//Provides: caml_hypot_float const\nfunction caml_hypot_float (x, y) {\n  var x = Math.abs(x), y = Math.abs(y);\n  var a = Math.max(x, y), b = Math.min(x,y) / (a?a:1);\n  return (a * Math.sqrt(1 + b*b));\n}\n\n// FIX: these five functions only give approximate results.\n//Provides: caml_log10_float const\nfunction caml_log10_float (x) { return Math.LOG10E * Math.log(x); }\n//Provides: caml_cosh_float const\nfunction caml_cosh_float (x) { return (Math.exp(x) + Math.exp(-x)) / 2; }\n//Provides: caml_sinh_float const\nfunction caml_sinh_float (x) { return (Math.exp(x) - Math.exp(-x)) / 2; }\n//Provides: caml_tanh_float const\nfunction caml_tanh_float (x) {\n  var y = Math.exp(x), z = Math.exp(-x);\n  return (y - z) / (y + z);\n}\n","// Js_of_ocaml runtime support\n// http://www.ocsigen.org/js_of_ocaml/\n// Copyright (C) 2010 Jérôme Vouillon\n// Laboratoire PPS - CNRS Université Paris Diderot\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, with linking exception;\n// either version 2.1 of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n//Provides: caml_int64_offset\nvar caml_int64_offset = Math.pow(2, -24);\n\n//Provides: caml_int64_ucompare const\nfunction caml_int64_ucompare(x,y) {\n  if (x[3] > y[3]) return 1;\n  if (x[3] < y[3]) return -1;\n  if (x[2] > y[2]) return 1;\n  if (x[2] < y[2]) return -1;\n  if (x[1] > y[1]) return 1;\n  if (x[1] < y[1]) return -1;\n  return 0;\n}\n\n//Provides: caml_int64_ult const\n//Requires: caml_int64_ucompare\nfunction caml_int64_ult(x,y) { return caml_int64_ucompare(x,y) < 0; }\n\n//Provides: caml_int64_compare const\nfunction caml_int64_compare(x,y) {\n  var x3 = x[3] << 16;\n  var y3 = y[3] << 16;\n  if (x3 > y3) return 1;\n  if (x3 < y3) return -1;\n  if (x[2] > y[2]) return 1;\n  if (x[2] < y[2]) return -1;\n  if (x[1] > y[1]) return 1;\n  if (x[1] < y[1]) return -1;\n  return 0;\n}\n\n//Provides: caml_int64_neg const\nfunction caml_int64_neg (x) {\n  var y1 = - x[1];\n  var y2 = - x[2] + (y1 >> 24);\n  var y3 = - x[3] + (y2 >> 24);\n  return [255, y1 & 0xffffff, y2 & 0xffffff, y3 & 0xffff];\n}\n\n//Provides: caml_int64_add const\nfunction caml_int64_add (x, y) {\n  var z1 = x[1] + y[1];\n  var z2 = x[2] + y[2] + (z1 >> 24);\n  var z3 = x[3] + y[3] + (z2 >> 24);\n  return [255, z1 & 0xffffff, z2 & 0xffffff, z3 & 0xffff];\n}\n\n//Provides: caml_int64_sub const\nfunction caml_int64_sub (x, y) {\n  var z1 = x[1] - y[1];\n  var z2 = x[2] - y[2] + (z1 >> 24);\n  var z3 = x[3] - y[3] + (z2 >> 24);\n  return [255, z1 & 0xffffff, z2 & 0xffffff, z3 & 0xffff];\n}\n\n//Provides: caml_int64_mul const\n//Requires: caml_int64_offset\nfunction caml_int64_mul(x,y) {\n  var z1 = x[1] * y[1];\n  var z2 = ((z1 * caml_int64_offset) | 0) + x[2] * y[1] + x[1] * y[2];\n  var z3 = ((z2 * caml_int64_offset) | 0) + x[3] * y[1] + x[2] * y[2] + x[1] * y[3];\n  return [255, z1 & 0xffffff, z2 & 0xffffff, z3 & 0xffff];\n}\n\n//Provides: caml_int64_is_zero const\nfunction caml_int64_is_zero(x) {\n  return (x[3]|x[2]|x[1]) == 0;\n}\n\n//Provides: caml_int64_is_negative const\nfunction caml_int64_is_negative(x) {\n  return (x[3] << 16) < 0;\n}\n\n//Provides: caml_int64_is_min_int const\nfunction caml_int64_is_min_int(x) {\n  return x[3] == 0x8000 && (x[1]|x[2]) == 0;\n}\n\n//Provides: caml_int64_is_minus_one const\nfunction caml_int64_is_minus_one(x) {\n  return x[3] == 0xffff && (x[1]&x[2]) == 0xffffff;\n}\n\n//Provides: caml_int64_and const\nfunction caml_int64_and (x, y) {\n  return [255, x[1]&y[1], x[2]&y[2], x[3]&y[3]];\n}\n\n//Provides: caml_int64_or const\nfunction caml_int64_or (x, y) {\n  return [255, x[1]|y[1], x[2]|y[2], x[3]|y[3]];\n}\n\n//Provides: caml_int64_xor const\nfunction caml_int64_xor (x, y) {\n  return [255, x[1]^y[1], x[2]^y[2], x[3]^y[3]];\n}\n\n//Provides: caml_int64_shift_left const\nfunction caml_int64_shift_left (x, s) {\n  s = s & 63;\n  if (s == 0) return x;\n  if (s < 24)\n    return [255,\n            (x[1] << s) & 0xffffff,\n            ((x[2] << s) | (x[1] >> (24 - s))) & 0xffffff,\n            ((x[3] << s) | (x[2] >> (24 - s))) & 0xffff];\n  if (s < 48)\n    return [255, 0,\n            (x[1] << (s - 24)) & 0xffffff,\n            ((x[2] << (s - 24)) | (x[1] >> (48 - s))) & 0xffff];\n  return [255, 0, 0, (x[1] << (s - 48)) & 0xffff];\n}\n\n//Provides: caml_int64_shift_right_unsigned const\nfunction caml_int64_shift_right_unsigned (x, s) {\n  s = s & 63;\n  if (s == 0) return x;\n  if (s < 24)\n    return [255,\n            ((x[1] >> s) | (x[2] << (24 - s))) & 0xffffff,\n            ((x[2] >> s) | (x[3] << (24 - s))) & 0xffffff,\n            (x[3] >> s)];\n  if (s < 48)\n    return [255,\n            ((x[2] >> (s - 24)) | (x[3] << (48 - s))) & 0xffffff,\n            (x[3] >> (s - 24)),\n            0];\n  return [255, (x[3] >> (s - 48)), 0, 0];\n}\n\n//Provides: caml_int64_shift_right const\nfunction caml_int64_shift_right (x, s) {\n  s = s & 63;\n  if (s == 0) return x;\n  var h = (x[3] << 16) >> 16;\n  if (s < 24)\n    return [255,\n            ((x[1] >> s) | (x[2] << (24 - s))) & 0xffffff,\n            ((x[2] >> s) | (h << (24 - s))) & 0xffffff,\n            ((x[3] << 16) >> s) >>> 16];\n  var sign = (x[3] << 16) >> 31;\n  if (s < 48)\n    return [255,\n            ((x[2] >> (s - 24)) | (x[3] << (48 - s))) & 0xffffff,\n            ((x[3] << 16) >> (s - 24) >> 16) & 0xffffff,\n            sign & 0xffff];\n  return [255,\n          ((x[3] << 16) >> (s - 32)) & 0xffffff,\n          sign & 0xffffff, sign & 0xffff];\n}\n\n//Provides: caml_int64_lsl1 const\nfunction caml_int64_lsl1 (x) {\n  x[3] = (x[3] << 1) | (x[2] >> 23);\n  x[2] = ((x[2] << 1) | (x[1] >> 23)) & 0xffffff;\n  x[1] = (x[1] << 1) & 0xffffff;\n}\n\n//Provides: caml_int64_lsr1 const\nfunction caml_int64_lsr1 (x) {\n  x[1] = ((x[1] >>> 1) | (x[2] << 23)) & 0xffffff;\n  x[2] = ((x[2] >>> 1) | (x[3] << 23)) & 0xffffff;\n  x[3] = x[3] >>> 1;\n}\n\n//Provides: caml_int64_udivmod const\n//Requires: caml_int64_ucompare, caml_int64_lsl1, caml_int64_lsr1\n//Requires: caml_int64_sub\n//Requires: caml_obj_dup\nfunction caml_int64_udivmod (x, y) {\n  var offset = 0;\n  var modulus = caml_obj_dup(x);\n  var divisor = caml_obj_dup(y);\n  var quotient = [255, 0, 0, 0];\n  while (caml_int64_ucompare (modulus, divisor) > 0) {\n    offset++;\n    caml_int64_lsl1 (divisor);\n  }\n  while (offset >= 0) {\n    offset --;\n    caml_int64_lsl1 (quotient);\n    if (caml_int64_ucompare (modulus, divisor) >= 0) {\n      quotient[1] ++;\n      modulus = caml_int64_sub (modulus, divisor);\n    }\n    caml_int64_lsr1 (divisor);\n  }\n  return [0,quotient, modulus];\n}\n\n//Provides: caml_int64_div const\n//Requires: caml_int64_is_zero, caml_raise_zero_divide\n//Requires: caml_int64_neg, caml_int64_udivmod\nfunction caml_int64_div (x, y)\n{\n  if (caml_int64_is_zero (y)) caml_raise_zero_divide ();\n  var sign = x[3] ^ y[3];\n  if (x[3] & 0x8000) x = caml_int64_neg(x);\n  if (y[3] & 0x8000) y = caml_int64_neg(y);\n  var q = caml_int64_udivmod(x, y)[1];\n  if (sign & 0x8000) q = caml_int64_neg(q);\n  return q;\n}\n\n//Provides: caml_int64_mod const\n//Requires: caml_int64_is_zero, caml_raise_zero_divide\n//Requires: caml_int64_neg, caml_int64_udivmod\nfunction caml_int64_mod (x, y)\n{\n  if (caml_int64_is_zero (y)) caml_raise_zero_divide ();\n  var sign = x[3];\n  if (x[3] & 0x8000) x = caml_int64_neg(x);\n  if (y[3] & 0x8000) y = caml_int64_neg(y);\n  var r = caml_int64_udivmod(x, y)[2];\n  if (sign & 0x8000) r = caml_int64_neg(r);\n  return r;\n}\n\n//Provides: caml_int64_of_int32 const\nfunction caml_int64_of_int32 (x) {\n  return [255, x & 0xffffff, (x >> 24) & 0xffffff, (x >> 31) & 0xffff]\n}\n\n//Provides: caml_int64_to_int32 const\nfunction caml_int64_to_int32 (x) {\n  return x[1] | (x[2] << 24);\n}\n\n//Provides: caml_int64_to_float const\nfunction caml_int64_to_float (x) {\n  return ((x[3] << 16) * Math.pow(2, 32) + x[2] * Math.pow(2, 24)) + x[1];\n}\n\n//Provides: caml_int64_of_float const\n//Requires: caml_int64_offset\nfunction caml_int64_of_float (x) {\n  if (x < 0) x = Math.ceil(x);\n  return [255,\n          x & 0xffffff,\n          Math.floor(x * caml_int64_offset) & 0xffffff,\n          Math.floor(x * caml_int64_offset * caml_int64_offset) & 0xffff];\n}\n\n//Provides: caml_int64_format const\n//Requires: caml_parse_format, caml_finish_formatting\n//Requires: caml_int64_is_negative, caml_int64_neg\n//Requires: caml_int64_of_int32, caml_int64_udivmod, caml_int64_to_int32\n//Requires: caml_int64_is_zero, caml_str_repeat\nfunction caml_int64_format (fmt, x) {\n  var f = caml_parse_format(fmt);\n  if (f.signedconv && caml_int64_is_negative(x)) {\n    f.sign = -1; x = caml_int64_neg(x);\n  }\n  var buffer = \"\";\n  var wbase = caml_int64_of_int32(f.base);\n  var cvtbl = \"0123456789abcdef\";\n  do {\n    var p = caml_int64_udivmod(x, wbase);\n    x = p[1];\n    buffer = cvtbl.charAt(caml_int64_to_int32(p[2])) + buffer;\n  } while (! caml_int64_is_zero(x));\n  if (f.prec >= 0) {\n    f.filler = ' ';\n    var n = f.prec - buffer.length;\n    if (n > 0) buffer = caml_str_repeat (n, '0') + buffer;\n  }\n  return caml_finish_formatting(f, buffer);\n}\n\n//Provides: caml_int64_of_string\n//Requires: caml_parse_sign_and_base, caml_failwith, caml_parse_digit, MlString\n//Requires: caml_int64_of_int32, caml_int64_udivmod, caml_int64_ult\n//Requires: caml_int64_add, caml_int64_mul, caml_int64_neg\n//Requires: caml_ml_string_length,caml_string_unsafe_get\nfunction caml_int64_of_string(s) {\n  var r = caml_parse_sign_and_base (s);\n  var i = r[0], sign = r[1], base = r[2];\n  var base64 = caml_int64_of_int32(base);\n  var threshold =\n    caml_int64_udivmod([255, 0xffffff, 0xfffffff, 0xffff], base64)[1];\n  var c = caml_string_unsafe_get(s, i);\n  var d = caml_parse_digit(c);\n  if (d < 0 || d >= base) caml_failwith(\"int_of_string\");\n  var res = caml_int64_of_int32(d);\n  for (;;) {\n    i++;\n    c = caml_string_unsafe_get(s, i);\n    if (c == 95) continue;\n    d = caml_parse_digit(c);\n    if (d < 0 || d >= base) break;\n    /* Detect overflow in multiplication base * res */\n    if (caml_int64_ult(threshold, res)) caml_failwith(\"int_of_string\");\n    d = caml_int64_of_int32(d);\n    res = caml_int64_add(caml_int64_mul(base64, res), d);\n    /* Detect overflow in addition (base * res) + d */\n    if (caml_int64_ult(res, d)) caml_failwith(\"int_of_string\");\n  }\n  if (i != caml_ml_string_length(s)) caml_failwith(\"int_of_string\");\n  if (r[2] == 10 && caml_int64_ult([255, 0, 0, 0x8000], res))\n    caml_failwith(\"int_of_string\");\n  if (sign < 0) res = caml_int64_neg(res);\n  return res;\n}\n\n//Provides: caml_int64_of_bytes\nfunction caml_int64_of_bytes(a) {\n  return [255, a[7] | (a[6] << 8) | (a[5] << 16),\n          a[4] | (a[3] << 8) | (a[2] << 16), a[1] | (a[0] << 8)];\n}\n//Provides: caml_int64_to_bytes\nfunction caml_int64_to_bytes(x) {\n  return [x[3] >> 8, x[3] & 0xff, x[2] >> 16, (x[2] >> 8) & 0xff, x[2] & 0xff,\n          x[1] >> 16, (x[1] >> 8) & 0xff, x[1] & 0xff];\n}\n","// Js_of_ocaml runtime support\n// http://www.ocsigen.org/js_of_ocaml/\n// Copyright (C) 2010 Jérôme Vouillon\n// Laboratoire PPS - CNRS Université Paris Diderot\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, with linking exception;\n// either version 2.1 of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n// Weak API, but without the weak semantics\n\n//Provides: caml_ephe_key_offset\n//Version: < 4.03\nvar caml_ephe_key_offset = 2\n\n//Provides: caml_ephe_key_offset\n//Version: >= 4.03\nvar caml_ephe_key_offset = 3\n\n//Provides: caml_ephe_data_offset\n//Version: >= 4.03\nvar caml_ephe_data_offset = 2\n\n//Provides: caml_weak_create\n//Requires: caml_ephe_key_offset, caml_invalid_argument\nfunction caml_weak_create (n) {\n  if (n < 0) caml_invalid_argument (\"Weak.create\");\n  var x = [251,\"caml_ephe_list_head\"];\n  x.length = caml_ephe_key_offset + n;\n  return x;\n}\n//Provides: caml_weak_set\n//Requires: caml_ephe_key_offset, caml_invalid_argument\nfunction caml_weak_set(x, i, v) {\n    if(i < 0 || caml_ephe_key_offset + i >= x.length)\n      caml_invalid_argument (\"Weak.set\");\n    x[caml_ephe_key_offset + i] = v;\n    return 0;\n}\n//Provides: caml_weak_get\n//Requires: caml_ephe_key_offset, caml_invalid_argument\nfunction caml_weak_get(x, i) {\n    if(i < 0 || caml_ephe_key_offset + i >= x.length)\n      caml_invalid_argument (\"Weak.get_key\");\n    return (x[caml_ephe_key_offset + i ]===undefined)?0:x[caml_ephe_key_offset + i];\n}\n//Provides: caml_weak_get_copy\n//Requires: caml_weak_get,caml_ephe_key_offset\n//Requires: caml_obj_dup, caml_invalid_argument\nfunction caml_weak_get_copy(x, i) {\n  if(i < 0 || caml_ephe_key_offset + i >= x.length)\n    caml_invalid_argument (\"Weak.get_copy\");\n  var y = caml_weak_get(x, i);\n  if (y === 0) return y;\n  var z = y[1];\n  if (z instanceof Array) return [0, caml_obj_dup(z)];\n  return y;\n}\n//Provides: caml_weak_check mutable\n//Requires: caml_ephe_key_offset\nfunction caml_weak_check(x, i) {\n  if(x[caml_ephe_key_offset + i]!==undefined && x[caml_ephe_key_offset + i] !==0)\n    return 1;\n  else\n    return 0;\n}\n\n//Provides: caml_weak_blit\n//Requires: caml_array_blit\n//Requires: caml_ephe_key_offset\nfunction caml_weak_blit(a1, i1, a2, i2, len) {\n  // minus one because caml_array_blit works on ocaml array\n  caml_array_blit(a1, caml_ephe_key_offset + i1 - 1,\n                  a2, caml_ephe_key_offset + i2 - 1,\n                  len);\n  return 0;\n}\n\n//Provides: caml_ephe_create\n//Requires: caml_weak_create\nvar caml_ephe_create = caml_weak_create\n\n//Provides: caml_ephe_blit_key\n//Requires: caml_weak_blit\nvar caml_ephe_blit_key = caml_weak_blit\n\n//Provides: caml_ephe_get_key\n//Requires: caml_weak_get\nvar caml_ephe_get_key = caml_weak_get\n\n//Provides: caml_ephe_get_key_copy\n//Requires: caml_weak_get_copy\nvar caml_ephe_get_key_copy = caml_weak_get_copy\n\n//Provides: caml_ephe_check_key\n//Requires: caml_weak_check\nvar caml_ephe_check_key = caml_weak_check\n\n//Provides: caml_ephe_set_key\n//Requires: caml_weak_set\nfunction caml_ephe_set_key(x, i, v) {\n  return caml_weak_set(x, i, [0, v])\n}\n\n//Provides: caml_ephe_unset_key\n//Requires: caml_weak_set\nfunction caml_ephe_unset_key(x, i) {\n  return caml_weak_set(x, i, 0)\n}\n\n//Provides: caml_ephe_blit_data\n//Requires: caml_ephe_data_offset\n//Version: >= 4.03\nfunction caml_ephe_blit_data(src, dst){\n  dst[caml_ephe_data_offset] = src[caml_ephe_data_offset];\n  return 0;\n}\n\n//Provides: caml_ephe_get_data\n//Requires: caml_ephe_data_offset\n//Version: >= 4.03\nfunction caml_ephe_get_data(x){\n  if(x[caml_ephe_data_offset] === undefined)\n    return 0;\n  else\n    return [0, x[caml_ephe_data_offset]];\n}\n\n//Provides: caml_ephe_get_data_copy\n//Requires: caml_ephe_data_offset\n//Requires: caml_obj_dup\n//Version: >= 4.03\nfunction caml_ephe_get_data_copy(x){\n  if(x[caml_ephe_data_offset] === undefined)\n    return 0;\n  else\n    return [0, caml_obj_dup(x[caml_ephe_data_offset])];\n}\n\n//Provides: caml_ephe_set_data\n//Requires: caml_ephe_data_offset\n//Version: >= 4.03\nfunction caml_ephe_set_data(x, data){\n  x[caml_ephe_data_offset] = data;\n  return 0;\n}\n\n//Provides: caml_ephe_unset_data\n//Requires: caml_ephe_data_offset\n//Version: >= 4.03\nfunction caml_ephe_unset_data(x, data){\n  x[caml_ephe_data_offset] = undefined;\n  return 0;\n}\n\n//Provides: caml_ephe_check_data\n//Requires: caml_ephe_data_offset\n//Version: >= 4.03\nfunction caml_ephe_check_data(x){\n  if(x[caml_ephe_data_offset] === undefined)\n    return 0;\n  else\n    return 1;\n}\n","// Js_of_ocaml runtime support\n// http://www.ocsigen.org/js_of_ocaml/\n// Copyright (C) 2014 Jérôme Vouillon, Hugo Heuzard\n// Laboratoire PPS - CNRS Université Paris Diderot\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, with linking exception;\n// either version 2.1 of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n///////////// Io\n\n//Provides: caml_sys_close\n//Requires: caml_global_data\nfunction caml_sys_close(fd) {\n  delete caml_global_data.fds[fd];\n  return 0;\n}\n\n//Provides: caml_std_output\n//Requires: caml_new_string, caml_ml_string_length, caml_ml_channels\nfunction caml_std_output(chanid,s){\n  var chan = caml_ml_channels[chanid];\n  var str = caml_new_string(s);\n  var slen = caml_ml_string_length(str);\n  chan.file.write(chan.offset, str, 0, slen);\n  chan.offset += slen;\n  return 0;\n}\n\n//Provides: caml_sys_open\n//Requires: caml_raise_sys_error, caml_global_data\n//Requires: caml_create_string,MlFakeFile\n//Requires: js_print_stderr, js_print_stdout\n//Requires: caml_std_output\n//Requires: resolve_fs_device\nfunction caml_sys_open_internal(idx,output,file,flags) {\n  if(caml_global_data.fds === undefined) caml_global_data.fds = new Array();\n  flags=flags?flags:{};\n  var info = {};\n  info.file = file;\n  info.offset = flags.append?file.length():0;\n  info.flags = flags;\n  info.output = output;\n  caml_global_data.fds[idx] = info;\n  if(!caml_global_data.fd_last_idx || idx > caml_global_data.fd_last_idx)\n    caml_global_data.fd_last_idx = idx;\n  return idx;\n}\nfunction caml_sys_open (name, flags, _perms) {\n  var f = {};\n  while(flags){\n    switch(flags[1]){\n    case 0: f.rdonly = 1;break;\n    case 1: f.wronly = 1;break;\n    case 2: f.append = 1;break;\n    case 3: f.create = 1;break;\n    case 4: f.truncate = 1;break;\n    case 5: f.excl = 1; break;\n    case 6: f.binary = 1;break;\n    case 7: f.text = 1;break;\n    case 8: f.nonblock = 1;break;\n    }\n    flags=flags[2];\n  }\n  if(f.rdonly && f.wronly)\n    caml_raise_sys_error(name.toString() + \" : flags Open_rdonly and Open_wronly are not compatible\");\n  if(f.text && f.binary)\n    caml_raise_sys_error(name.toString() + \" : flags Open_text and Open_binary are not compatible\");\n  var root = resolve_fs_device(name);\n  var file = root.device.open(root.rest,f);\n  var idx = caml_global_data.fd_last_idx?caml_global_data.fd_last_idx:0;\n  return caml_sys_open_internal (idx+1,caml_std_output,file,f);\n}\ncaml_sys_open_internal(0,caml_std_output, new MlFakeFile(caml_create_string(0))); //stdin\ncaml_sys_open_internal(1,js_print_stdout, new MlFakeFile(caml_create_string(0))); //stdout\ncaml_sys_open_internal(2,js_print_stderr, new MlFakeFile(caml_create_string(0))); //stderr\n\n\n// ocaml Channels\n\n//Provides: caml_ml_set_channel_name\nfunction caml_ml_set_channel_name() {\n  return 0\n}\n\n//Provides: caml_ml_channels\nvar caml_ml_channels = new Array();\n\n//Provides: caml_ml_out_channels_list\n//Requires: caml_ml_channels\nfunction caml_ml_out_channels_list () {\n  var l = 0;\n  for(var c = 0; c < caml_ml_channels.length; c++){\n    if(caml_ml_channels[c] && caml_ml_channels[c].opened && caml_ml_channels[c].out)\n      l=[0,caml_ml_channels[c],l];\n  }\n  return l;\n}\n\n\n//Provides: caml_ml_open_descriptor_out\n//Requires: caml_ml_channels, caml_global_data\n//Requires: caml_raise_sys_error\nfunction caml_ml_open_descriptor_out (fd) {\n  var data = caml_global_data.fds[fd];\n  if(data.flags.rdonly) caml_raise_sys_error(\"fd \"+ fd + \" is readonly\");\n  var channel = {\n    file:data.file,\n    offset:data.offset,\n    fd:fd,\n    opened:true,\n    out:true,\n    buffer:\"\"\n  };\n  caml_ml_channels[channel.fd]=channel;\n  return channel.fd;\n}\n\n//Provides: caml_ml_open_descriptor_in\n//Requires: caml_global_data,caml_sys_open,caml_raise_sys_error, caml_ml_channels\nfunction caml_ml_open_descriptor_in (fd)  {\n  var data = caml_global_data.fds[fd];\n  if(data.flags.wronly) caml_raise_sys_error(\"fd \"+ fd + \" is writeonly\");\n\n  var channel = {\n    file:data.file,\n    offset:data.offset,\n    fd:fd,\n    opened:true,\n    out: false,\n    refill:null\n  };\n  caml_ml_channels[channel.fd]=channel;\n  return channel.fd;\n}\n\n\n//Provides: caml_ml_set_binary_mode\n//Requires: caml_global_data, caml_ml_channels\nfunction caml_ml_set_binary_mode(chanid,mode){\n  var chan = caml_ml_channels[chanid];\n  var data = caml_global_data.fds[chan.fd];\n  data.flags.text = !mode\n  data.flags.binary = mode\n  return 0;\n}\n\n//Input from in_channel\n\n//Provides: caml_ml_close_channel\n//Requires: caml_ml_flush, caml_ml_channels\n//Requires: caml_sys_close\nfunction caml_ml_close_channel (chanid) {\n  var chan = caml_ml_channels[chanid];\n  caml_ml_flush(chanid);\n  chan.opened = false;\n  chan.file.close();\n  caml_sys_close(chan.fd)\n  return 0;\n}\n\n//Provides: caml_ml_channel_size\n//Requires: caml_ml_string_length, caml_ml_channels\nfunction caml_ml_channel_size(chanid) {\n  var chan = caml_ml_channels[chanid];\n  return chan.file.length();\n}\n\n//Provides: caml_ml_channel_size_64\n//Requires: caml_ml_channel_size,caml_int64_of_float,caml_ml_string_length, caml_ml_channels\nfunction caml_ml_channel_size_64(chanid) {\n  var chan = caml_ml_channels[chanid];\n  return caml_int64_of_float(chan.file.length ());\n}\n\n//Provides: caml_ml_set_channel_output\n//Requires: caml_ml_channels, caml_global_data\nfunction caml_ml_set_channel_output(chanid,f) {\n  var chan = caml_ml_channels[chanid];\n  caml_global_data.fds[chan.fd].output = f;\n  return 0;\n}\n\n//Provides: caml_ml_set_channel_refill\n//Requires: caml_ml_channels, caml_global_data\nfunction caml_ml_set_channel_refill(chanid,f) {\n  caml_ml_channels[chanid].refill = f;\n  return 0;\n}\n\n//Provides: caml_ml_refill_input\n//Requires: caml_ml_string_length\nfunction caml_ml_refill_input (chan) {\n  var str = chan.refill();\n  var str_len = caml_ml_string_length(str);\n  if (str_len == 0) chan.refill = null;\n  chan.file.write(chan.file.length(), str, 0, str_len);\n  return str_len;\n}\n\n//Provides: caml_ml_may_refill_input\n//Requires: caml_ml_string_length, caml_ml_refill_input, caml_ml_channels\nfunction caml_ml_may_refill_input (chanid) {\n  var chan = caml_ml_channels[chanid];\n  if (chan.refill == null) return;\n  if (chan.file.length() != chan.offset) return;\n  caml_ml_refill_input (chan);\n}\n\n//Provides: caml_ml_input\n//Requires: caml_ml_refill_input, caml_ml_channels\nfunction caml_ml_input (chanid, s, i, l) {\n  var chan = caml_ml_channels[chanid];\n  var l2 = chan.file.length() - chan.offset;\n  if (l2 == 0 && chan.refill != null) l2 = caml_ml_refill_input(chan);\n  if (l2 < l) l = l2;\n  chan.file.read(chan.offset, s, i, l);\n  chan.offset += l;\n  return l;\n}\n\n//Provides: caml_input_value\n//Requires: caml_marshal_data_size, caml_input_value_from_string, caml_create_string, caml_ml_channels\nfunction caml_input_value (chanid) {\n  var chan = caml_ml_channels[chanid];\n\n  var buf = caml_create_string(8);\n  chan.file.read(chan.offset,buf,0,8);\n\n  // Header is 20 bytes\n  var len = caml_marshal_data_size (buf, 0) + 20;\n\n  var buf = caml_create_string(len);\n  chan.file.read(chan.offset,buf,0,len);\n\n  var offset = [0];\n  var res = caml_input_value_from_string(buf, offset);\n  chan.offset = chan.offset + offset[0];\n  return res;\n}\n\n//Provides: caml_ml_input_char\n//Requires: caml_raise_end_of_file, caml_array_bound_error\n//Requires: caml_ml_string_length, caml_string_get, caml_ml_may_refill_input, caml_ml_channels, caml_create_string\nfunction caml_ml_input_char (chanid) {\n  var chan = caml_ml_channels[chanid];\n  caml_ml_may_refill_input(chanid);\n  if (chan.offset >= chan.file.length())\n    caml_raise_end_of_file();\n  var res = chan.file.read_one(chan.offset);\n  chan.offset++;\n  return res;\n}\n\n//Provides: caml_ml_input_int\n//Requires: caml_raise_end_of_file\n//Requires: caml_ml_string_length, caml_string_unsafe_get, caml_ml_refill_input, caml_ml_channels\n//Requires: caml_create_string\nfunction caml_ml_input_int (chanid) {\n  var chan = caml_ml_channels[chanid];\n  var file = chan.file;\n  while ((chan.offset + 3) >= file.length()) {\n    var l = caml_ml_refill_input(chan);\n    if (l == 0) caml_raise_end_of_file();\n  }\n  var o = chan.offset;\n  var r =(file.read_one(o  ) << 24)\n      |  (file.read_one(o+1) << 16)\n      |  (file.read_one(o+2) << 8)\n      |  (file.read_one(o+3));\n  chan.offset+=4;\n  return r;\n}\n\n//Provides: caml_ml_seek_in\n//Requires: caml_raise_sys_error, caml_ml_channels\nfunction caml_ml_seek_in(chanid,pos){\n  var chan = caml_ml_channels[chanid];\n  if (chan.refill != null) caml_raise_sys_error(\"Illegal seek\");\n  chan.offset = pos;\n  return 0;\n}\n\n//Provides: caml_ml_seek_in_64\n//Requires: caml_int64_to_float, caml_raise_sys_error, caml_ml_channels\nfunction caml_ml_seek_in_64(chanid,pos){\n  var chan = caml_ml_channels[chanid];\n  if (chan.refill != null) caml_raise_sys_error(\"Illegal seek\");\n  chan.offset = caml_int64_to_float(pos);\n  return 0;\n}\n\n//Provides: caml_ml_pos_in\n//Requires: caml_ml_channels\nfunction caml_ml_pos_in(chanid) {return caml_ml_channels[chanid].offset}\n\n//Provides: caml_ml_pos_in_64\n//Requires: caml_int64_of_float, caml_ml_channels\nfunction caml_ml_pos_in_64(chanid) {return caml_int64_of_float(caml_ml_channels[chanid].offset)}\n\n//Provides: caml_ml_input_scan_line\n//Requires: caml_array_bound_error, caml_ml_string_length, caml_string_get\n//Requires: caml_ml_may_refill_input, caml_ml_channels, caml_create_string\nfunction caml_ml_input_scan_line(chanid){\n  var chan = caml_ml_channels[chanid];\n  caml_ml_may_refill_input(chanid);\n  var p = chan.offset;\n  var len = chan.file.length();\n  if(p >= len) { return 0;}\n  while(true) {\n    if(p >= len) return - (p - chan.offset);\n    if(chan.file.read_one(p) == 10) return p - chan.offset + 1;\n    p++;\n  }\n}\n\n//Provides: caml_ml_flush\n//Requires: caml_raise_sys_error, caml_global_data, caml_ml_channels\nfunction caml_ml_flush (chanid) {\n    var chan = caml_ml_channels[chanid];\n    if(! chan.opened) caml_raise_sys_error(\"Cannot flush a closed channel\");\n    if(!chan.buffer || chan.buffer == \"\") return 0;\n    if(chan.fd\n       && caml_global_data.fds[chan.fd]\n       && caml_global_data.fds[chan.fd].output) {\n      var output = caml_global_data.fds[chan.fd].output;\n      switch(output.length){\n      case 2: output(chanid,chan.buffer);break;\n      default: output(chan.buffer)\n      };\n    }\n    chan.buffer = \"\";\n    return 0;\n}\n\n//output to out_channel\n\n//Provides: caml_ml_output\n//Requires: caml_ml_flush,caml_ml_string_length\n//Requires: caml_create_string, caml_blit_string, caml_raise_sys_error, caml_ml_channels\nfunction caml_ml_output (chanid,buffer,offset,len) {\n    var chan = caml_ml_channels[chanid];\n    if(! chan.opened) caml_raise_sys_error(\"Cannot output to a closed channel\");\n    var string;\n    if(offset == 0 && caml_ml_string_length(buffer) == len)\n        string = buffer;\n    else {\n        string = caml_create_string(len);\n        caml_blit_string(buffer,offset,string,0,len);\n    }\n    var jsstring = string.toString();\n    var id = jsstring.lastIndexOf(\"\\n\");\n    if(id < 0)\n        chan.buffer+=jsstring;\n    else {\n        chan.buffer+=jsstring.substr(0,id+1);\n        caml_ml_flush (chanid);\n        chan.buffer += jsstring.substr(id+1);\n    }\n    return 0;\n}\n\n//Provides: caml_ml_output_bytes\n//Requires: caml_ml_output\nvar caml_ml_output_bytes = caml_ml_output\n\n//Provides: caml_ml_output_char\n//Requires: caml_ml_output\n//Requires: caml_new_string, caml_ml_channels\nfunction caml_ml_output_char (chanid,c) {\n    var s = caml_new_string(String.fromCharCode(c));\n    caml_ml_output(chanid,s,0,1);\n    return 0;\n}\n\n//Provides: caml_output_value\n//Requires: caml_output_value_to_string, caml_ml_output,caml_ml_string_length, caml_ml_channels\nfunction caml_output_value (chanid,v,_flags) {\n  var s = caml_output_value_to_string(v);\n  caml_ml_output(chanid,s,0,caml_ml_string_length(s));\n  return 0;\n}\n\n\n//Provides: caml_ml_seek_out\n//Requires: caml_ml_channels\nfunction caml_ml_seek_out(chanid,pos){\n  caml_ml_channels[chanid].offset = pos;\n  return 0;\n}\n\n//Provides: caml_ml_seek_out_64\n//Requires: caml_int64_to_float, caml_ml_channels\nfunction caml_ml_seek_out_64(chanid,pos){\n  caml_ml_channels[chanid].offset = caml_int64_to_float(pos);\n  return 0;\n}\n\n//Provides: caml_ml_pos_out\n//Requires: caml_ml_channels\nfunction caml_ml_pos_out(chanid) {return caml_ml_channels[chanid].offset}\n\n//Provides: caml_ml_pos_out_64\n//Requires: caml_int64_of_float, caml_ml_channels\nfunction caml_ml_pos_out_64(chanid) {\n  return caml_int64_of_float (caml_ml_channels[chanid].offset);\n}\n\n//Provides: caml_ml_output_int\n//Requires: caml_ml_output\n//Requires: caml_string_of_array\nfunction caml_ml_output_int (chanid,i) {\n  var arr = [(i>>24) & 0xFF,(i>>16) & 0xFF,(i>>8) & 0xFF,i & 0xFF ];\n  var s = caml_string_of_array(arr);\n  caml_ml_output(chanid,s,0,4);\n  return 0\n}\n","// Js_of_ocaml runtime support\n// http://www.ocsigen.org/js_of_ocaml/\n// Copyright (C) 2014 Jérôme Vouillon, Hugo Heuzard\n// Laboratoire PPS - CNRS Université Paris Diderot\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, with linking exception;\n// either version 2.1 of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n///////////// Dummy filesystem\n\n//Provides: caml_current_dir\nif(joo_global_object.process && joo_global_object.process.cwd)\n  var caml_current_dir = joo_global_object.process.cwd();\nelse\n  var caml_current_dir =  \"/static\";\nif(caml_current_dir.slice(-1) !== \"/\") caml_current_dir += \"/\"\n//Provides: MlFile\nfunction MlFile(){  }\n\n//Provides: caml_make_path\n//Requires: caml_current_dir,MlString\nfunction caml_make_path (name) {\n  name=(name instanceof MlString)?name.toString():name;\n  if(name.charCodeAt(0) != 47)\n    name = caml_current_dir + name;\n  var comp = name.split(\"/\");\n  var ncomp = []\n  for(var i = 0; i<comp.length; i++){\n    switch(comp[i]){\n    case \"..\": if(ncomp.length>1) ncomp.pop(); break;\n    case \".\": break;\n    case \"\": if(ncomp.length == 0) ncomp.push(\"\"); break;\n    default: ncomp.push(comp[i]);break\n    }\n  }\n  ncomp.orig = name;\n  return ncomp;\n}\n\n//Provides:jsoo_mount_point\n//Requires: MlFakeDevice, MlNodeDevice\nvar jsoo_mount_point = []\nif (typeof require == \"undefined\") {\n    jsoo_mount_point.push({path:\"/\",device:new MlFakeDevice(\"/\")});\n} else {\n    jsoo_mount_point.push({path:\"/\",device:new MlNodeDevice(\"/\")});\n}\njsoo_mount_point.push({path:\"/static/\", device:new MlFakeDevice(\"/static/\")});\n\n//Provides:caml_list_mount_point\n//Requires: jsoo_mount_point, caml_new_string\nfunction caml_list_mount_point(){\n    var prev = 0\n    for(var i = 0; i < jsoo_mount_point.length; i++){\n        var old = prev;\n        prev = [0, caml_new_string(jsoo_mount_point[i].path), old]\n    }\n    return prev;\n}\n\n//Provides: resolve_fs_device\n//Requires: caml_make_path, jsoo_mount_point\nfunction resolve_fs_device(name){\n  var path = caml_make_path(name);\n  var name = path.join(\"/\");\n  var name_slash = name + \"/\";\n  var res;\n  for(var i = 0; i < jsoo_mount_point.length; i++) {\n    var m = jsoo_mount_point[i];\n    if(name_slash.search(m.path) == 0\n       && (!res || res.path.length < m.path.length))\n        res = {path:m.path,device:m.device,rest:name.substring(m.path.length,name.length)};\n  }\n  return res;\n}\n\n//Provides: caml_mount_autoload\n//Requires: MlFakeDevice, caml_make_path, jsoo_mount_point\nfunction caml_mount_autoload(name,f){\n  var path = caml_make_path(name);\n  var name = path.join(\"/\") + \"/\";\n  jsoo_mount_point.push({path:name,device:new MlFakeDevice(name,f)})\n  return 0;\n}\n\n//Provides: caml_unmount\n//Requires: jsoo_mount_point, caml_make_path\nfunction caml_unmount(name){\n  var path = caml_make_path(name);\n  var name = path.join(\"/\") + \"/\";\n  var idx = -1;\n  for(var i = 0; i < jsoo_mount_point.length; i++)\n    if(jsoo_mount_point[i].path == name) idx = i;\n  if(idx > -1) jsoo_mount_point.splice(idx,1);\n  return 0\n}\n\n//Provides: caml_sys_getcwd\n//Requires: caml_current_dir, caml_new_string\nfunction caml_sys_getcwd() {\n  return caml_new_string(caml_current_dir);\n}\n\n//Provides: caml_sys_chdir\n//Requires: caml_current_dir, caml_raise_no_such_file, resolve_fs_device\nfunction caml_sys_chdir(dir) {\n  var root = resolve_fs_device(dir);\n  if(root.device.exists(root.rest)) {\n    caml_current_dir = root.base + dir.rest + \"/\"\n    return 0;\n  }\n  else {\n    caml_raise_no_such_file(dir);\n  }\n}\n\n//Provides: caml_raise_no_such_file\n//Requires: MlString, caml_raise_sys_error\nfunction caml_raise_no_such_file(name){\n  name = (name instanceof MlString)?name.toString():name;\n  caml_raise_sys_error (name + \": No such file or directory\");\n}\n\n//Provides: caml_raise_not_a_dir\n//Requires: MlString, caml_raise_sys_error\nfunction caml_raise_not_a_dir(name){\n  name = (name instanceof MlString)?name.toString():name;\n  caml_raise_sys_error (name + \": Not a directory\");\n}\n\n//Provides: caml_sys_file_exists\n//Requires: resolve_fs_device\nfunction caml_sys_file_exists (name) {\n  var root = resolve_fs_device(name);\n  return root.device.exists(root.rest);\n}\n\n//Provides: caml_sys_read_directory\n//Requires: caml_new_string\n//Requires: caml_raise_not_a_dir, resolve_fs_device\nfunction caml_sys_read_directory(name){\n  var root = resolve_fs_device(name);\n  var a = root.device.readdir(root.rest);\n  var l = new Array(a.length + 1);\n  l[0] = 0;\n  for(var i=0;i<a.length;i++)\n    l[i+1] = caml_new_string(a[i]);\n  return l;\n}\n\n//Provides: caml_sys_remove\n//Requires: caml_raise_no_such_file, resolve_fs_device\nfunction caml_sys_remove(name){\n  var root = resolve_fs_device(name);\n  var ok = root.device.unlink(root.rest);\n  if(ok == 0) caml_raise_no_such_file(name);\n  return 0;\n}\n\n//Provides: caml_sys_is_directory\n//Requires: resolve_fs_device\nfunction caml_sys_is_directory(name){\n  var root = resolve_fs_device(name);\n  var a = root.device.is_dir(root.rest);\n  return a?1:0;\n}\n\n//Provides: caml_sys_rename\n//Requires: caml_failwith, resolve_fs_device\nfunction caml_sys_rename(o,n){\n  var o_root = resolve_fs_device(o);\n  var n_root = resolve_fs_device(n);\n  if(o_root.device != n_root.device)\n    caml_failwith(\"caml_sys_rename: cannot move file between two filesystem\");\n  if(!o_root.device.rename)\n    caml_failwith(\"caml_sys_rename: no implemented\");\n  o_root.device.rename(o_root.rest, n_root.rest);\n}\n\n\n//Provides: caml_ba_map_file\n//Requires: caml_failwith\nfunction caml_ba_map_file(vfd, kind, layout, shared, dims, pos) {\n  // var data = caml_global_data.fds[vfd];\n  caml_failwith(\"caml_ba_map_file not implemented\");\n}\n\n//Provides: caml_ba_map_file_bytecode\n//Requires: caml_ba_map_file\nfunction caml_ba_map_file_bytecode(argv,argn){\n  return caml_ba_map_file(argv[0],argv[1],argv[2],argv[3],argv[4],argv[5]);\n}\n\n//Provides: caml_create_file_extern\nfunction caml_create_file_extern(name,content){\n  if(joo_global_object.caml_create_file)\n    joo_global_object.caml_create_file(name,content);\n  else {\n    if(!joo_global_object.caml_fs_tmp) joo_global_object.caml_fs_tmp = [];\n    joo_global_object.caml_fs_tmp.push({name:name,content:content});\n  }\n  return 0;\n}\n\n//Provides: caml_fs_init\n//Requires: caml_create_file\nfunction caml_fs_init (){\n  var tmp=joo_global_object.caml_fs_tmp\n  if(tmp){\n    for(var i = 0; i < tmp.length; i++){\n      caml_create_file(tmp[i].name,tmp[i].content);\n    }\n  }\n  joo_global_object.caml_create_file = caml_create_file;\n  return 0;\n}\n\n//Provides: caml_create_file\n//Requires: caml_failwith, resolve_fs_device\nfunction caml_create_file(name,content) {\n  var root = resolve_fs_device(name);\n  if(! root.device.register) caml_failwith(\"cannot register file\");\n  root.device.register(root.rest,content);\n  return 0;\n}\n\n//Provides: caml_read_file_content\n//Requires: resolve_fs_device, caml_raise_no_such_file, caml_create_string\nfunction caml_read_file_content (name) {\n  var root = resolve_fs_device(name);\n  if(root.device.exists(root.rest)) {\n    var file = root.device.open(root.rest,{rdonly:1});\n    var len  = file.length();\n    var buf  = caml_create_string(len);\n    file.read(0,buf,0,len);\n    return buf\n  }\n  caml_raise_no_such_file(name);\n}\n","// Js_of_ocaml runtime support\n// http://www.ocsigen.org/js_of_ocaml/\n// Copyright (C) 2014 Jérôme Vouillon, Hugo Heuzard\n// Laboratoire PPS - CNRS Université Paris Diderot\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, with linking exception;\n// either version 2.1 of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n//Provides: MlFakeDevice\n//Requires: MlFakeFile, caml_create_string\n//Requires: caml_raise_sys_error, caml_raise_no_such_file, caml_new_string, caml_string_of_array\n//Requires: MlString\nfunction MlFakeDevice (root, f) {\n  this.content={};\n  this.root = root;\n  this.lookupFun = f;\n}\nMlFakeDevice.prototype.nm = function(name) {\n  return (this.root + name);\n}\nMlFakeDevice.prototype.lookup = function(name) {\n  if(!this.content[name] && this.lookupFun) {\n    var res = this.lookupFun(caml_new_string(this.root), caml_new_string(name));\n    if(res != 0) this.content[name]=new MlFakeFile(res[1]);\n  }    \n}\nMlFakeDevice.prototype.exists = function(name) {\n  this.lookup(name);\n  return this.content[name]?1:0;\n}\nMlFakeDevice.prototype.readdir = function(name) {\n  var name_slash = (name == \"\")?\"\":(name + \"/\");\n  var r = new RegExp(\"^\" + name_slash + \"([^/]*)\");\n  var seen = {}\n  var a = [];\n  for(var n in this.content) {\n    var m = n.match(r);\n    if(m && !seen[m[1]]) {seen[m[1]] = true; a.push(m[1])}\n  }\n  return a;\n}\nMlFakeDevice.prototype.is_dir = function(name) {\n  var name_slash = (name == \"\")?\"\":(name + \"/\");\n  var r = new RegExp(\"^\" + name_slash + \"([^/]*)\");\n  var a = [];\n  for(var n in this.content) {\n    var m = n.match(r);\n    if(m) return 1\n  }\n  return 0\n}\nMlFakeDevice.prototype.unlink = function(name) {\n  var ok = this.content[name]?true:false;\n  delete this.content[name];\n  return ok;\n}\nMlFakeDevice.prototype.open = function(name, f) {\n  if(f.rdonly && f.wronly)\n    caml_raise_sys_error(this.nm(name) + \" : flags Open_rdonly and Open_wronly are not compatible\");\n  if(f.text && f.binary)\n    caml_raise_sys_error(this.nm(name) + \" : flags Open_text and Open_binary are not compatible\");\n  this.lookup(name);\n  if (this.content[name]) {\n    if (this.is_dir(name)) caml_raise_sys_error(this.nm(name) + \" : is a directory\");\n    if (f.create && f.excl) caml_raise_sys_error(this.nm(name) + \" : file already exists\");\n    var file = this.content[name];\n    if(f.truncate) file.truncate();\n    return file;\n  } else if (f.create) {\n    this.content[name] = new MlFakeFile(caml_create_string(0));\n    return this.content[name];\n  } else {\n    caml_raise_no_such_file (this.nm(name));\n  }\n}\n\nMlFakeDevice.prototype.register= function (name,content){\n  if(this.content[name]) caml_raise_sys_error(this.nm(name) + \" : file already exists\");\n  if(content instanceof MlString)\n    this.content[name] = new MlFakeFile(content);\n  else if(content instanceof Array)\n    this.content[name] = new MlFakeFile(caml_string_of_array(content));\n  else if(content.toString) {\n    var mlstring = caml_new_string(content.toString());\n    this.content[name] = new MlFakeFile(mlstring);\n  }\n}\n\nMlFakeDevice.prototype.constructor = MlFakeDevice\n\n//Provides: MlFakeFile\n//Requires: MlFile\n//Requires: caml_create_string, caml_ml_string_length,caml_blit_string\n//Requires: caml_string_get\nfunction MlFakeFile(content){\n  this.data = content;\n}\nMlFakeFile.prototype = new MlFile ();\nMlFakeFile.prototype.truncate = function(len){\n  var old = this.data;\n  this.data = caml_create_string(len|0);\n  caml_blit_string(old, 0, this.data, 0, len);\n}\nMlFakeFile.prototype.length = function () {\n  return caml_ml_string_length(this.data);\n}\nMlFakeFile.prototype.write = function(offset,buf,pos,len){\n  var clen = this.length();\n  if(offset + len >= clen) {\n    var new_str = caml_create_string(offset + len);\n    var old_data = this.data;\n    this.data = new_str;\n    caml_blit_string(old_data, 0, this.data, 0, clen);\n  }\n  caml_blit_string(buf, pos, this.data, offset, len);\n  return 0\n}\nMlFakeFile.prototype.read = function(offset,buf,pos,len){\n  var clen = this.length();\n  caml_blit_string(this.data, offset, buf, pos, len);\n  return 0\n}\nMlFakeFile.prototype.read_one = function(offset){\n  return caml_string_get(this.data, offset);\n}\nMlFakeFile.prototype.close = function(){\n\n}\nMlFakeFile.prototype.constructor = MlFakeFile\n","// Js_of_ocaml runtime support\n// http://www.ocsigen.org/js_of_ocaml/\n// Copyright (C) 2014 Jérôme Vouillon, Hugo Heuzard\n// Laboratoire PPS - CNRS Université Paris Diderot\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, with linking exception;\n// either version 2.1 of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n//Provides: MlNodeDevice\n//Requires: MlNodeFile\nfunction MlNodeDevice(root) {\n  this.fs = require('fs');\n  this.root = root;\n}\nMlNodeDevice.prototype.nm = function(name) {\n  return (this.root + name);\n}\nMlNodeDevice.prototype.exists = function(name) {\n  return this.fs.existsSync(this.nm(name))?1:0;\n}\nMlNodeDevice.prototype.readdir = function(name) {\n  return this.fs.readdirSync(this.nm(name));\n}\nMlNodeDevice.prototype.is_dir = function(name) {\n  return this.fs.statSync(this.nm(name)).isDirectory()?1:0;\n}\nMlNodeDevice.prototype.unlink = function(name) {\n  var b = this.fs.existsSync(this.nm(name))?1:0;\n  this.fs.unlinkSync(this.nm(name));\n  return b\n}\nMlNodeDevice.prototype.open = function(name, f) {\n  var consts = require('constants');\n  var res = 0;\n  for(var key in f){\n    switch(key){\n    case \"rdonly\"  : res |= consts.O_RDONLY; break;\n    case \"wronly\"  : res |= consts.O_WRONLY; break;\n    case \"append\"  :\n      res |= consts.O_WRONLY | consts.O_APPEND;\n      break;\n    case \"create\"   : res |= consts.O_CREAT;    break;\n    case \"truncate\" : res |= consts.O_TRUNC;    break;\n    case \"excl\"     : res |= consts.O_EXCL;     break;\n    case \"binary\"   : res |= consts.O_BINARY;   break;\n    case \"text\"     : res |= consts.O_TEXT;     break;\n    case \"nonblock\" : res |= consts.O_NONBLOCK; break;\n    }\n  }\n  var fd = this.fs.openSync(this.nm(name), res);\n  return new MlNodeFile(fd);\n}\n\nMlNodeDevice.prototype.rename = function(o,n) {\n  this.fs.renameSync(this.nm(o), this.nm(n));\n}\n\nMlNodeDevice.prototype.constructor = MlNodeDevice\n\n//Provides: MlNodeFile\n//Requires: MlFile, caml_array_of_string, caml_string_get, caml_string_set\n\nvar Buffer = joo_global_object.Buffer\n\nfunction MlNodeFile(fd){\n  this.fs = require('fs');\n  this.fd = fd;\n}\nMlNodeFile.prototype = new MlFile ();\n\nMlNodeFile.prototype.truncate = function(len){\n  this.fs.ftruncateSync(this.fd,len|0)\n}\nMlNodeFile.prototype.length = function () {\n  return this.fs.fstatSync(this.fd).size;\n}\nMlNodeFile.prototype.write = function(offset,buf,buf_offset,len){\n  var a = caml_array_of_string(buf);\n  if(! a instanceof joo_global_object.Uint8Array)\n    a = new joo_global_object.Uint8Array(a);\n  var buffer = new Buffer (a);\n  this.fs.writeSync(this.fd, buffer, buf_offset, len, offset);\n  return 0;\n}\nMlNodeFile.prototype.read = function(offset,buf,buf_offset,len){\n  var a = caml_array_of_string(buf);\n  if(! (a instanceof joo_global_object.Uint8Array))\n    a = new joo_global_object.Uint8Array(a);\n  var buffer = new Buffer(a);\n  this.fs.readSync(this.fd, buffer, buf_offset, len, offset);\n  for(var i = 0; i < len; i++){\n    caml_string_set(buf,buf_offset + i,buffer[buf_offset+i]);\n  }\n  return 0\n}\nMlNodeFile.prototype.read_one = function(offset){\n  var a = new joo_global_object.Uint8Array(1);\n  var buffer = new Buffer(a);\n  this.fs.readSync(this.fd, buffer, 0, 1, offset);\n  return buffer[0];\n}\nMlNodeFile.prototype.close = function(){\n  this.fs.closeSync(this.fd);\n}\n\nMlNodeFile.prototype.constructor = MlNodeFile;\n","// Js_of_ocaml library\n// http://www.ocsigen.org/js_of_ocaml/\n// Copyright (C) 2010 Jérôme Vouillon\n// Laboratoire PPS - CNRS Université Paris Diderot\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, with linking exception;\n// either version 2.1 of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n///////////// Jslib\n\n//Provides: caml_js_pure_expr const\nfunction caml_js_pure_expr (f) { return f(); }\n\n//Provides: caml_js_set (mutable, const, const)\nfunction caml_js_set(o,f,v) { o[f]=v;return 0}\n//Provides: caml_js_get mutable (const, const)\nfunction caml_js_get(o,f) { return o[f]; }\n//Provides: caml_js_delete (mutable, const)\nfunction caml_js_delete(o,f) { delete o[f]; return 0}\n\n//Provides: caml_js_instanceof (const, const)\nfunction caml_js_instanceof(o,c) { return o instanceof c; }\n\n//Provides: caml_js_typeof (const)\nfunction caml_js_typeof(o) { return typeof o; }\n\n//Provides: caml_js_on_ie const\nfunction caml_js_on_ie () {\n  var ua =\n    joo_global_object.navigator?joo_global_object.navigator.userAgent:\"\";\n  return ua.indexOf(\"MSIE\") != -1 && ua.indexOf(\"Opera\") != 0;\n}\n\n//Provides: caml_js_html_escape const (const)\nvar caml_js_regexps = { amp:/&/g, lt:/</g, quot:/\\\"/g, all:/[&<\\\"]/ };\nfunction caml_js_html_escape (s) {\n  if (!caml_js_regexps.all.test(s)) return s;\n  return s.replace(caml_js_regexps.amp, \"&amp;\")\n          .replace(caml_js_regexps.lt, \"&lt;\")\n          .replace(caml_js_regexps.quot, \"&quot;\");\n}\n\n//Provides: caml_js_html_entities const (const)\nfunction caml_js_html_entities(s) {\n    var str, temp = document.createElement('p');\n    temp.innerHTML= s;\n    str= temp.textContent || temp.innerText;\n    temp=null;\n    return str;\n}\n\n/////////// Debugging console\n//Provides: caml_js_get_console const\nfunction caml_js_get_console () {\n  var c = joo_global_object.console?joo_global_object.console:{};\n  var m = [\"log\", \"debug\", \"info\", \"warn\", \"error\", \"assert\", \"dir\", \"dirxml\",\n           \"trace\", \"group\", \"groupCollapsed\", \"groupEnd\", \"time\", \"timeEnd\"];\n  function f () {}\n  for (var i = 0; i < m.length; i++) if (!c[m[i]]) c[m[i]]=f;\n  return c;\n}\n\n//Provides:caml_trampoline\nfunction caml_trampoline(res) {\n  var c = 1;\n  while(res && res.joo_tramp){\n    res = res.joo_tramp.apply(null, res.joo_args);\n    c++;\n  }\n  return res;\n}\n\n//Provides:caml_trampoline_return\nfunction caml_trampoline_return(f,args) {\n  return {joo_tramp:f,joo_args:args};\n}\n\n//Provides: js_print_stdout (const)\nfunction js_print_stdout(s) {\n  var g = joo_global_object;\n  if (g.process && g.process.stdout && g.process.stdout.write) {\n    g.process.stdout.write(s)\n  } else {\n  // Do not output the last \\n if present\n  // as console logging display a newline at the end\n  if(s.charCodeAt(s.length - 1) == 10)\n    s = s.substr(0,s.length - 1 );\n  var v = g.console;\n  v  && v.log && v.log(s);\n  }\n}\n//Provides: js_print_stderr (const)\nfunction js_print_stderr(s) {\n  var g = joo_global_object;\n  if (g.process && g.process.stdout && g.process.stdout.write) {\n    g.process.stderr.write(s)\n  } else {\n  // Do not output the last \\n if present\n  // as console logging display a newline at the end\n  if(s.charCodeAt(s.length - 1) == 10)\n    s = s.substr(0,s.length - 1 );\n  var v = g.console;\n  v && v.error && v.error(s);\n  }\n}\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*                          Benoit Vaugon, ENSTA                          *)\n(*                                                                        *)\n(*   Copyright 2014 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* Padding position. *)\ntype padty =\n  | Left   (* Text is left justified ('-' option).               *)\n  | Right  (* Text is right justified (no '-' option).           *)\n  | Zeros  (* Text is right justified by zeros (see '0' option). *)\n\n(***)\n\n(* Integer conversion. *)\ntype int_conv =\n  | Int_d | Int_pd | Int_sd        (*  %d | %+d | % d  *)\n  | Int_i | Int_pi | Int_si        (*  %i | %+i | % i  *)\n  | Int_x | Int_Cx                 (*  %x | %#x        *)\n  | Int_X | Int_CX                 (*  %X | %#X        *)\n  | Int_o | Int_Co                 (*  %o | %#o        *)\n  | Int_u                          (*  %u              *)\n\n(* Float conversion. *)\ntype float_conv =\n  | Float_f | Float_pf | Float_sf  (*  %f | %+f | % f  *)\n  | Float_e | Float_pe | Float_se  (*  %e | %+e | % e  *)\n  | Float_E | Float_pE | Float_sE  (*  %E | %+E | % E  *)\n  | Float_g | Float_pg | Float_sg  (*  %g | %+g | % g  *)\n  | Float_G | Float_pG | Float_sG  (*  %G | %+G | % G  *)\n  | Float_F                        (*  %F              *)\n  | Float_h | Float_ph | Float_sh  (*  %h | %+h | % h  *)\n  | Float_H | Float_pH | Float_sH  (*  %H | %+H | % H  *)\n\n(***)\n\n(* Char sets (see %[...]) are bitmaps implemented as 32-char strings. *)\ntype char_set = string\n\n(***)\n\n(* Counter used in Scanf. *)\ntype counter =\n  | Line_counter     (*  %l      *)\n  | Char_counter     (*  %n      *)\n  | Token_counter    (*  %N, %L  *)\n\n(***)\n\n(* Padding of strings and numbers. *)\ntype ('a, 'b) padding =\n  (* No padding (ex: \"%d\") *)\n  | No_padding  : ('a, 'a) padding\n  (* Literal padding (ex: \"%8d\") *)\n  | Lit_padding : padty * int -> ('a, 'a) padding\n  (* Padding as extra argument (ex: \"%*d\") *)\n  | Arg_padding : padty -> (int -> 'a, 'a) padding\n\n(* Some formats, such as %_d,\n   only accept an optional number as padding option (no extra argument) *)\ntype pad_option = int option\n\n(* Precision of floats and '0'-padding of integers. *)\ntype ('a, 'b) precision =\n  (* No precision (ex: \"%f\") *)\n  | No_precision : ('a, 'a) precision\n  (* Literal precision (ex: \"%.3f\") *)\n  | Lit_precision : int -> ('a, 'a) precision\n  (* Precision as extra argument (ex: \"%.*f\") *)\n  | Arg_precision : (int -> 'a, 'a) precision\n\n(* Some formats, such as %_f,\n   only accept an optional number as precision option (no extra argument) *)\ntype prec_option = int option\n\n(* see the Custom format combinator *)\ntype ('a, 'b, 'c) custom_arity =\n  | Custom_zero : ('a, string, 'a) custom_arity\n  | Custom_succ : ('a, 'b, 'c) custom_arity ->\n    ('a, 'x -> 'b, 'x -> 'c) custom_arity\n\n(***)\n\n(*        Relational format types\n\nIn the first format+gadts implementation, the type for %(..%) in the\nfmt GADT was as follows:\n\n| Format_subst :                                           (* %(...%) *)\n    pad_option * ('d1, 'q1, 'd2, 'q2) reader_nb_unifier *\n    ('x, 'b, 'c, 'd1, 'q1, 'u) fmtty *\n    ('u, 'b, 'c, 'q1, 'e1, 'f) fmt ->\n      (('x, 'b, 'c, 'd2, 'q2, 'u) format6 -> 'x, 'b, 'c, 'd1, 'e1, 'f) fmt\n\nNotice that the 'u parameter in 'f position in the format argument\n(('x, .., 'u) format6 -> ..) is equal to the 'u parameter in 'a\nposition in the format tail (('u, .., 'f) fmt). This means that the\ntype of the expected format parameter depends of where the %(...%)\nare in the format string:\n\n  # Printf.printf \"%(%)\"\n  - : (unit, out_channel, unit, '_a, '_a, unit)\n      CamlinternalFormatBasics.format6 -> unit\n  = <fun>\n  # Printf.printf \"%(%)%d\"\n  - : (int -> unit, out_channel, unit, '_a, '_a, int -> unit)\n      CamlinternalFormatBasics.format6 -> int -> unit\n  = <fun>\n\nOn the contrary, the legacy typer gives a clever type that does not\ndepend on the position of %(..%) in the format string. For example,\n%(%) will have the polymorphic type ('a, 'b, 'c, 'd, 'd, 'a): it can\nbe concatenated to any format type, and only enforces the constraint\nthat its 'a and 'f parameters are equal (no format arguments) and 'd\nand 'e are equal (no reader argument).\n\nThe weakening of this parameter type in the GADT version broke user\ncode (in fact it essentially made %(...%) unusable except at the last\nposition of a format). In particular, the following would not work\nanymore:\n\n  fun sep ->\n    Format.printf \"foo%(%)bar%(%)baz\" sep sep\n\nAs the type-checker would require two *incompatible* types for the %(%)\nin different positions.\n\nThe solution to regain a general type for %(..%) is to generalize this\ntechnique, not only on the 'd, 'e parameters, but on all six\nparameters of a format: we introduce a \"relational\" type\n  ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n   'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel\nwhose values are proofs that ('a1, .., 'f1) and ('a2, .., 'f2) morally\ncorrespond to the same format type: 'a1 is obtained from 'f1,'b1,'c1\nin the exact same way that 'a2 is obtained from 'f2,'b2,'c2, etc.\n\nFor example, the relation between two format types beginning with a Char\nparameter is as follows:\n\n| Char_ty :                                                 (* %c  *)\n    ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n     'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n    (char -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n     char -> 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel\n\nIn the general case, the term structure of fmtty_rel is (almost[1])\nisomorphic to the fmtty of the previous implementation: every\nconstructor is re-read with a binary, relational type, instead of the\nprevious unary typing. fmtty can then be re-defined as the diagonal of\nfmtty_rel:\n\n  type ('a, 'b, 'c, 'd, 'e, 'f) fmtty =\n       ('a, 'b, 'c, 'd, 'e, 'f,\n        'a, 'b, 'c, 'd, 'e, 'f) fmtty_rel\n\nOnce we have this fmtty_rel type in place, we can give the more\ngeneral type to %(...%):\n\n| Format_subst :                                           (* %(...%) *)\n    pad_option *\n    ('g, 'h, 'i, 'j, 'k, 'l,\n     'g2, 'b, 'c, 'j2, 'd, 'a) fmtty_rel *\n    ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n    (('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'g2, 'b, 'c, 'j2, 'e, 'f) fmt\n\nWe accept any format (('g, 'h, 'i, 'j, 'k, 'l) format6) (this is\ncompletely unrelated to the type of the current format), but also\nrequire a proof that this format is in relation to another format that\nis concatenable to the format tail. When executing a %(...%) format\n(in camlinternalFormat.ml:make_printf or scanf.ml:make_scanf), we\ntranstype the format along this relation using the 'recast' function\nto transpose between related format types.\n\n  val recast :\n     ('a1, 'b1, 'c1, 'd1, 'e1, 'f1) fmt\n  -> ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n      'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel\n  -> ('a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmt\n\nNOTE [1]: the typing of Format_subst_ty requires not one format type, but\ntwo, one to establish the link between the format argument and the\nfirst six parameters, and the other for the link between the format\nargumant and the last six parameters.\n\n| Format_subst_ty :                                         (* %(...%) *)\n    ('g, 'h, 'i, 'j, 'k, 'l,\n     'g1, 'b1, 'c1, 'j1, 'd1, 'a1) fmtty_rel *\n    ('g, 'h, 'i, 'j, 'k, 'l,\n     'g2, 'b2, 'c2, 'j2, 'd2, 'a2) fmtty_rel *\n    ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n     'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n    (('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'g1, 'b1, 'c1, 'j1, 'e1, 'f1,\n     ('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'g2, 'b2, 'c2, 'j2, 'e2, 'f2) fmtty_rel\n\nWhen we generate a format AST, we generate exactly the same witness\nfor both relations, and the witness-conversion functions in\ncamlinternalFormat do rely on this invariant. For example, the\nfunction that proves that the relation is transitive\n\n  val trans :\n     ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n      'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel\n  -> ('a2, 'b2, 'c2, 'd2, 'e2, 'f2,\n      'a3, 'b3, 'c3, 'd3, 'e3, 'f3) fmtty_rel\n  -> ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n      'a3, 'b3, 'c3, 'd3, 'e3, 'f3) fmtty_rel\n\ndoes assume that the two input have exactly the same term structure\n(and is only every used for argument witnesses of the\nFormat_subst_ty constructor).\n*)\n\n(* Type of a block used by the Format pretty-printer. *)\ntype block_type =\n  | Pp_hbox   (* Horizontal block no line breaking *)\n  | Pp_vbox   (* Vertical block each break leads to a new line *)\n  | Pp_hvbox  (* Horizontal-vertical block: same as vbox, except if this block\n                 is small enough to fit on a single line *)\n  | Pp_hovbox (* Horizontal or Vertical block: breaks lead to new line\n                 only when necessary to print the content of the block *)\n  | Pp_box    (* Horizontal or Indent block: breaks lead to new line\n                 only when necessary to print the content of the block, or\n                 when it leads to a new indentation of the current line *)\n  | Pp_fits   (* Internal usage: when a block fits on a single line *)\n\n(* Formatting element used by the Format pretty-printter. *)\ntype formatting_lit =\n  | Close_box                                           (* @]   *)\n  | Close_tag                                           (* @}   *)\n  | Break of string * int * int          (* @, | @  | @; | @;<> *)\n  | FFlush                                              (* @?   *)\n  | Force_newline                                       (* @\\n  *)\n  | Flush_newline                                       (* @.   *)\n  | Magic_size of string * int                          (* @<n> *)\n  | Escaped_at                                          (* @@   *)\n  | Escaped_percent                                     (* @%%  *)\n  | Scan_indic of char                                  (* @X   *)\n\n(* Formatting element used by the Format pretty-printter. *)\ntype ('a, 'b, 'c, 'd, 'e, 'f) formatting_gen =\n  | Open_tag : ('a, 'b, 'c, 'd, 'e, 'f) format6 ->      (* @{   *)\n    ('a, 'b, 'c, 'd, 'e, 'f) formatting_gen\n  | Open_box : ('a, 'b, 'c, 'd, 'e, 'f) format6 ->      (* @[   *)\n    ('a, 'b, 'c, 'd, 'e, 'f) formatting_gen\n\n(***)\n\n(* List of format type elements. *)\n(* In particular used to represent %(...%) and %{...%} contents. *)\nand ('a, 'b, 'c, 'd, 'e, 'f) fmtty =\n     ('a, 'b, 'c, 'd, 'e, 'f,\n      'a, 'b, 'c, 'd, 'e, 'f) fmtty_rel\nand ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n     'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel =\n  | Char_ty :                                                 (* %c  *)\n      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n      (char -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       char -> 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel\n  | String_ty :                                               (* %s  *)\n      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n      (string -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       string -> 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel\n  | Int_ty :                                                  (* %d  *)\n      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n      (int -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       int -> 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel\n  | Int32_ty :                                                (* %ld *)\n      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n      (int32 -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       int32 -> 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel\n  | Nativeint_ty :                                            (* %nd *)\n      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n      (nativeint -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       nativeint -> 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel\n  | Int64_ty :                                                (* %Ld *)\n      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n      (int64 -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       int64 -> 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel\n  | Float_ty :                                                (* %f  *)\n      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n      (float -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       float -> 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel\n  | Bool_ty :                                                 (* %B  *)\n      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n      (bool -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       bool -> 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel\n\n  | Format_arg_ty :                                           (* %{...%} *)\n      ('g, 'h, 'i, 'j, 'k, 'l) fmtty *\n      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n      (('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       ('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'a2, 'b2, 'c2, 'd2, 'e2, 'f2)\n           fmtty_rel\n  | Format_subst_ty :                                         (* %(...%) *)\n      ('g, 'h, 'i, 'j, 'k, 'l,\n       'g1, 'b1, 'c1, 'j1, 'd1, 'a1) fmtty_rel *\n      ('g, 'h, 'i, 'j, 'k, 'l,\n       'g2, 'b2, 'c2, 'j2, 'd2, 'a2) fmtty_rel *\n      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n      (('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'g1, 'b1, 'c1, 'j1, 'e1, 'f1,\n       ('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'g2, 'b2, 'c2, 'j2, 'e2, 'f2)\n           fmtty_rel\n\n  (* Printf and Format specific constructors. *)\n  | Alpha_ty :                                                (* %a  *)\n      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n      (('b1 -> 'x -> 'c1) -> 'x -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       ('b2 -> 'x -> 'c2) -> 'x -> 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel\n  | Theta_ty :                                                (* %t  *)\n      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n      (('b1 -> 'c1) -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       ('b2 -> 'c2) -> 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel\n  | Any_ty :                                    (* Used for custom formats *)\n      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n      ('x -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       'x -> 'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel\n\n  (* Scanf specific constructor. *)\n  | Reader_ty :                                               (* %r  *)\n      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n      ('x -> 'a1, 'b1, 'c1, ('b1 -> 'x) -> 'd1, 'e1, 'f1,\n       'x -> 'a2, 'b2, 'c2, ('b2 -> 'x) -> 'd2, 'e2, 'f2) fmtty_rel\n  | Ignored_reader_ty :                                       (* %_r  *)\n      ('a1, 'b1, 'c1, 'd1, 'e1, 'f1,\n       'a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmtty_rel ->\n      ('a1, 'b1, 'c1, ('b1 -> 'x) -> 'd1, 'e1, 'f1,\n       'a2, 'b2, 'c2, ('b2 -> 'x) -> 'd2, 'e2, 'f2) fmtty_rel\n\n  | End_of_fmtty :\n      ('f1, 'b1, 'c1, 'd1, 'd1, 'f1,\n       'f2, 'b2, 'c2, 'd2, 'd2, 'f2) fmtty_rel\n\n(***)\n\n(* List of format elements. *)\nand ('a, 'b, 'c, 'd, 'e, 'f) fmt =\n  | Char :                                                   (* %c *)\n      ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        (char -> 'a, 'b, 'c, 'd, 'e, 'f) fmt\n  | Caml_char :                                              (* %C *)\n      ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        (char -> 'a, 'b, 'c, 'd, 'e, 'f) fmt\n  | String :                                                 (* %s *)\n      ('x, string -> 'a) padding * ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        ('x, 'b, 'c, 'd, 'e, 'f) fmt\n  | Caml_string :                                            (* %S *)\n      ('x, string -> 'a) padding * ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        ('x, 'b, 'c, 'd, 'e, 'f) fmt\n  | Int :                                                    (* %[dixXuo] *)\n      int_conv * ('x, 'y) padding * ('y, int -> 'a) precision *\n      ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        ('x, 'b, 'c, 'd, 'e, 'f) fmt\n  | Int32 :                                                  (* %l[dixXuo] *)\n      int_conv * ('x, 'y) padding * ('y, int32 -> 'a) precision *\n      ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        ('x, 'b, 'c, 'd, 'e, 'f) fmt\n  | Nativeint :                                              (* %n[dixXuo] *)\n      int_conv * ('x, 'y) padding * ('y, nativeint -> 'a) precision *\n      ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        ('x, 'b, 'c, 'd, 'e, 'f) fmt\n  | Int64 :                                                  (* %L[dixXuo] *)\n      int_conv * ('x, 'y) padding * ('y, int64 -> 'a) precision *\n      ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        ('x, 'b, 'c, 'd, 'e, 'f) fmt\n  | Float :                                                  (* %[feEgGF] *)\n      float_conv * ('x, 'y) padding * ('y, float -> 'a) precision *\n      ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        ('x, 'b, 'c, 'd, 'e, 'f) fmt\n  | Bool :                                                   (* %[bB] *)\n      ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        (bool -> 'a, 'b, 'c, 'd, 'e, 'f) fmt\n  | Flush :                                                  (* %! *)\n      ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        ('a, 'b, 'c, 'd, 'e, 'f) fmt\n\n  | String_literal :                                         (* abc *)\n      string * ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        ('a, 'b, 'c, 'd, 'e, 'f) fmt\n  | Char_literal :                                           (* x *)\n      char * ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        ('a, 'b, 'c, 'd, 'e, 'f) fmt\n\n  | Format_arg :                                             (* %{...%} *)\n      pad_option * ('g, 'h, 'i, 'j, 'k, 'l) fmtty *\n      ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        (('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'a, 'b, 'c, 'd, 'e, 'f) fmt\n  | Format_subst :                                           (* %(...%) *)\n      pad_option *\n      ('g, 'h, 'i, 'j, 'k, 'l,\n       'g2, 'b, 'c, 'j2, 'd, 'a) fmtty_rel *\n      ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n      (('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'g2, 'b, 'c, 'j2, 'e, 'f) fmt\n\n  (* Printf and Format specific constructor. *)\n  | Alpha :                                                  (* %a *)\n      ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        (('b -> 'x -> 'c) -> 'x -> 'a, 'b, 'c, 'd, 'e, 'f) fmt\n  | Theta :                                                  (* %t *)\n      ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        (('b -> 'c) -> 'a, 'b, 'c, 'd, 'e, 'f) fmt\n\n  (* Format specific constructor: *)\n  | Formatting_lit :                                         (* @_ *)\n      formatting_lit * ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        ('a, 'b, 'c, 'd, 'e, 'f) fmt\n  | Formatting_gen :                                             (* @_ *)\n      ('a1, 'b, 'c, 'd1, 'e1, 'f1) formatting_gen *\n      ('f1, 'b, 'c, 'e1, 'e2, 'f2) fmt -> ('a1, 'b, 'c, 'd1, 'e2, 'f2) fmt\n\n  (* Scanf specific constructors: *)\n  | Reader :                                                 (* %r *)\n      ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        ('x -> 'a, 'b, 'c, ('b -> 'x) -> 'd, 'e, 'f) fmt\n  | Scan_char_set :                                          (* %[...] *)\n      pad_option * char_set * ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        (string -> 'a, 'b, 'c, 'd, 'e, 'f) fmt\n  | Scan_get_counter :                                       (* %[nlNL] *)\n      counter * ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n        (int -> 'a, 'b, 'c, 'd, 'e, 'f) fmt\n  | Scan_next_char :                                         (* %0c *)\n      ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n      (char -> 'a, 'b, 'c, 'd, 'e, 'f) fmt\n  | Ignored_param :                                          (* %_ *)\n      ('a, 'b, 'c, 'd, 'y, 'x) ignored * ('x, 'b, 'c, 'y, 'e, 'f) fmt ->\n        ('a, 'b, 'c, 'd, 'e, 'f) fmt\n\n  (* Custom printing format (PR#6452, GPR#140)\n\n     We include a type Custom of \"custom converters\", where an\n     arbitrary function can be used to convert one or more\n     arguments. There is no syntax for custom converters, it is only\n     inteded for custom processors that wish to rely on the\n     stdlib-defined format GADTs.\n\n     For instance a pre-processor could choose to interpret strings\n     prefixed with [\"!\"] as format strings where [%{{ ... }}] is\n     a special form to pass a to_string function, so that one could\n     write:\n\n     {[\n       type t = { x : int; y : int }\n\n       let string_of_t t = Printf.sprintf \"{ x = %d; y = %d }\" t.x t.y\n\n       Printf.printf !\"t = %{{string_of_t}}\" { x = 42; y = 42 }\n     ]}\n  *)\n  | Custom :\n      ('a, 'x, 'y) custom_arity * (unit -> 'x) * ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n      ('y, 'b, 'c, 'd, 'e, 'f) fmt\n\n  (* end of a format specification *)\n  | End_of_format :\n        ('f, 'b, 'c, 'e, 'e, 'f) fmt\n\n(***)\n\n(* Type for ignored parameters (see \"%_\"). *)\nand ('a, 'b, 'c, 'd, 'e, 'f) ignored =\n  | Ignored_char :                                           (* %_c *)\n      ('a, 'b, 'c, 'd, 'd, 'a) ignored\n  | Ignored_caml_char :                                      (* %_C *)\n      ('a, 'b, 'c, 'd, 'd, 'a) ignored\n  | Ignored_string :                                         (* %_s *)\n      pad_option -> ('a, 'b, 'c, 'd, 'd, 'a) ignored\n  | Ignored_caml_string :                                    (* %_S *)\n      pad_option -> ('a, 'b, 'c, 'd, 'd, 'a) ignored\n  | Ignored_int :                                            (* %_d *)\n      int_conv * pad_option -> ('a, 'b, 'c, 'd, 'd, 'a) ignored\n  | Ignored_int32 :                                          (* %_ld *)\n      int_conv * pad_option -> ('a, 'b, 'c, 'd, 'd, 'a) ignored\n  | Ignored_nativeint :                                      (* %_nd *)\n      int_conv * pad_option -> ('a, 'b, 'c, 'd, 'd, 'a) ignored\n  | Ignored_int64 :                                          (* %_Ld *)\n      int_conv * pad_option -> ('a, 'b, 'c, 'd, 'd, 'a) ignored\n  | Ignored_float :                                          (* %_f *)\n      pad_option * prec_option -> ('a, 'b, 'c, 'd, 'd, 'a) ignored\n  | Ignored_bool :                                           (* %_B *)\n      ('a, 'b, 'c, 'd, 'd, 'a) ignored\n  | Ignored_format_arg :                                     (* %_{...%} *)\n      pad_option * ('g, 'h, 'i, 'j, 'k, 'l) fmtty ->\n        ('a, 'b, 'c, 'd, 'd, 'a) ignored\n  | Ignored_format_subst :                                   (* %_(...%) *)\n      pad_option * ('a, 'b, 'c, 'd, 'e, 'f) fmtty ->\n        ('a, 'b, 'c, 'd, 'e, 'f) ignored\n  | Ignored_reader :                                         (* %_r *)\n      ('a, 'b, 'c, ('b -> 'x) -> 'd, 'd, 'a) ignored\n  | Ignored_scan_char_set :                                  (* %_[...] *)\n      pad_option * char_set -> ('a, 'b, 'c, 'd, 'd, 'a) ignored\n  | Ignored_scan_get_counter :                               (* %_[nlNL] *)\n      counter -> ('a, 'b, 'c, 'd, 'd, 'a) ignored\n  | Ignored_scan_next_char :                                 (* %_0c *)\n      ('a, 'b, 'c, 'd, 'd, 'a) ignored\n\nand ('a, 'b, 'c, 'd, 'e, 'f) format6 =\n  Format of ('a, 'b, 'c, 'd, 'e, 'f) fmt * string\n\nlet rec erase_rel : type a b c d e f g h i j k l .\n  (a, b, c, d, e, f,\n   g, h, i, j, k, l) fmtty_rel -> (a, b, c, d, e, f) fmtty\n= function\n  | Char_ty rest ->\n    Char_ty (erase_rel rest)\n  | String_ty rest ->\n    String_ty (erase_rel rest)\n  | Int_ty rest ->\n    Int_ty (erase_rel rest)\n  | Int32_ty rest ->\n    Int32_ty (erase_rel rest)\n  | Int64_ty rest ->\n    Int64_ty (erase_rel rest)\n  | Nativeint_ty rest ->\n    Nativeint_ty (erase_rel rest)\n  | Float_ty rest ->\n    Float_ty (erase_rel rest)\n  | Bool_ty rest ->\n    Bool_ty (erase_rel rest)\n  | Format_arg_ty (ty, rest) ->\n    Format_arg_ty (ty, erase_rel rest)\n  | Format_subst_ty (ty1, _ty2, rest) ->\n    Format_subst_ty (ty1, ty1, erase_rel rest)\n  | Alpha_ty rest ->\n    Alpha_ty (erase_rel rest)\n  | Theta_ty rest ->\n    Theta_ty (erase_rel rest)\n  | Any_ty rest ->\n    Any_ty (erase_rel rest)\n  | Reader_ty rest ->\n    Reader_ty (erase_rel rest)\n  | Ignored_reader_ty rest ->\n    Ignored_reader_ty (erase_rel rest)\n  | End_of_fmtty -> End_of_fmtty\n\n(******************************************************************************)\n                         (* Format type concatenation *)\n\n(* Concatenate two format types. *)\n(* Used by:\n   * reader_nb_unifier_of_fmtty to count readers in an fmtty,\n   * Scanf.take_fmtty_format_readers to extract readers inside %(...%),\n   * CamlinternalFormat.fmtty_of_ignored_format to extract format type. *)\n\n(*\nlet rec concat_fmtty : type a b c d e f g h .\n    (a, b, c, d, e, f) fmtty ->\n    (f, b, c, e, g, h) fmtty ->\n    (a, b, c, d, g, h) fmtty =\n*)\nlet rec concat_fmtty :\n  type a1 b1 c1 d1 e1 f1\n       a2 b2 c2 d2 e2 f2\n       g1 j1 g2 j2\n  .\n    (g1, b1, c1, j1, d1, a1,\n     g2, b2, c2, j2, d2, a2) fmtty_rel ->\n    (a1, b1, c1, d1, e1, f1,\n     a2, b2, c2, d2, e2, f2) fmtty_rel ->\n    (g1, b1, c1, j1, e1, f1,\n     g2, b2, c2, j2, e2, f2) fmtty_rel =\nfun fmtty1 fmtty2 -> match fmtty1 with\n  | Char_ty rest ->\n    Char_ty (concat_fmtty rest fmtty2)\n  | String_ty rest ->\n    String_ty (concat_fmtty rest fmtty2)\n  | Int_ty rest ->\n    Int_ty (concat_fmtty rest fmtty2)\n  | Int32_ty rest ->\n    Int32_ty (concat_fmtty rest fmtty2)\n  | Nativeint_ty rest ->\n    Nativeint_ty (concat_fmtty rest fmtty2)\n  | Int64_ty rest ->\n    Int64_ty (concat_fmtty rest fmtty2)\n  | Float_ty rest ->\n    Float_ty (concat_fmtty rest fmtty2)\n  | Bool_ty rest ->\n    Bool_ty (concat_fmtty rest fmtty2)\n  | Alpha_ty rest ->\n    Alpha_ty (concat_fmtty rest fmtty2)\n  | Theta_ty rest ->\n    Theta_ty (concat_fmtty rest fmtty2)\n  | Any_ty rest ->\n    Any_ty (concat_fmtty rest fmtty2)\n  | Reader_ty rest ->\n    Reader_ty (concat_fmtty rest fmtty2)\n  | Ignored_reader_ty rest ->\n    Ignored_reader_ty (concat_fmtty rest fmtty2)\n  | Format_arg_ty (ty, rest) ->\n    Format_arg_ty (ty, concat_fmtty rest fmtty2)\n  | Format_subst_ty (ty1, ty2, rest) ->\n    Format_subst_ty (ty1, ty2, concat_fmtty rest fmtty2)\n  | End_of_fmtty -> fmtty2\n\n(******************************************************************************)\n                           (* Format concatenation *)\n\n(* Concatenate two formats. *)\nlet rec concat_fmt : type a b c d e f g h .\n    (a, b, c, d, e, f) fmt ->\n    (f, b, c, e, g, h) fmt ->\n    (a, b, c, d, g, h) fmt =\nfun fmt1 fmt2 -> match fmt1 with\n  | String (pad, rest) ->\n    String (pad, concat_fmt rest fmt2)\n  | Caml_string (pad, rest) ->\n    Caml_string (pad, concat_fmt rest fmt2)\n\n  | Int (iconv, pad, prec, rest) ->\n    Int (iconv, pad, prec, concat_fmt rest fmt2)\n  | Int32 (iconv, pad, prec, rest) ->\n    Int32 (iconv, pad, prec, concat_fmt rest fmt2)\n  | Nativeint (iconv, pad, prec, rest) ->\n    Nativeint (iconv, pad, prec, concat_fmt rest fmt2)\n  | Int64 (iconv, pad, prec, rest) ->\n    Int64 (iconv, pad, prec, concat_fmt rest fmt2)\n  | Float (fconv, pad, prec, rest) ->\n    Float (fconv, pad, prec, concat_fmt rest fmt2)\n\n  | Char (rest) ->\n    Char (concat_fmt rest fmt2)\n  | Caml_char rest ->\n    Caml_char (concat_fmt rest fmt2)\n  | Bool rest ->\n    Bool (concat_fmt rest fmt2)\n  | Alpha rest ->\n    Alpha (concat_fmt rest fmt2)\n  | Theta rest ->\n    Theta (concat_fmt rest fmt2)\n  | Custom (arity, f, rest) ->\n    Custom (arity, f, concat_fmt rest fmt2)\n  | Reader rest ->\n    Reader (concat_fmt rest fmt2)\n  | Flush rest ->\n    Flush (concat_fmt rest fmt2)\n\n  | String_literal (str, rest) ->\n    String_literal (str, concat_fmt rest fmt2)\n  | Char_literal (chr, rest) ->\n    Char_literal   (chr, concat_fmt rest fmt2)\n\n  | Format_arg (pad, fmtty, rest) ->\n    Format_arg   (pad, fmtty, concat_fmt rest fmt2)\n  | Format_subst (pad, fmtty, rest) ->\n    Format_subst (pad, fmtty, concat_fmt rest fmt2)\n\n  | Scan_char_set (width_opt, char_set, rest) ->\n    Scan_char_set (width_opt, char_set, concat_fmt rest fmt2)\n  | Scan_get_counter (counter, rest) ->\n    Scan_get_counter (counter, concat_fmt rest fmt2)\n  | Scan_next_char (rest) ->\n    Scan_next_char (concat_fmt rest fmt2)\n  | Ignored_param (ign, rest) ->\n    Ignored_param (ign, concat_fmt rest fmt2)\n\n  | Formatting_lit (fmting_lit, rest) ->\n    Formatting_lit (fmting_lit, concat_fmt rest fmt2)\n  | Formatting_gen (fmting_gen, rest) ->\n    Formatting_gen (fmting_gen, concat_fmt rest fmt2)\n\n  | End_of_format ->\n    fmt2\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Xavier Leroy, projet Cristal, INRIA Rocquencourt           *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* type 'a option = None | Some of 'a *)\n\n(* Exceptions *)\n\nexternal register_named_value : string -> 'a -> unit\n                              = \"caml_register_named_value\"\n\nlet () =\n  (* for asmrun/fail.c *)\n  register_named_value \"Pervasives.array_bound_error\"\n    (Invalid_argument \"index out of bounds\")\n\n\nexternal raise : exn -> 'a = \"%raise\"\nexternal raise_notrace : exn -> 'a = \"%raise_notrace\"\n\nlet failwith s = raise(Failure s)\nlet invalid_arg s = raise(Invalid_argument s)\n\nexception Exit\n\n(* Composition operators *)\n\nexternal ( |> ) : 'a -> ('a -> 'b) -> 'b = \"%revapply\"\nexternal ( @@ ) : ('a -> 'b) -> 'a -> 'b = \"%apply\"\n\n(* Debugging *)\n\nexternal __LOC__ : string = \"%loc_LOC\"\nexternal __FILE__ : string = \"%loc_FILE\"\nexternal __LINE__ : int = \"%loc_LINE\"\nexternal __MODULE__ : string = \"%loc_MODULE\"\nexternal __POS__ : string * int * int * int = \"%loc_POS\"\n\nexternal __LOC_OF__ : 'a -> string * 'a = \"%loc_LOC\"\nexternal __LINE_OF__ : 'a -> int * 'a = \"%loc_LINE\"\nexternal __POS_OF__ : 'a -> (string * int * int * int) * 'a = \"%loc_POS\"\n\n(* Comparisons *)\n\nexternal ( = ) : 'a -> 'a -> bool = \"%equal\"\nexternal ( <> ) : 'a -> 'a -> bool = \"%notequal\"\nexternal ( < ) : 'a -> 'a -> bool = \"%lessthan\"\nexternal ( > ) : 'a -> 'a -> bool = \"%greaterthan\"\nexternal ( <= ) : 'a -> 'a -> bool = \"%lessequal\"\nexternal ( >= ) : 'a -> 'a -> bool = \"%greaterequal\"\nexternal compare : 'a -> 'a -> int = \"%compare\"\n\nlet min x y = if x <= y then x else y\nlet max x y = if x >= y then x else y\n\nexternal ( == ) : 'a -> 'a -> bool = \"%eq\"\nexternal ( != ) : 'a -> 'a -> bool = \"%noteq\"\n\n(* Boolean operations *)\n\nexternal not : bool -> bool = \"%boolnot\"\nexternal ( & ) : bool -> bool -> bool = \"%sequand\"\nexternal ( && ) : bool -> bool -> bool = \"%sequand\"\nexternal ( or ) : bool -> bool -> bool = \"%sequor\"\nexternal ( || ) : bool -> bool -> bool = \"%sequor\"\n\n(* Integer operations *)\n\nexternal ( ~- ) : int -> int = \"%negint\"\nexternal ( ~+ ) : int -> int = \"%identity\"\nexternal succ : int -> int = \"%succint\"\nexternal pred : int -> int = \"%predint\"\nexternal ( + ) : int -> int -> int = \"%addint\"\nexternal ( - ) : int -> int -> int = \"%subint\"\nexternal ( * ) : int -> int -> int = \"%mulint\"\nexternal ( / ) : int -> int -> int = \"%divint\"\nexternal ( mod ) : int -> int -> int = \"%modint\"\n\nlet abs x = if x >= 0 then x else -x\n\nexternal ( land ) : int -> int -> int = \"%andint\"\nexternal ( lor ) : int -> int -> int = \"%orint\"\nexternal ( lxor ) : int -> int -> int = \"%xorint\"\n\nlet lnot x = x lxor (-1)\n\nexternal ( lsl ) : int -> int -> int = \"%lslint\"\nexternal ( lsr ) : int -> int -> int = \"%lsrint\"\nexternal ( asr ) : int -> int -> int = \"%asrint\"\n\nlet max_int = (-1) lsr 1\nlet min_int = max_int + 1\n\n(* Floating-point operations *)\n\nexternal ( ~-. ) : float -> float = \"%negfloat\"\nexternal ( ~+. ) : float -> float = \"%identity\"\nexternal ( +. ) : float -> float -> float = \"%addfloat\"\nexternal ( -. ) : float -> float -> float = \"%subfloat\"\nexternal ( *. ) : float -> float -> float = \"%mulfloat\"\nexternal ( /. ) : float -> float -> float = \"%divfloat\"\nexternal ( ** ) : float -> float -> float = \"caml_power_float\" \"pow\"\n  [@@unboxed] [@@noalloc]\nexternal exp : float -> float = \"caml_exp_float\" \"exp\" [@@unboxed] [@@noalloc]\nexternal expm1 : float -> float = \"caml_expm1_float\" \"caml_expm1\"\n  [@@unboxed] [@@noalloc]\nexternal acos : float -> float = \"caml_acos_float\" \"acos\"\n  [@@unboxed] [@@noalloc]\nexternal asin : float -> float = \"caml_asin_float\" \"asin\"\n  [@@unboxed] [@@noalloc]\nexternal atan : float -> float = \"caml_atan_float\" \"atan\"\n  [@@unboxed] [@@noalloc]\nexternal atan2 : float -> float -> float = \"caml_atan2_float\" \"atan2\"\n  [@@unboxed] [@@noalloc]\nexternal hypot : float -> float -> float\n               = \"caml_hypot_float\" \"caml_hypot\" [@@unboxed] [@@noalloc]\nexternal cos : float -> float = \"caml_cos_float\" \"cos\" [@@unboxed] [@@noalloc]\nexternal cosh : float -> float = \"caml_cosh_float\" \"cosh\"\n  [@@unboxed] [@@noalloc]\nexternal log : float -> float = \"caml_log_float\" \"log\" [@@unboxed] [@@noalloc]\nexternal log10 : float -> float = \"caml_log10_float\" \"log10\"\n  [@@unboxed] [@@noalloc]\nexternal log1p : float -> float = \"caml_log1p_float\" \"caml_log1p\"\n  [@@unboxed] [@@noalloc]\nexternal sin : float -> float = \"caml_sin_float\" \"sin\" [@@unboxed] [@@noalloc]\nexternal sinh : float -> float = \"caml_sinh_float\" \"sinh\"\n  [@@unboxed] [@@noalloc]\nexternal sqrt : float -> float = \"caml_sqrt_float\" \"sqrt\"\n  [@@unboxed] [@@noalloc]\nexternal tan : float -> float = \"caml_tan_float\" \"tan\" [@@unboxed] [@@noalloc]\nexternal tanh : float -> float = \"caml_tanh_float\" \"tanh\"\n  [@@unboxed] [@@noalloc]\nexternal ceil : float -> float = \"caml_ceil_float\" \"ceil\"\n  [@@unboxed] [@@noalloc]\nexternal floor : float -> float = \"caml_floor_float\" \"floor\"\n  [@@unboxed] [@@noalloc]\nexternal abs_float : float -> float = \"%absfloat\"\nexternal copysign : float -> float -> float\n                  = \"caml_copysign_float\" \"caml_copysign\"\n                  [@@unboxed] [@@noalloc]\nexternal mod_float : float -> float -> float = \"caml_fmod_float\" \"fmod\"\n  [@@unboxed] [@@noalloc]\nexternal frexp : float -> float * int = \"caml_frexp_float\"\nexternal ldexp : (float [@unboxed]) -> (int [@untagged]) -> (float [@unboxed]) =\n  \"caml_ldexp_float\" \"caml_ldexp_float_unboxed\" [@@noalloc]\nexternal modf : float -> float * float = \"caml_modf_float\"\nexternal float : int -> float = \"%floatofint\"\nexternal float_of_int : int -> float = \"%floatofint\"\nexternal truncate : float -> int = \"%intoffloat\"\nexternal int_of_float : float -> int = \"%intoffloat\"\nexternal float_of_bits : int64 -> float = \"caml_int64_float_of_bits\"\nlet infinity =\n  float_of_bits 0x7F_F0_00_00_00_00_00_00L\nlet neg_infinity =\n  float_of_bits 0xFF_F0_00_00_00_00_00_00L\nlet nan =\n  float_of_bits 0x7F_F0_00_00_00_00_00_01L\nlet max_float =\n  float_of_bits 0x7F_EF_FF_FF_FF_FF_FF_FFL\nlet min_float =\n  float_of_bits 0x00_10_00_00_00_00_00_00L\nlet epsilon_float =\n  float_of_bits 0x3C_B0_00_00_00_00_00_00L\n\ntype fpclass =\n    FP_normal\n  | FP_subnormal\n  | FP_zero\n  | FP_infinite\n  | FP_nan\nexternal classify_float : (float [@unboxed]) -> fpclass =\n  \"caml_classify_float\" \"caml_classify_float_unboxed\" [@@noalloc]\n\n(* String and byte sequence operations -- more in modules String and Bytes *)\n\nexternal string_length : string -> int = \"%string_length\"\nexternal bytes_length : bytes -> int = \"%string_length\"\nexternal bytes_create : int -> bytes = \"caml_create_bytes\"\nexternal string_blit : string -> int -> bytes -> int -> int -> unit\n                     = \"caml_blit_string\" [@@noalloc]\nexternal bytes_blit : bytes -> int -> bytes -> int -> int -> unit\n                        = \"caml_blit_bytes\" [@@noalloc]\nexternal bytes_unsafe_to_string : bytes -> string = \"%bytes_to_string\"\n\nlet ( ^ ) s1 s2 =\n  let l1 = string_length s1 and l2 = string_length s2 in\n  let s = bytes_create (l1 + l2) in\n  string_blit s1 0 s 0 l1;\n  string_blit s2 0 s l1 l2;\n  bytes_unsafe_to_string s\n\n(* Character operations -- more in module Char *)\n\nexternal int_of_char : char -> int = \"%identity\"\nexternal unsafe_char_of_int : int -> char = \"%identity\"\nlet char_of_int n =\n  if n < 0 || n > 255 then invalid_arg \"char_of_int\" else unsafe_char_of_int n\n\n(* Unit operations *)\n\nexternal ignore : 'a -> unit = \"%ignore\"\n\n(* Pair operations *)\n\nexternal fst : 'a * 'b -> 'a = \"%field0\"\nexternal snd : 'a * 'b -> 'b = \"%field1\"\n\n(* References *)\n\ntype 'a ref = { mutable contents : 'a }\nexternal ref : 'a -> 'a ref = \"%makemutable\"\nexternal ( ! ) : 'a ref -> 'a = \"%field0\"\nexternal ( := ) : 'a ref -> 'a -> unit = \"%setfield0\"\nexternal incr : int ref -> unit = \"%incr\"\nexternal decr : int ref -> unit = \"%decr\"\n\n(* Result type *)\n\ntype ('a,'b) result = Ok of 'a | Error of 'b\n\n(* String conversion functions *)\n\nexternal format_int : string -> int -> string = \"caml_format_int\"\nexternal format_float : string -> float -> string = \"caml_format_float\"\n\nlet string_of_bool b =\n  if b then \"true\" else \"false\"\nlet bool_of_string = function\n  | \"true\" -> true\n  | \"false\" -> false\n  | _ -> invalid_arg \"bool_of_string\"\n\nlet string_of_int n =\n  format_int \"%d\" n\n\nexternal int_of_string : string -> int = \"caml_int_of_string\"\nexternal string_get : string -> int -> char = \"%string_safe_get\"\n\nlet valid_float_lexem s =\n  let l = string_length s in\n  let rec loop i =\n    if i >= l then s ^ \".\" else\n    match string_get s i with\n    | '0' .. '9' | '-' -> loop (i + 1)\n    | _ -> s\n  in\n  loop 0\n\n\nlet string_of_float f = valid_float_lexem (format_float \"%.12g\" f)\n\nexternal float_of_string : string -> float = \"caml_float_of_string\"\n\n(* List operations -- more in module List *)\n\nlet rec ( @ ) l1 l2 =\n  match l1 with\n    [] -> l2\n  | hd :: tl -> hd :: (tl @ l2)\n\n(* I/O operations *)\n\ntype in_channel\ntype out_channel\n\nexternal open_descriptor_out : int -> out_channel\n                             = \"caml_ml_open_descriptor_out\"\nexternal open_descriptor_in : int -> in_channel = \"caml_ml_open_descriptor_in\"\n\nlet stdin = open_descriptor_in 0\nlet stdout = open_descriptor_out 1\nlet stderr = open_descriptor_out 2\n\n(* General output functions *)\n\ntype open_flag =\n    Open_rdonly | Open_wronly | Open_append\n  | Open_creat | Open_trunc | Open_excl\n  | Open_binary | Open_text | Open_nonblock\n\nexternal open_desc : string -> open_flag list -> int -> int = \"caml_sys_open\"\n\nexternal set_out_channel_name: out_channel -> string -> unit =\n  \"caml_ml_set_channel_name\"\n\nlet open_out_gen mode perm name =\n  let c = open_descriptor_out(open_desc name mode perm) in\n  set_out_channel_name c name;\n  c\n\nlet open_out name =\n  open_out_gen [Open_wronly; Open_creat; Open_trunc; Open_text] 0o666 name\n\nlet open_out_bin name =\n  open_out_gen [Open_wronly; Open_creat; Open_trunc; Open_binary] 0o666 name\n\nexternal flush : out_channel -> unit = \"caml_ml_flush\"\n\nexternal out_channels_list : unit -> out_channel list\n                           = \"caml_ml_out_channels_list\"\n\nlet flush_all () =\n  let rec iter = function\n      [] -> ()\n    | a :: l -> (try flush a with _ -> ()); iter l\n  in iter (out_channels_list ())\n\nexternal unsafe_output : out_channel -> bytes -> int -> int -> unit\n                       = \"caml_ml_output_bytes\"\nexternal unsafe_output_string : out_channel -> string -> int -> int -> unit\n                              = \"caml_ml_output\"\n\nexternal output_char : out_channel -> char -> unit = \"caml_ml_output_char\"\n\nlet output_bytes oc s =\n  unsafe_output oc s 0 (bytes_length s)\n\nlet output_string oc s =\n  unsafe_output_string oc s 0 (string_length s)\n\nlet output oc s ofs len =\n  if ofs < 0 || len < 0 || ofs > bytes_length s - len\n  then invalid_arg \"output\"\n  else unsafe_output oc s ofs len\n\nlet output_substring oc s ofs len =\n  if ofs < 0 || len < 0 || ofs > string_length s - len\n  then invalid_arg \"output_substring\"\n  else unsafe_output_string oc s ofs len\n\nexternal output_byte : out_channel -> int -> unit = \"caml_ml_output_char\"\nexternal output_binary_int : out_channel -> int -> unit = \"caml_ml_output_int\"\n\nexternal marshal_to_channel : out_channel -> 'a -> unit list -> unit\n     = \"caml_output_value\"\nlet output_value chan v = marshal_to_channel chan v []\n\nexternal seek_out : out_channel -> int -> unit = \"caml_ml_seek_out\"\nexternal pos_out : out_channel -> int = \"caml_ml_pos_out\"\nexternal out_channel_length : out_channel -> int = \"caml_ml_channel_size\"\nexternal close_out_channel : out_channel -> unit = \"caml_ml_close_channel\"\nlet close_out oc = flush oc; close_out_channel oc\nlet close_out_noerr oc =\n  (try flush oc with _ -> ());\n  (try close_out_channel oc with _ -> ())\nexternal set_binary_mode_out : out_channel -> bool -> unit\n                             = \"caml_ml_set_binary_mode\"\n\n(* General input functions *)\n\nexternal set_in_channel_name: in_channel -> string -> unit =\n  \"caml_ml_set_channel_name\"\n\nlet open_in_gen mode perm name =\n  let c = open_descriptor_in(open_desc name mode perm) in\n  set_in_channel_name c name;\n  c\n\nlet open_in name =\n  open_in_gen [Open_rdonly; Open_text] 0 name\n\nlet open_in_bin name =\n  open_in_gen [Open_rdonly; Open_binary] 0 name\n\nexternal input_char : in_channel -> char = \"caml_ml_input_char\"\n\nexternal unsafe_input : in_channel -> bytes -> int -> int -> int\n                      = \"caml_ml_input\"\n\nlet input ic s ofs len =\n  if ofs < 0 || len < 0 || ofs > bytes_length s - len\n  then invalid_arg \"input\"\n  else unsafe_input ic s ofs len\n\nlet rec unsafe_really_input ic s ofs len =\n  if len <= 0 then () else begin\n    let r = unsafe_input ic s ofs len in\n    if r = 0\n    then raise End_of_file\n    else unsafe_really_input ic s (ofs + r) (len - r)\n  end\n\nlet really_input ic s ofs len =\n  if ofs < 0 || len < 0 || ofs > bytes_length s - len\n  then invalid_arg \"really_input\"\n  else unsafe_really_input ic s ofs len\n\nlet really_input_string ic len =\n  let s = bytes_create len in\n  really_input ic s 0 len;\n  bytes_unsafe_to_string s\n\nexternal input_scan_line : in_channel -> int = \"caml_ml_input_scan_line\"\n\nlet input_line chan =\n  let rec build_result buf pos = function\n    [] -> buf\n  | hd :: tl ->\n      let len = bytes_length hd in\n      bytes_blit hd 0 buf (pos - len) len;\n      build_result buf (pos - len) tl in\n  let rec scan accu len =\n    let n = input_scan_line chan in\n    if n = 0 then begin                   (* n = 0: we are at EOF *)\n      match accu with\n        [] -> raise End_of_file\n      | _  -> build_result (bytes_create len) len accu\n    end else if n > 0 then begin          (* n > 0: newline found in buffer *)\n      let res = bytes_create (n - 1) in\n      ignore (unsafe_input chan res 0 (n - 1));\n      ignore (input_char chan);           (* skip the newline *)\n      match accu with\n        [] -> res\n      |  _ -> let len = len + n - 1 in\n              build_result (bytes_create len) len (res :: accu)\n    end else begin                        (* n < 0: newline not found *)\n      let beg = bytes_create (-n) in\n      ignore(unsafe_input chan beg 0 (-n));\n      scan (beg :: accu) (len - n)\n    end\n  in bytes_unsafe_to_string (scan [] 0)\n\nexternal input_byte : in_channel -> int = \"caml_ml_input_char\"\nexternal input_binary_int : in_channel -> int = \"caml_ml_input_int\"\nexternal input_value : in_channel -> 'a = \"caml_input_value\"\nexternal seek_in : in_channel -> int -> unit = \"caml_ml_seek_in\"\nexternal pos_in : in_channel -> int = \"caml_ml_pos_in\"\nexternal in_channel_length : in_channel -> int = \"caml_ml_channel_size\"\nexternal close_in : in_channel -> unit = \"caml_ml_close_channel\"\nlet close_in_noerr ic = (try close_in ic with _ -> ())\nexternal set_binary_mode_in : in_channel -> bool -> unit\n                            = \"caml_ml_set_binary_mode\"\n\n(* Output functions on standard output *)\n\nlet print_char c = output_char stdout c\nlet print_string s = output_string stdout s\nlet print_bytes s = output_bytes stdout s\nlet print_int i = output_string stdout (string_of_int i)\nlet print_float f = output_string stdout (string_of_float f)\nlet print_endline s =\n  output_string stdout s; output_char stdout '\\n'; flush stdout\nlet print_newline () = output_char stdout '\\n'; flush stdout\n\n(* Output functions on standard error *)\n\nlet prerr_char c = output_char stderr c\nlet prerr_string s = output_string stderr s\nlet prerr_bytes s = output_bytes stderr s\nlet prerr_int i = output_string stderr (string_of_int i)\nlet prerr_float f = output_string stderr (string_of_float f)\nlet prerr_endline s =\n  output_string stderr s; output_char stderr '\\n'; flush stderr\nlet prerr_newline () = output_char stderr '\\n'; flush stderr\n\n(* Input functions on standard input *)\n\nlet read_line () = flush stdout; input_line stdin\nlet read_int () = int_of_string(read_line())\nlet read_float () = float_of_string(read_line())\n\n(* Operations on large files *)\n\nmodule LargeFile =\n  struct\n    external seek_out : out_channel -> int64 -> unit = \"caml_ml_seek_out_64\"\n    external pos_out : out_channel -> int64 = \"caml_ml_pos_out_64\"\n    external out_channel_length : out_channel -> int64\n                                = \"caml_ml_channel_size_64\"\n    external seek_in : in_channel -> int64 -> unit = \"caml_ml_seek_in_64\"\n    external pos_in : in_channel -> int64 = \"caml_ml_pos_in_64\"\n    external in_channel_length : in_channel -> int64 = \"caml_ml_channel_size_64\"\n  end\n\n(* Formats *)\n\ntype ('a, 'b, 'c, 'd, 'e, 'f) format6\n   = ('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.format6\n   = Format of ('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.fmt\n               * string\n\ntype ('a, 'b, 'c, 'd) format4 = ('a, 'b, 'c, 'c, 'c, 'd) format6\n\ntype ('a, 'b, 'c) format = ('a, 'b, 'c, 'c) format4\n\nlet string_of_format (Format (_fmt, str)) = str\n\nexternal format_of_string :\n ('a, 'b, 'c, 'd, 'e, 'f) format6 ->\n ('a, 'b, 'c, 'd, 'e, 'f) format6 = \"%identity\"\n\nlet ( ^^ ) (Format (fmt1, str1)) (Format (fmt2, str2)) =\n  Format (CamlinternalFormatBasics.concat_fmt fmt1 fmt2,\n          str1 ^ \"%,\" ^ str2)\n\n(* Miscellaneous *)\n\nexternal sys_exit : int -> 'a = \"caml_sys_exit\"\n\nlet exit_function = ref flush_all\n\nlet at_exit f =\n  let g = !exit_function in\n  exit_function := (fun () -> f(); g())\n\nlet do_at_exit () = (!exit_function) ()\n\nlet exit retcode =\n  do_at_exit ();\n  sys_exit retcode\n\nlet _ = register_named_value \"Pervasives.do_at_exit\" do_at_exit\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Xavier Leroy, projet Cristal, INRIA Rocquencourt           *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\nopen Printf\n\nlet printers = ref []\n\nlet locfmt = format_of_string \"File \\\"%s\\\", line %d, characters %d-%d: %s\"\n\nlet field x i =\n  let f = Obj.field x i in\n  if not (Obj.is_block f) then\n    sprintf \"%d\" (Obj.magic f : int)           (* can also be a char *)\n  else if Obj.tag f = Obj.string_tag then\n    sprintf \"%S\" (Obj.magic f : string)\n  else if Obj.tag f = Obj.double_tag then\n    string_of_float (Obj.magic f : float)\n  else\n    \"_\"\n\nlet rec other_fields x i =\n  if i >= Obj.size x then \"\"\n  else sprintf \", %s%s\" (field x i) (other_fields x (i+1))\n\nlet fields x =\n  match Obj.size x with\n  | 0 -> \"\"\n  | 1 -> \"\"\n  | 2 -> sprintf \"(%s)\" (field x 1)\n  | _ -> sprintf \"(%s%s)\" (field x 1) (other_fields x 2)\n\nlet to_string x =\n  let rec conv = function\n    | hd :: tl ->\n        (match try hd x with _ -> None with\n        | Some s -> s\n        | None -> conv tl)\n    | [] ->\n        match x with\n        | Out_of_memory -> \"Out of memory\"\n        | Stack_overflow -> \"Stack overflow\"\n        | Match_failure(file, line, char) ->\n            sprintf locfmt file line char (char+5) \"Pattern matching failed\"\n        | Assert_failure(file, line, char) ->\n            sprintf locfmt file line char (char+6) \"Assertion failed\"\n        | Undefined_recursive_module(file, line, char) ->\n            sprintf locfmt file line char (char+6) \"Undefined recursive module\"\n        | _ ->\n            let x = Obj.repr x in\n            if Obj.tag x <> 0 then\n              (Obj.magic (Obj.field x 0) : string)\n            else\n              let constructor =\n                (Obj.magic (Obj.field (Obj.field x 0) 0) : string) in\n              constructor ^ (fields x) in\n  conv !printers\n\nlet print fct arg =\n  try\n    fct arg\n  with x ->\n    eprintf \"Uncaught exception: %s\\n\" (to_string x);\n    flush stderr;\n    raise x\n\nlet catch fct arg =\n  try\n    fct arg\n  with x ->\n    flush stdout;\n    eprintf \"Uncaught exception: %s\\n\" (to_string x);\n    exit 2\n\ntype raw_backtrace_slot\ntype raw_backtrace\n\nexternal get_raw_backtrace:\n  unit -> raw_backtrace = \"caml_get_exception_raw_backtrace\"\n\ntype backtrace_slot =\n  | Known_location of {\n      is_raise    : bool;\n      filename    : string;\n      line_number : int;\n      start_char  : int;\n      end_char    : int;\n      is_inline   : bool;\n    }\n  | Unknown_location of {\n      is_raise : bool\n    }\n\n(* to avoid warning *)\nlet _ = [Known_location { is_raise = false; filename = \"\";\n                          line_number = 0; start_char = 0; end_char = 0;\n                          is_inline = false };\n         Unknown_location { is_raise = false }]\n\nexternal convert_raw_backtrace_slot:\n  raw_backtrace_slot -> backtrace_slot = \"caml_convert_raw_backtrace_slot\"\n\nexternal convert_raw_backtrace:\n  raw_backtrace -> backtrace_slot array = \"caml_convert_raw_backtrace\"\n\nlet convert_raw_backtrace bt =\n  try Some (convert_raw_backtrace bt)\n  with Failure _ -> None\n\nlet format_backtrace_slot pos slot =\n  let info is_raise =\n    if is_raise then\n      if pos = 0 then \"Raised at\" else \"Re-raised at\"\n    else\n      if pos = 0 then \"Raised by primitive operation at\" else \"Called from\"\n  in\n  match slot with\n  | Unknown_location l ->\n      if l.is_raise then\n        (* compiler-inserted re-raise, skipped *) None\n      else\n        Some (sprintf \"%s unknown location\" (info false))\n  | Known_location l ->\n      Some (sprintf \"%s file \\\"%s\\\"%s, line %d, characters %d-%d\"\n              (info l.is_raise) l.filename\n              (if l.is_inline then \" (inlined)\" else \"\")\n              l.line_number l.start_char l.end_char)\n\nlet print_exception_backtrace outchan backtrace =\n  match backtrace with\n  | None ->\n      fprintf outchan\n        \"(Program not linked with -g, cannot print stack backtrace)\\n\"\n  | Some a ->\n      for i = 0 to Array.length a - 1 do\n        match format_backtrace_slot i a.(i) with\n          | None -> ()\n          | Some str -> fprintf outchan \"%s\\n\" str\n      done\n\nlet print_raw_backtrace outchan raw_backtrace =\n  print_exception_backtrace outchan (convert_raw_backtrace raw_backtrace)\n\n(* confusingly named: prints the global current backtrace *)\nlet print_backtrace outchan =\n  print_raw_backtrace outchan (get_raw_backtrace ())\n\nlet backtrace_to_string backtrace =\n  match backtrace with\n  | None ->\n     \"(Program not linked with -g, cannot print stack backtrace)\\n\"\n  | Some a ->\n      let b = Buffer.create 1024 in\n      for i = 0 to Array.length a - 1 do\n        match format_backtrace_slot i a.(i) with\n          | None -> ()\n          | Some str -> bprintf b \"%s\\n\" str\n      done;\n      Buffer.contents b\n\nlet raw_backtrace_to_string raw_backtrace =\n  backtrace_to_string (convert_raw_backtrace raw_backtrace)\n\nlet backtrace_slot_is_raise = function\n  | Known_location l -> l.is_raise\n  | Unknown_location l -> l.is_raise\n\nlet backtrace_slot_is_inline = function\n  | Known_location l -> l.is_inline\n  | Unknown_location _ -> false\n\ntype location = {\n  filename : string;\n  line_number : int;\n  start_char : int;\n  end_char : int;\n}\n\nlet backtrace_slot_location = function\n  | Unknown_location _ -> None\n  | Known_location l ->\n    Some {\n      filename    = l.filename;\n      line_number = l.line_number;\n      start_char  = l.start_char;\n      end_char    = l.end_char;\n    }\n\nlet backtrace_slots raw_backtrace =\n  (* The documentation of this function guarantees that Some is\n     returned only if a part of the trace is usable. This gives us\n     a bit more work than just convert_raw_backtrace, but it makes the\n     API more user-friendly -- otherwise most users would have to\n     reimplement the \"Program not linked with -g, sorry\" logic\n     themselves. *)\n  match convert_raw_backtrace raw_backtrace with\n    | None -> None\n    | Some backtrace ->\n      let usable_slot = function\n        | Unknown_location _ -> false\n        | Known_location _ -> true in\n      let rec exists_usable = function\n        | (-1) -> false\n        | i -> usable_slot backtrace.(i) || exists_usable (i - 1) in\n      if exists_usable (Array.length backtrace - 1)\n      then Some backtrace\n      else None\n\nmodule Slot = struct\n  type t = backtrace_slot\n  let format = format_backtrace_slot\n  let is_raise = backtrace_slot_is_raise\n  let is_inline = backtrace_slot_is_inline\n  let location = backtrace_slot_location\nend\n\nexternal raw_backtrace_length :\n  raw_backtrace -> int = \"caml_raw_backtrace_length\" [@@noalloc]\n\nexternal get_raw_backtrace_slot :\n  raw_backtrace -> int -> raw_backtrace_slot = \"caml_raw_backtrace_slot\"\n\nexternal get_raw_backtrace_next_slot :\n  raw_backtrace_slot -> raw_backtrace_slot option\n  = \"caml_raw_backtrace_next_slot\"\n\n(* confusingly named:\n   returns the *string* corresponding to the global current backtrace *)\nlet get_backtrace () =\n  backtrace_to_string (convert_raw_backtrace (get_raw_backtrace ()))\n\nexternal record_backtrace: bool -> unit = \"caml_record_backtrace\"\nexternal backtrace_status: unit -> bool = \"caml_backtrace_status\"\n\nlet register_printer fn =\n  printers := fn :: !printers\n\nexternal get_callstack: int -> raw_backtrace = \"caml_get_current_callstack\"\n\nlet exn_slot x =\n  let x = Obj.repr x in\n  if Obj.tag x = 0 then Obj.field x 0 else x\n\nlet exn_slot_id x =\n  let slot = exn_slot x in\n  (Obj.obj (Obj.field slot 1) : int)\n\nlet exn_slot_name x =\n  let slot = exn_slot x in\n  (Obj.obj (Obj.field slot 0) : string)\n\n\nlet uncaught_exception_handler = ref None\n\nlet set_uncaught_exception_handler fn = uncaught_exception_handler := Some fn\n\nlet empty_backtrace : raw_backtrace = Obj.obj (Obj.new_block Obj.abstract_tag 0)\n\nlet try_get_raw_backtrace () =\n  try\n    get_raw_backtrace ()\n  with _ (* Out_of_memory? *) ->\n    empty_backtrace\n\nlet handle_uncaught_exception' exn debugger_in_use =\n  try\n    (* Get the backtrace now, in case one of the [at_exit] function\n       destroys it. *)\n    let raw_backtrace =\n      if debugger_in_use (* Same test as in [byterun/printexc.c] *) then\n        empty_backtrace\n      else\n        try_get_raw_backtrace ()\n    in\n    (try Pervasives.do_at_exit () with _ -> ());\n    match !uncaught_exception_handler with\n    | None ->\n        eprintf \"Fatal error: exception %s\\n\" (to_string exn);\n        print_raw_backtrace stderr raw_backtrace;\n        flush stderr\n    | Some handler ->\n        try\n          handler exn raw_backtrace\n        with exn' ->\n          let raw_backtrace' = try_get_raw_backtrace () in\n          eprintf \"Fatal error: exception %s\\n\" (to_string exn);\n          print_raw_backtrace stderr raw_backtrace;\n          eprintf \"Fatal error in uncaught exception handler: exception %s\\n\"\n            (to_string exn');\n          print_raw_backtrace stderr raw_backtrace';\n          flush stderr\n  with\n    | Out_of_memory ->\n        prerr_endline\n          \"Fatal error: out of memory in uncaught exception handler\"\n\n(* This function is called by [caml_fatal_uncaught_exception] in\n   [byterun/printexc.c] which expects no exception is raised. *)\nlet handle_uncaught_exception exn debugger_in_use =\n  try\n    handle_uncaught_exception' exn debugger_in_use\n  with _ ->\n    (* There is not much we can do at this point *)\n    ()\n\nexternal register_named_value : string -> 'a -> unit\n  = \"caml_register_named_value\"\n\nlet () =\n  register_named_value \"Printexc.handle_uncaught_exception\"\n    handle_uncaught_exception\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Xavier Leroy, projet Cristal, INRIA Rocquencourt           *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* List operations *)\n\nlet rec length_aux len = function\n    [] -> len\n  | _::l -> length_aux (len + 1) l\n\nlet length l = length_aux 0 l\n\nlet cons a l = a::l\n\nlet hd = function\n    [] -> failwith \"hd\"\n  | a::_ -> a\n\nlet tl = function\n    [] -> failwith \"tl\"\n  | _::l -> l\n\nlet nth l n =\n  if n < 0 then invalid_arg \"List.nth\" else\n  let rec nth_aux l n =\n    match l with\n    | [] -> failwith \"nth\"\n    | a::l -> if n = 0 then a else nth_aux l (n-1)\n  in nth_aux l n\n\nlet append = (@)\n\nlet rec rev_append l1 l2 =\n  match l1 with\n    [] -> l2\n  | a :: l -> rev_append l (a :: l2)\n\nlet rev l = rev_append l []\n\nlet rec flatten = function\n    [] -> []\n  | l::r -> l @ flatten r\n\nlet concat = flatten\n\nlet rec map f = function\n    [] -> []\n  | a::l -> let r = f a in r :: map f l\n\nlet rec mapi i f = function\n    [] -> []\n  | a::l -> let r = f i a in r :: mapi (i + 1) f l\n\nlet mapi f l = mapi 0 f l\n\nlet rev_map f l =\n  let rec rmap_f accu = function\n    | [] -> accu\n    | a::l -> rmap_f (f a :: accu) l\n  in\n  rmap_f [] l\n\n\nlet rec iter f = function\n    [] -> ()\n  | a::l -> f a; iter f l\n\nlet rec iteri i f = function\n    [] -> ()\n  | a::l -> f i a; iteri (i + 1) f l\n\nlet iteri f l = iteri 0 f l\n\nlet rec fold_left f accu l =\n  match l with\n    [] -> accu\n  | a::l -> fold_left f (f accu a) l\n\nlet rec fold_right f l accu =\n  match l with\n    [] -> accu\n  | a::l -> f a (fold_right f l accu)\n\nlet rec map2 f l1 l2 =\n  match (l1, l2) with\n    ([], []) -> []\n  | (a1::l1, a2::l2) -> let r = f a1 a2 in r :: map2 f l1 l2\n  | (_, _) -> invalid_arg \"List.map2\"\n\nlet rev_map2 f l1 l2 =\n  let rec rmap2_f accu l1 l2 =\n    match (l1, l2) with\n    | ([], []) -> accu\n    | (a1::l1, a2::l2) -> rmap2_f (f a1 a2 :: accu) l1 l2\n    | (_, _) -> invalid_arg \"List.rev_map2\"\n  in\n  rmap2_f [] l1 l2\n\n\nlet rec iter2 f l1 l2 =\n  match (l1, l2) with\n    ([], []) -> ()\n  | (a1::l1, a2::l2) -> f a1 a2; iter2 f l1 l2\n  | (_, _) -> invalid_arg \"List.iter2\"\n\nlet rec fold_left2 f accu l1 l2 =\n  match (l1, l2) with\n    ([], []) -> accu\n  | (a1::l1, a2::l2) -> fold_left2 f (f accu a1 a2) l1 l2\n  | (_, _) -> invalid_arg \"List.fold_left2\"\n\nlet rec fold_right2 f l1 l2 accu =\n  match (l1, l2) with\n    ([], []) -> accu\n  | (a1::l1, a2::l2) -> f a1 a2 (fold_right2 f l1 l2 accu)\n  | (_, _) -> invalid_arg \"List.fold_right2\"\n\nlet rec for_all p = function\n    [] -> true\n  | a::l -> p a && for_all p l\n\nlet rec exists p = function\n    [] -> false\n  | a::l -> p a || exists p l\n\nlet rec for_all2 p l1 l2 =\n  match (l1, l2) with\n    ([], []) -> true\n  | (a1::l1, a2::l2) -> p a1 a2 && for_all2 p l1 l2\n  | (_, _) -> invalid_arg \"List.for_all2\"\n\nlet rec exists2 p l1 l2 =\n  match (l1, l2) with\n    ([], []) -> false\n  | (a1::l1, a2::l2) -> p a1 a2 || exists2 p l1 l2\n  | (_, _) -> invalid_arg \"List.exists2\"\n\nlet rec mem x = function\n    [] -> false\n  | a::l -> compare a x = 0 || mem x l\n\nlet rec memq x = function\n    [] -> false\n  | a::l -> a == x || memq x l\n\nlet rec assoc x = function\n    [] -> raise Not_found\n  | (a,b)::l -> if compare a x = 0 then b else assoc x l\n\nlet rec assq x = function\n    [] -> raise Not_found\n  | (a,b)::l -> if a == x then b else assq x l\n\nlet rec mem_assoc x = function\n  | [] -> false\n  | (a, _) :: l -> compare a x = 0 || mem_assoc x l\n\nlet rec mem_assq x = function\n  | [] -> false\n  | (a, _) :: l -> a == x || mem_assq x l\n\nlet rec remove_assoc x = function\n  | [] -> []\n  | (a, _ as pair) :: l ->\n      if compare a x = 0 then l else pair :: remove_assoc x l\n\nlet rec remove_assq x = function\n  | [] -> []\n  | (a, _ as pair) :: l -> if a == x then l else pair :: remove_assq x l\n\nlet rec find p = function\n  | [] -> raise Not_found\n  | x :: l -> if p x then x else find p l\n\nlet find_all p =\n  let rec find accu = function\n  | [] -> rev accu\n  | x :: l -> if p x then find (x :: accu) l else find accu l in\n  find []\n\nlet filter = find_all\n\nlet partition p l =\n  let rec part yes no = function\n  | [] -> (rev yes, rev no)\n  | x :: l -> if p x then part (x :: yes) no l else part yes (x :: no) l in\n  part [] [] l\n\nlet rec split = function\n    [] -> ([], [])\n  | (x,y)::l ->\n      let (rx, ry) = split l in (x::rx, y::ry)\n\nlet rec combine l1 l2 =\n  match (l1, l2) with\n    ([], []) -> []\n  | (a1::l1, a2::l2) -> (a1, a2) :: combine l1 l2\n  | (_, _) -> invalid_arg \"List.combine\"\n\n(** sorting *)\n\nlet rec merge cmp l1 l2 =\n  match l1, l2 with\n  | [], l2 -> l2\n  | l1, [] -> l1\n  | h1 :: t1, h2 :: t2 ->\n      if cmp h1 h2 <= 0\n      then h1 :: merge cmp t1 l2\n      else h2 :: merge cmp l1 t2\n\n\nlet rec chop k l =\n  if k = 0 then l else begin\n    match l with\n    | _::t -> chop (k-1) t\n    | _ -> assert false\n  end\n\n\nlet stable_sort cmp l =\n  let rec rev_merge l1 l2 accu =\n    match l1, l2 with\n    | [], l2 -> rev_append l2 accu\n    | l1, [] -> rev_append l1 accu\n    | h1::t1, h2::t2 ->\n        if cmp h1 h2 <= 0\n        then rev_merge t1 l2 (h1::accu)\n        else rev_merge l1 t2 (h2::accu)\n  in\n  let rec rev_merge_rev l1 l2 accu =\n    match l1, l2 with\n    | [], l2 -> rev_append l2 accu\n    | l1, [] -> rev_append l1 accu\n    | h1::t1, h2::t2 ->\n        if cmp h1 h2 > 0\n        then rev_merge_rev t1 l2 (h1::accu)\n        else rev_merge_rev l1 t2 (h2::accu)\n  in\n  let rec sort n l =\n    match n, l with\n    | 2, x1 :: x2 :: _ ->\n       if cmp x1 x2 <= 0 then [x1; x2] else [x2; x1]\n    | 3, x1 :: x2 :: x3 :: _ ->\n       if cmp x1 x2 <= 0 then begin\n         if cmp x2 x3 <= 0 then [x1; x2; x3]\n         else if cmp x1 x3 <= 0 then [x1; x3; x2]\n         else [x3; x1; x2]\n       end else begin\n         if cmp x1 x3 <= 0 then [x2; x1; x3]\n         else if cmp x2 x3 <= 0 then [x2; x3; x1]\n         else [x3; x2; x1]\n       end\n    | n, l ->\n       let n1 = n asr 1 in\n       let n2 = n - n1 in\n       let l2 = chop n1 l in\n       let s1 = rev_sort n1 l in\n       let s2 = rev_sort n2 l2 in\n       rev_merge_rev s1 s2 []\n  and rev_sort n l =\n    match n, l with\n    | 2, x1 :: x2 :: _ ->\n       if cmp x1 x2 > 0 then [x1; x2] else [x2; x1]\n    | 3, x1 :: x2 :: x3 :: _ ->\n       if cmp x1 x2 > 0 then begin\n         if cmp x2 x3 > 0 then [x1; x2; x3]\n         else if cmp x1 x3 > 0 then [x1; x3; x2]\n         else [x3; x1; x2]\n       end else begin\n         if cmp x1 x3 > 0 then [x2; x1; x3]\n         else if cmp x2 x3 > 0 then [x2; x3; x1]\n         else [x3; x2; x1]\n       end\n    | n, l ->\n       let n1 = n asr 1 in\n       let n2 = n - n1 in\n       let l2 = chop n1 l in\n       let s1 = sort n1 l in\n       let s2 = sort n2 l2 in\n       rev_merge s1 s2 []\n  in\n  let len = length l in\n  if len < 2 then l else sort len l\n\n\nlet sort = stable_sort\nlet fast_sort = stable_sort\n\n(* Note: on a list of length between about 100000 (depending on the minor\n   heap size and the type of the list) and Sys.max_array_size, it is\n   actually faster to use the following, but it might also use more memory\n   because the argument list cannot be deallocated incrementally.\n\n   Also, there seems to be a bug in this code or in the\n   implementation of obj_truncate.\n\nexternal obj_truncate : 'a array -> int -> unit = \"caml_obj_truncate\"\n\nlet array_to_list_in_place a =\n  let l = Array.length a in\n  let rec loop accu n p =\n    if p <= 0 then accu else begin\n      if p = n then begin\n        obj_truncate a p;\n        loop (a.(p-1) :: accu) (n-1000) (p-1)\n      end else begin\n        loop (a.(p-1) :: accu) n (p-1)\n      end\n    end\n  in\n  loop [] (l-1000) l\n\n\nlet stable_sort cmp l =\n  let a = Array.of_list l in\n  Array.stable_sort cmp a;\n  array_to_list_in_place a\n\n*)\n\n\n(** sorting + removing duplicates *)\n\nlet sort_uniq cmp l =\n  let rec rev_merge l1 l2 accu =\n    match l1, l2 with\n    | [], l2 -> rev_append l2 accu\n    | l1, [] -> rev_append l1 accu\n    | h1::t1, h2::t2 ->\n        let c = cmp h1 h2 in\n        if c = 0 then rev_merge t1 t2 (h1::accu)\n        else if c < 0\n        then rev_merge t1 l2 (h1::accu)\n        else rev_merge l1 t2 (h2::accu)\n  in\n  let rec rev_merge_rev l1 l2 accu =\n    match l1, l2 with\n    | [], l2 -> rev_append l2 accu\n    | l1, [] -> rev_append l1 accu\n    | h1::t1, h2::t2 ->\n        let c = cmp h1 h2 in\n        if c = 0 then rev_merge_rev t1 t2 (h1::accu)\n        else if c > 0\n        then rev_merge_rev t1 l2 (h1::accu)\n        else rev_merge_rev l1 t2 (h2::accu)\n  in\n  let rec sort n l =\n    match n, l with\n    | 2, x1 :: x2 :: _ ->\n       let c = cmp x1 x2 in\n       if c = 0 then [x1]\n       else if c < 0 then [x1; x2] else [x2; x1]\n    | 3, x1 :: x2 :: x3 :: _ ->\n       let c = cmp x1 x2 in\n       if c = 0 then begin\n         let c = cmp x2 x3 in\n         if c = 0 then [x2]\n         else if c < 0 then [x2; x3] else [x3; x2]\n       end else if c < 0 then begin\n         let c = cmp x2 x3 in\n         if c = 0 then [x1; x2]\n         else if c < 0 then [x1; x2; x3]\n         else let c = cmp x1 x3 in\n         if c = 0 then [x1; x2]\n         else if c < 0 then [x1; x3; x2]\n         else [x3; x1; x2]\n       end else begin\n         let c = cmp x1 x3 in\n         if c = 0 then [x2; x1]\n         else if c < 0 then [x2; x1; x3]\n         else let c = cmp x2 x3 in\n         if c = 0 then [x2; x1]\n         else if c < 0 then [x2; x3; x1]\n         else [x3; x2; x1]\n       end\n    | n, l ->\n       let n1 = n asr 1 in\n       let n2 = n - n1 in\n       let l2 = chop n1 l in\n       let s1 = rev_sort n1 l in\n       let s2 = rev_sort n2 l2 in\n       rev_merge_rev s1 s2 []\n  and rev_sort n l =\n    match n, l with\n    | 2, x1 :: x2 :: _ ->\n       let c = cmp x1 x2 in\n       if c = 0 then [x1]\n       else if c > 0 then [x1; x2] else [x2; x1]\n    | 3, x1 :: x2 :: x3 :: _ ->\n       let c = cmp x1 x2 in\n       if c = 0 then begin\n         let c = cmp x2 x3 in\n         if c = 0 then [x2]\n         else if c > 0 then [x2; x3] else [x3; x2]\n       end else if c > 0 then begin\n         let c = cmp x2 x3 in\n         if c = 0 then [x1; x2]\n         else if c > 0 then [x1; x2; x3]\n         else let c = cmp x1 x3 in\n         if c = 0 then [x1; x2]\n         else if c > 0 then [x1; x3; x2]\n         else [x3; x1; x2]\n       end else begin\n         let c = cmp x1 x3 in\n         if c = 0 then [x2; x1]\n         else if c > 0 then [x2; x1; x3]\n         else let c = cmp x2 x3 in\n         if c = 0 then [x2; x1]\n         else if c > 0 then [x2; x3; x1]\n         else [x3; x2; x1]\n       end\n    | n, l ->\n       let n1 = n asr 1 in\n       let n2 = n - n1 in\n       let l2 = chop n1 l in\n       let s1 = sort n1 l in\n       let s2 = sort n2 l2 in\n       rev_merge s1 s2 []\n  in\n  let len = length l in\n  if len < 2 then l else sort len l\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Xavier Leroy, projet Cristal, INRIA Rocquencourt           *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* Character operations *)\n\nexternal code: char -> int = \"%identity\"\nexternal unsafe_chr: int -> char = \"%identity\"\n\nlet chr n =\n  if n < 0 || n > 255 then invalid_arg \"Char.chr\" else unsafe_chr n\n\nexternal bytes_create: int -> bytes = \"caml_create_bytes\"\nexternal bytes_unsafe_set : bytes -> int -> char -> unit\n                           = \"%bytes_unsafe_set\"\nexternal unsafe_to_string : bytes -> string = \"%bytes_to_string\"\n\nlet escaped = function\n  | '\\'' -> \"\\\\'\"\n  | '\\\\' -> \"\\\\\\\\\"\n  | '\\n' -> \"\\\\n\"\n  | '\\t' -> \"\\\\t\"\n  | '\\r' -> \"\\\\r\"\n  | '\\b' -> \"\\\\b\"\n  | ' ' .. '~' as c ->\n      let s = bytes_create 1 in\n      bytes_unsafe_set s 0 c;\n      unsafe_to_string s\n  | c ->\n      let n = code c in\n      let s = bytes_create 4 in\n      bytes_unsafe_set s 0 '\\\\';\n      bytes_unsafe_set s 1 (unsafe_chr (48 + n / 100));\n      bytes_unsafe_set s 2 (unsafe_chr (48 + (n / 10) mod 10));\n      bytes_unsafe_set s 3 (unsafe_chr (48 + n mod 10));\n      unsafe_to_string s\n\nlet lowercase c =\n  if (c >= 'A' && c <= 'Z')\n  || (c >= '\\192' && c <= '\\214')\n  || (c >= '\\216' && c <= '\\222')\n  then unsafe_chr(code c + 32)\n  else c\n\nlet uppercase c =\n  if (c >= 'a' && c <= 'z')\n  || (c >= '\\224' && c <= '\\246')\n  || (c >= '\\248' && c <= '\\254')\n  then unsafe_chr(code c - 32)\n  else c\n\nlet lowercase_ascii c =\n  if (c >= 'A' && c <= 'Z')\n  then unsafe_chr(code c + 32)\n  else c\n\nlet uppercase_ascii c =\n  if (c >= 'a' && c <= 'z')\n  then unsafe_chr(code c - 32)\n  else c\n\ntype t = char\n\nlet compare c1 c2 = code c1 - code c2\nlet equal (c1: t) (c2: t) = compare c1 c2 = 0\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Xavier Leroy, projet Cristal, INRIA Rocquencourt           *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* Byte sequence operations *)\n\n(* WARNING: Some functions in this file are duplicated in string.ml for\n   efficiency reasons. When you modify the one in this file you need to\n   modify its duplicate in string.ml.\n   These functions have a \"duplicated\" comment above their definition.\n*)\n\nexternal length : bytes -> int = \"%bytes_length\"\nexternal string_length : string -> int = \"%string_length\"\nexternal get : bytes -> int -> char = \"%bytes_safe_get\"\nexternal set : bytes -> int -> char -> unit = \"%bytes_safe_set\"\nexternal create : int -> bytes = \"caml_create_bytes\"\nexternal unsafe_get : bytes -> int -> char = \"%bytes_unsafe_get\"\nexternal unsafe_set : bytes -> int -> char -> unit = \"%bytes_unsafe_set\"\nexternal unsafe_fill : bytes -> int -> int -> char -> unit\n                     = \"caml_fill_bytes\" [@@noalloc]\nexternal unsafe_to_string : bytes -> string = \"%bytes_to_string\"\nexternal unsafe_of_string : string -> bytes = \"%bytes_of_string\"\n\nexternal unsafe_blit : bytes -> int -> bytes -> int -> int -> unit\n                     = \"caml_blit_bytes\" [@@noalloc]\nexternal unsafe_blit_string : string -> int -> bytes -> int -> int -> unit\n                     = \"caml_blit_string\" [@@noalloc]\n\nlet make n c =\n  let s = create n in\n  unsafe_fill s 0 n c;\n  s\n\nlet init n f =\n  let s = create n in\n  for i = 0 to n - 1 do\n    unsafe_set s i (f i)\n  done;\n  s\n\nlet empty = create 0\n\nlet copy s =\n  let len = length s in\n  let r = create len in\n  unsafe_blit s 0 r 0 len;\n  r\n\nlet to_string b = unsafe_to_string (copy b)\nlet of_string s = copy (unsafe_of_string s)\n\nlet sub s ofs len =\n  if ofs < 0 || len < 0 || ofs > length s - len\n  then invalid_arg \"String.sub / Bytes.sub\"\n  else begin\n    let r = create len in\n    unsafe_blit s ofs r 0 len;\n    r\n  end\n\nlet sub_string b ofs len = unsafe_to_string (sub b ofs len)\n\nlet extend s left right =\n  let len = length s + left + right in\n  let r = create len in\n  let (srcoff, dstoff) = if left < 0 then -left, 0 else 0, left in\n  let cpylen = min (length s - srcoff) (len - dstoff) in\n  if cpylen > 0 then unsafe_blit s srcoff r dstoff cpylen;\n  r\n\nlet fill s ofs len c =\n  if ofs < 0 || len < 0 || ofs > length s - len\n  then invalid_arg \"String.fill / Bytes.fill\"\n  else unsafe_fill s ofs len c\n\nlet blit s1 ofs1 s2 ofs2 len =\n  if len < 0 || ofs1 < 0 || ofs1 > length s1 - len\n             || ofs2 < 0 || ofs2 > length s2 - len\n  then invalid_arg \"Bytes.blit\"\n  else unsafe_blit s1 ofs1 s2 ofs2 len\n\nlet blit_string s1 ofs1 s2 ofs2 len =\n  if len < 0 || ofs1 < 0 || ofs1 > string_length s1 - len\n             || ofs2 < 0 || ofs2 > length s2 - len\n  then invalid_arg \"String.blit / Bytes.blit_string\"\n  else unsafe_blit_string s1 ofs1 s2 ofs2 len\n\n(* duplicated in string.ml *)\nlet iter f a =\n  for i = 0 to length a - 1 do f(unsafe_get a i) done\n\n(* duplicated in string.ml *)\nlet iteri f a =\n  for i = 0 to length a - 1 do f i (unsafe_get a i) done\n\nlet ensure_ge x y = if x >= y then x else invalid_arg \"Bytes.concat\"\n\nlet rec sum_lengths acc seplen = function\n  | [] -> acc\n  | hd :: [] -> length hd + acc\n  | hd :: tl -> sum_lengths (ensure_ge (length hd + seplen + acc) acc) seplen tl\n\nlet rec unsafe_blits dst pos sep seplen = function\n    [] -> dst\n  | hd :: [] ->\n    unsafe_blit hd 0 dst pos (length hd); dst\n  | hd :: tl ->\n    unsafe_blit hd 0 dst pos (length hd);\n    unsafe_blit sep 0 dst (pos + length hd) seplen;\n    unsafe_blits dst (pos + length hd + seplen) sep seplen tl\n\nlet concat sep = function\n    [] -> empty\n  | l -> let seplen = length sep in\n          unsafe_blits \n            (create (sum_lengths 0 seplen l))\n            0 sep seplen l\n\nlet cat s1 s2 =\n  let l1 = length s1 in\n  let l2 = length s2 in\n  let r = create (l1 + l2) in\n  unsafe_blit s1 0 r 0 l1;\n  unsafe_blit s2 0 r l1 l2;\n  r\n\n\nexternal char_code: char -> int = \"%identity\"\nexternal char_chr: int -> char = \"%identity\"\n\nlet is_space = function\n  | ' ' | '\\012' | '\\n' | '\\r' | '\\t' -> true\n  | _ -> false\n\nlet trim s =\n  let len = length s in\n  let i = ref 0 in\n  while !i < len && is_space (unsafe_get s !i) do\n    incr i\n  done;\n  let j = ref (len - 1) in\n  while !j >= !i && is_space (unsafe_get s !j) do\n    decr j\n  done;\n  if !j >= !i then\n    sub s !i (!j - !i + 1)\n  else\n    empty\n\nlet escaped s =\n  let n = ref 0 in\n  for i = 0 to length s - 1 do\n    n := !n +\n      (match unsafe_get s i with\n       | '\\\"' | '\\\\' | '\\n' | '\\t' | '\\r' | '\\b' -> 2\n       | ' ' .. '~' -> 1\n       | _ -> 4)\n  done;\n  if !n = length s then copy s else begin\n    let s' = create !n in\n    n := 0;\n    for i = 0 to length s - 1 do\n      begin match unsafe_get s i with\n      | ('\\\"' | '\\\\') as c ->\n          unsafe_set s' !n '\\\\'; incr n; unsafe_set s' !n c\n      | '\\n' ->\n          unsafe_set s' !n '\\\\'; incr n; unsafe_set s' !n 'n'\n      | '\\t' ->\n          unsafe_set s' !n '\\\\'; incr n; unsafe_set s' !n 't'\n      | '\\r' ->\n          unsafe_set s' !n '\\\\'; incr n; unsafe_set s' !n 'r'\n      | '\\b' ->\n          unsafe_set s' !n '\\\\'; incr n; unsafe_set s' !n 'b'\n      | (' ' .. '~') as c -> unsafe_set s' !n c\n      | c ->\n          let a = char_code c in\n          unsafe_set s' !n '\\\\';\n          incr n;\n          unsafe_set s' !n (char_chr (48 + a / 100));\n          incr n;\n          unsafe_set s' !n (char_chr (48 + (a / 10) mod 10));\n          incr n;\n          unsafe_set s' !n (char_chr (48 + a mod 10));\n      end;\n      incr n\n    done;\n    s'\n  end\n\nlet map f s =\n  let l = length s in\n  if l = 0 then s else begin\n    let r = create l in\n    for i = 0 to l - 1 do unsafe_set r i (f (unsafe_get s i)) done;\n    r\n  end\n\nlet mapi f s =\n  let l = length s in\n  if l = 0 then s else begin\n    let r = create l in\n    for i = 0 to l - 1 do unsafe_set r i (f i (unsafe_get s i)) done;\n    r\n  end\n\nlet uppercase_ascii s = map Char.uppercase_ascii s\nlet lowercase_ascii s = map Char.lowercase_ascii s\n\nlet apply1 f s =\n  if length s = 0 then s else begin\n    let r = copy s in\n    unsafe_set r 0 (f(unsafe_get s 0));\n    r\n  end\n\nlet capitalize_ascii s = apply1 Char.uppercase_ascii s\nlet uncapitalize_ascii s = apply1 Char.lowercase_ascii s\n\n(* duplicated in string.ml *)\nlet rec index_rec s lim i c =\n  if i >= lim then raise Not_found else\n  if unsafe_get s i = c then i else index_rec s lim (i + 1) c\n\n(* duplicated in string.ml *)\nlet index s c = index_rec s (length s) 0 c\n\n(* duplicated in string.ml *)\nlet index_from s i c =\n  let l = length s in\n  if i < 0 || i > l then invalid_arg \"String.index_from / Bytes.index_from\" else\n  index_rec s l i c\n\n(* duplicated in string.ml *)\nlet rec rindex_rec s i c =\n  if i < 0 then raise Not_found else\n  if unsafe_get s i = c then i else rindex_rec s (i - 1) c\n\n(* duplicated in string.ml *)\nlet rindex s c = rindex_rec s (length s - 1) c\n\n(* duplicated in string.ml *)\nlet rindex_from s i c =\n  if i < -1 || i >= length s then\n    invalid_arg \"String.rindex_from / Bytes.rindex_from\"\n  else\n    rindex_rec s i c\n\n\n(* duplicated in string.ml *)\nlet contains_from s i c =\n  let l = length s in\n  if i < 0 || i > l then\n    invalid_arg \"String.contains_from / Bytes.contains_from\"\n  else\n    try ignore (index_rec s l i c); true with Not_found -> false\n\n\n(* duplicated in string.ml *)\nlet contains s c = contains_from s 0 c\n\n(* duplicated in string.ml *)\nlet rcontains_from s i c =\n  if i < 0 || i >= length s then\n    invalid_arg \"String.rcontains_from / Bytes.rcontains_from\"\n  else\n    try ignore (rindex_rec s i c); true with Not_found -> false\n\n\ntype t = bytes\n\nlet compare (x: t) (y: t) = Pervasives.compare x y\nexternal equal : t -> t -> bool = \"caml_bytes_equal\"\n\n(* Deprecated functions implemented via other deprecated functions *)\n[@@@ocaml.warning \"-3\"]\nlet uppercase s = map Char.uppercase s\nlet lowercase s = map Char.lowercase s\n\nlet capitalize s = apply1 Char.uppercase s\nlet uncapitalize s = apply1 Char.lowercase s\n","(* Sexp: Module for handling S-expressions (I/O, etc.) *)\n\nopen Format\nopen Bigarray\nmodule Sexplib = Sexplib0\nmodule Conv = Sexplib.Sexp_conv (* conv.ml depends on us so we can\n                                   only use this module *)\n\nmodule String = Bytes\n\ninclude Type\n\ntype bigstring = (char, int8_unsigned_elt, c_layout) Array1.t\ninclude (Sexplib.Sexp : module type of struct include Sexplib.Sexp end with type t := t)\ninclude Private\n\nlet rec compare_list compare_elt a b =\n  match a, b with\n  | [] , [] -> 0\n  | [] , _  -> -1\n  | _  , [] -> 1\n  | x::xs, y::ys ->\n    let res = compare_elt x y in\n    if res <> 0 then res\n    else compare_list compare_elt xs ys\n\nlet rec compare a b =\n  if a == b then\n    0\n  else\n    match a, b with\n    | Atom a, Atom b -> String.compare a b\n    | Atom _, _ -> -1\n    | _, Atom _ -> 1\n    | List a, List b ->\n      compare_list compare a b\n\n(* Output of S-expressions to I/O-channels *)\n\nlet with_new_buffer oc f =\n  let buf = buffer () in\n  f buf;\n  Buffer.output_buffer oc buf\n\nlet output_hum oc sexp =\n  with_new_buffer oc (fun buf -> to_buffer_hum sexp ~buf)\n\nlet output_hum_indent indent oc sexp =\n  with_new_buffer oc (fun buf -> to_buffer_hum ~indent sexp ~buf)\n\nlet output_mach oc sexp =\n  with_new_buffer oc (fun buf -> to_buffer_mach sexp ~buf)\n\nlet output = output_mach\n\n\n(* Output of S-expressions to file *)\n\n(* The temp file functions in the OCaml Filename module do not support\n   permissions.  But opening a file with given permissions is different\n   from opening it and chmoding it to these permissions, because the umask\n   is taken in account.  Under Unix there's no easy way to get the umask in\n   a thread-safe way. *)\nmodule Tmp_file = struct\n  let prng = ref None\n\n  let temp_file_name prefix suffix =\n    let rand_state = match !prng with\n      | Some v -> v\n      | None ->\n          let ret = Random.State.make_self_init () in\n          prng := Some ret;\n          ret\n    in\n    let rnd = (Random.State.bits rand_state) land 0xFFFFFF in\n    Printf.sprintf \"%s%06x%s\" prefix rnd suffix\n\n  (* Keep the permissions loose. Sexps are usually shared and rarely private*)\n  let open_temp_file ?(perm = 0o666) prefix suffix =\n    let rec try_name counter =\n      let name = temp_file_name prefix suffix in\n      try\n        let oc =\n          open_out_gen [Open_wronly; Open_creat; Open_excl; Open_text] perm name\n        in\n        name, oc\n      with Sys_error _ as e ->\n        if counter >= 1000 then raise e else try_name (counter + 1)\n    in\n    try_name 0\nend\n\nlet save_of_output ?perm output_function file sexp =\n  let tmp_name, oc = Tmp_file.open_temp_file ?perm file \"tmp\" in\n  begin\n    try\n      output_function oc sexp;\n      close_out oc;\n    with e ->\n      close_out_noerr oc;\n      begin try Sys.remove tmp_name with _ -> () end;\n      raise e\n  end;\n  Sys.rename tmp_name file\n\nlet output_sexp_nl do_output oc sexp =\n  do_output oc sexp;\n  output_string oc \"\\n\"\n\nlet save_hum ?perm file sexp =\n  save_of_output ?perm (output_sexp_nl output_hum) file sexp\n\nlet save_mach ?perm file sexp = save_of_output ?perm output_mach file sexp\nlet save = save_mach\n\nlet output_sexps_nl do_output oc sexps =\n  List.iter (output_sexp_nl do_output oc) sexps\n\nlet save_sexps_hum ?perm file sexps =\n  save_of_output ?perm (output_sexps_nl output_hum) file sexps\n\nlet save_sexps_mach ?perm file sexps =\n  save_of_output ?perm (output_sexps_nl output_mach) file sexps\n\nlet save_sexps = save_sexps_mach\n\n\n(* Scan functions *)\n\nlet scan_sexp ?buf lexbuf = Parser.sexp (Lexer.main ?buf) lexbuf\nlet scan_sexp_opt ?buf lexbuf = Parser.sexp_opt (Lexer.main ?buf) lexbuf\nlet scan_sexps ?buf lexbuf = Parser.sexps (Lexer.main ?buf) lexbuf\nlet scan_rev_sexps ?buf lexbuf = Parser.rev_sexps (Lexer.main ?buf) lexbuf\n\nlet get_main_buf buf =\n  let buf =\n    match buf with\n    | None -> Buffer.create 128\n    | Some buf -> buf in\n  Lexer.main ~buf\n\nlet scan_fold_sexps ?buf ~f ~init lexbuf =\n  let main = get_main_buf buf in\n  let rec loop acc =\n    match Parser.sexp_opt main lexbuf with\n    | None -> acc\n    | Some sexp -> loop (f acc sexp) in\n  loop init\n\nlet scan_iter_sexps ?buf ~f lexbuf =\n  scan_fold_sexps ?buf lexbuf ~init:() ~f:(fun () sexp -> f sexp)\n\nlet scan_sexps_conv ?buf ~f lexbuf =\n  let coll acc sexp = f sexp :: acc in\n  List.rev (scan_fold_sexps ?buf ~f:coll ~init:[] lexbuf)\n\n\n(* Partial parsing *)\n\nmodule Annot = struct\n  type pos = { line : int; col : int; offset : int }\n  type range = { start_pos : pos; end_pos : pos }\n  type t = Atom of range * Type.t | List of range * t list * Type.t\n  type 'a conv = [ `Result of 'a | `Error of exn * t ]\n\n  exception Conv_exn of string * exn\n  let () =\n    Conv.Exn_converter.add ~finalise:false [%extension_constructor Conv_exn]\n      (function\n        | Conv_exn (loc, exn) ->\n            List [\n              Atom \"Sexplib.Sexp.Annotated.Conv_exn\";\n              Atom loc;\n              Conv.sexp_of_exn exn;\n            ]\n        | _ -> assert false)\n\n  type stack = {\n    mutable positions : pos list;\n    mutable stack : t list list;\n  }\n\n  let get_sexp = function Atom (_, sexp) | List (_, _, sexp) -> sexp\n  let get_range = function Atom (range, _) | List (range, _, _) -> range\n\n  exception Annot_sexp of t\n\n  let find_sexp annot_sexp sexp =\n    let rec loop annot_sexp =\n      match annot_sexp with\n      | Atom (_, sub_sexp)\n      | List (_, _, sub_sexp) when sexp == sub_sexp ->\n          raise (Annot_sexp annot_sexp)\n      | List (_, annots, _) -> List.iter loop annots\n      | Atom _ -> ()\n    in\n    try loop annot_sexp; None\n    with Annot_sexp res -> Some res\nend\n\nmodule Parse_pos = struct\n  type t =\n    {\n      mutable text_line : int;\n      mutable text_char : int;\n      mutable global_offset : int;\n      mutable buf_pos : int;\n    }\n\n  let create\n        ?(text_line = 1) ?(text_char = 0)\n        ?(buf_pos = 0) ?(global_offset = 0) () =\n    let fail msg = failwith (\"Sexplib.Sexp.Parse_pos.create: \" ^ msg) in\n    if text_line < 1 then fail \"text_line < 1\"\n    else if text_char < 0 then fail \"text_char < 0\"\n    else if global_offset < 0 then fail \"global_offset < 0\"\n    else if buf_pos < 0 then fail \"buf_pos < 0\"\n    else { text_line; text_char; global_offset; buf_pos }\n\n  let with_buf_pos t buf_pos = { t with buf_pos }\nend\n\nmodule Cont_state = struct\n  type t =\n    | Parsing_toplevel_whitespace\n    | Parsing_nested_whitespace\n    | Parsing_atom\n    | Parsing_list\n    | Parsing_sexp_comment\n    | Parsing_block_comment\n\n  let to_string = function\n    | Parsing_toplevel_whitespace -> \"Parsing_toplevel_whitespace\"\n    | Parsing_nested_whitespace -> \"Parsing_nested_whitespace\"\n    | Parsing_atom -> \"Parsing_atom\"\n    | Parsing_list -> \"Parsing_list\"\n    | Parsing_sexp_comment -> \"Parsing_sexp_comment\"\n    | Parsing_block_comment -> \"Parsing_block_comment\"\nend\n\ntype ('a, 't) parse_result =\n  | Done of 't * Parse_pos.t\n  | Cont of Cont_state.t * ('a, 't) parse_fun\n\nand ('a, 't) parse_fun = pos : int -> len : int -> 'a -> ('a, 't) parse_result\n\ntype 't parse_state =\n  {\n    parse_pos : Parse_pos.t;\n    mutable pstack : 't;\n    pbuf : Buffer.t;\n  }\n\ntype parse_error =\n  {\n    location : string;\n    err_msg : string;\n    parse_state :\n      [\n      | `Sexp of t list list parse_state\n      | `Annot of Annot.stack parse_state\n      ]\n  }\n\nexception Parse_error of parse_error\nlet () =\n  Conv.Exn_converter.add ~finalise:false\n    [%extension_constructor Parse_error]\n    (function\n      | Parse_error pe ->\n        let ppos =\n          match pe.parse_state with\n          | `Sexp { parse_pos; pstack=_; pbuf=_ } | `Annot { parse_pos; pstack=_; pbuf=_ } -> parse_pos\n        in\n        List [\n          Atom \"Sexplib.Sexp.Parse_error\";\n          List [\n            List [Atom \"location\"; Atom pe.location];\n            List [Atom \"err_msg\"; Atom pe.err_msg];\n            List [Atom \"text_line\"; Conv.sexp_of_int ppos.Parse_pos.text_line];\n            List [Atom \"text_char\"; Conv.sexp_of_int ppos.Parse_pos.text_char];\n            List [\n              Atom \"global_offset\"; Conv.sexp_of_int ppos.Parse_pos.global_offset\n            ];\n            List [Atom \"buf_pos\"; Conv.sexp_of_int ppos.Parse_pos.buf_pos];\n          ]\n        ]\n      | _ -> assert false)\n\nlet bump_text_line { parse_pos; _ } =\n  parse_pos.Parse_pos.text_line <- parse_pos.Parse_pos.text_line + 1;\n  parse_pos.Parse_pos.text_char <- 0\n\nlet bump_text_pos { parse_pos; _ } =\n  parse_pos.Parse_pos.text_char <- parse_pos.Parse_pos.text_char + 1\n\nlet bump_pos_cont state str ~max_pos ~pos cont =\n  bump_text_pos state;\n  cont state str ~max_pos ~pos:(pos + 1)\n\nlet bump_line_cont state str ~max_pos ~pos cont =\n  bump_text_line state;\n  cont state str ~max_pos ~pos:(pos + 1)\n\nlet add_bump bump state str ~max_pos ~pos c cont =\n  Buffer.add_char state.pbuf c;\n  bump state;\n  cont state str ~max_pos ~pos:(pos + 1)\n\nlet add_bump_pos state str ~max_pos ~pos c cont =\n  add_bump bump_text_pos state str ~max_pos ~pos c cont\n\nlet add_bump_line state str ~max_pos ~pos c cont =\n  add_bump bump_text_line state str ~max_pos ~pos c cont\n\nlet set_parse_pos parse_pos buf_pos =\n  let len = buf_pos - parse_pos.Parse_pos.buf_pos in\n  parse_pos.Parse_pos.buf_pos <- buf_pos;\n  parse_pos.Parse_pos.global_offset <- parse_pos.Parse_pos.global_offset + len\n\nlet mk_parse_pos { parse_pos; _ } buf_pos =\n  set_parse_pos parse_pos buf_pos;\n  parse_pos\n\nlet raise_parse_error parse_state location buf_pos err_msg =\n  match parse_state with\n  | `Sexp { parse_pos; _ } | `Annot { parse_pos; _ } ->\n      set_parse_pos parse_pos buf_pos;\n      let parse_error = { location; err_msg; parse_state } in\n      raise (Parse_error parse_error)\n\nlet raise_unexpected_char parse_state location buf_pos c =\n  let err_msg = sprintf \"unexpected character: '%c'\" c in\n  raise_parse_error parse_state location buf_pos err_msg\n\nlet mk_cont_parser cont_parse = (); fun _state str ~max_pos ~pos ->\n  let len = max_pos - pos + 1 in\n  cont_parse ~pos ~len str\n\nmodule Safe_empty_parse = struct\n  (* A type indicating whether [eof] in a certain parser state should result in valid\n     parse of empty sexp list.\n\n     [True] means that it should be considered a valid empty parse,\n     [False] means that it should be considered an incomplete parse,\n     [Should_not_be_empty] means that this state will guarantee [pstack] or [pbuf]\n     are non-empty, so it's incomplete parse anyway.\n  *)\n  type t =\n    | True\n    | False\n    | Should_not_be_empty\nend\n\n(* Macro for generating parsers *)\n#define MK_PARSER( \\\n    TYPE, GET_LEN, PARSE, GET_CHAR, \\\n    GET_PSTACK, SET_PSTACK, \\\n    REGISTER_POS, REGISTER_POS1, \\\n    MK_ATOM, MK_LIST, INIT_PSTACK, MK_PARSE_STATE) \\\n  let bump_found_atom bump state str ~max_pos ~pos cont = \\\n    let pbuf = state.pbuf in \\\n    let pbuf_str = Buffer.contents pbuf in \\\n    let atom = MK_ATOM in \\\n    match GET_PSTACK with \\\n    | [] -> Done (atom, mk_parse_pos state pos) \\\n    | rev_sexp_lst :: sexp_stack -> \\\n        Buffer.clear pbuf; \\\n        let pstack = (atom :: rev_sexp_lst) :: sexp_stack in \\\n        SET_PSTACK; \\\n        bump state; \\\n        cont state str ~max_pos ~pos:(pos + 1) \\\n  \\\n  let check_str_bounds loc ~pos ~len (str : TYPE) = \\\n    if pos < 0 then invalid_arg (loc ^ \": pos < 0\"); \\\n    if len < 0 then invalid_arg (loc ^ \": len < 0\"); \\\n    let str_len = GET_LEN str in \\\n    let pos_len = pos + len in \\\n    if pos_len > str_len then invalid_arg (loc ^ \": pos + len > str_len\"); \\\n    pos_len - 1 \\\n  \\\n  let mk_cont_state name cont state ~cont_state = \\\n    let parse_fun = \\\n      let used_ref = ref false in \\\n      fun ~pos ~len str -> \\\n        if !used_ref then \\\n          failwith \"Sexplib.Sexp: parser continuation called twice\" \\\n        else begin \\\n          used_ref := true; \\\n          let max_pos = check_str_bounds name ~pos ~len str in \\\n          cont state str ~max_pos ~pos \\\n        end \\\n    in \\\n    Cont (cont_state, parse_fun) \\\n  \\\n  let mk_cont name ~(eof_safe : Safe_empty_parse.t) cont state = \\\n    let cont_state = \\\n      match GET_PSTACK = [], Buffer.length state.pbuf = 0 with \\\n      | true, true -> \\\n        begin match eof_safe with \\\n        | True -> Cont_state.Parsing_toplevel_whitespace \\\n        | False -> Cont_state.Parsing_nested_whitespace \\\n        | Should_not_be_empty -> \\\n          failwith (\"should never be parsing whitespace in \"^ name) \\\n        end \\\n      | false, true -> Cont_state.Parsing_list \\\n      | _, false -> Cont_state.Parsing_atom \\\n    in \\\n    mk_cont_state name cont state ~cont_state \\\n  \\\n  let rec PARSE state str ~max_pos ~pos = \\\n    if pos > max_pos then mk_cont \"parse\" ~eof_safe:True PARSE state \\\n    else \\\n      match GET_CHAR with \\\n      | '(' -> \\\n          REGISTER_POS \\\n          let pstack = [] :: GET_PSTACK in \\\n          SET_PSTACK; \\\n          bump_pos_cont state str ~max_pos ~pos PARSE \\\n      | ')' as c -> \\\n          (match GET_PSTACK with \\\n          | [] -> raise_unexpected_char (MK_PARSE_STATE state) \"parse\" pos c \\\n          | rev_sexp_lst :: sexp_stack -> \\\n              let sexp_lst = List.rev rev_sexp_lst in \\\n              let sexp = MK_LIST in \\\n              match sexp_stack with \\\n              | [] -> Done (sexp, mk_parse_pos state (pos + 1)) \\\n              | higher_rev_sexp_lst :: higher_sexp_stack -> \\\n                  let pstack = \\\n                    (sexp :: higher_rev_sexp_lst) :: higher_sexp_stack \\\n                  in \\\n                  SET_PSTACK; \\\n                  bump_pos_cont state str ~max_pos ~pos PARSE) \\\n      | ' ' | '\\009' | '\\012' -> bump_pos_cont state str ~max_pos ~pos PARSE \\\n      | '\\010' -> bump_line_cont state str ~max_pos ~pos PARSE \\\n      | '\\013' -> bump_pos_cont state str ~max_pos ~pos parse_nl \\\n      | ';' -> bump_pos_cont state str ~max_pos ~pos parse_comment \\\n      | '\"' -> \\\n          REGISTER_POS1 \\\n          bump_pos_cont state str ~max_pos ~pos parse_quoted \\\n      | c -> \\\n          REGISTER_POS \\\n          let parse = \\\n            match c with \\\n            | '#' -> maybe_parse_comment \\\n            | '|' -> maybe_parse_close_comment \\\n            | _ -> parse_atom \\\n          in \\\n          add_bump_pos state str ~max_pos ~pos c parse \\\n  \\\n  and parse_nl state str ~max_pos ~pos = \\\n    if pos > max_pos then mk_cont \"parse_nl\" ~eof_safe:False parse_nl state \\\n    else \\\n      let c = GET_CHAR in \\\n      if c = '\\010' then bump_line_cont state str ~max_pos ~pos PARSE \\\n      else raise_unexpected_char (MK_PARSE_STATE state) \"parse_nl\" pos c \\\n  \\\n  and parse_comment state str ~max_pos ~pos = \\\n    if pos > max_pos then mk_cont \"parse_comment\" ~eof_safe:True parse_comment state \\\n    else \\\n      match GET_CHAR with \\\n      | '\\010' -> bump_line_cont state str ~max_pos ~pos PARSE \\\n      | '\\013' -> bump_pos_cont state str ~max_pos ~pos parse_nl \\\n      | _ -> bump_pos_cont state str ~max_pos ~pos parse_comment \\\n  \\\n  and maybe_parse_comment state str ~max_pos ~pos = \\\n    if pos > max_pos then \\\n      mk_cont \"maybe_parse_comment\" ~eof_safe:Should_not_be_empty maybe_parse_comment state \\\n    else \\\n      match GET_CHAR with \\\n      | ';' -> bump_pos_cont state str ~max_pos ~pos parse_sexp_comment \\\n      | '|' -> bump_pos_cont state str ~max_pos ~pos parse_block_comment \\\n      | _ -> parse_atom state str ~max_pos ~pos \\\n  \\\n  and maybe_parse_close_comment state str ~max_pos ~pos = \\\n    if pos > max_pos then \\\n      mk_cont \"maybe_parse_close_comment\" ~eof_safe:Should_not_be_empty maybe_parse_close_comment state \\\n    else \\\n      if GET_CHAR <> '#' then parse_atom state str ~max_pos ~pos \\\n      else \\\n        let err_msg = \"end of block comment without start\" in \\\n        raise_parse_error (MK_PARSE_STATE state) \\\n          \"maybe_parse_close_comment\" pos err_msg \\\n  \\\n  and parse_sexp_comment state str ~max_pos ~pos = \\\n    let pbuf_str = \"\" in \\\n    ignore (MK_ATOM); \\\n    Buffer.clear state.pbuf; \\\n    let old_pstack = GET_PSTACK in \\\n    let pstack = [] in \\\n    SET_PSTACK; \\\n    let rec loop parse state str ~max_pos ~pos = \\\n      match parse state str ~max_pos ~pos with \\\n      | Done (_sexp, { Parse_pos.buf_pos = pos; _ }) -> \\\n          Buffer.clear state.pbuf; \\\n          let pstack = old_pstack in \\\n          SET_PSTACK; \\\n          PARSE state str ~max_pos ~pos \\\n      | Cont (_, cont_parse) -> \\\n          Buffer.clear state.pbuf; \\\n          let parse = mk_cont_parser cont_parse in \\\n          mk_cont_state \"parse_sexp_comment\" (loop parse) state \\\n            ~cont_state:Cont_state.Parsing_sexp_comment \\\n    in \\\n    loop PARSE state str ~max_pos ~pos \\\n  \\\n  and parse_block_comment state str ~max_pos ~pos = \\\n    let pbuf_str = \"\" in \\\n    ignore (MK_ATOM); \\\n    Buffer.clear state.pbuf; \\\n    let old_pstack = GET_PSTACK in \\\n    let pstack = [] in \\\n    SET_PSTACK; \\\n    let rec loop depth state str ~max_pos ~pos = \\\n      let rec parse_block_depth state str ~max_pos ~pos = \\\n        if pos > max_pos then \\\n          mk_cont \"parse_block_depth\" ~eof_safe:False parse_block_depth state \\\n        else \\\n          match GET_CHAR with \\\n          | '\\010' -> bump_line_cont state str ~max_pos ~pos parse_block_depth \\\n          | '\"' -> \\\n              REGISTER_POS1 \\\n              let rec parse_block_quote parse state str ~max_pos ~pos = \\\n                match parse state str ~max_pos ~pos with \\\n                | Done (_sexp, { Parse_pos.buf_pos = pos; _ }) -> \\\n                    Buffer.clear state.pbuf; \\\n                    parse_block_depth state str ~max_pos ~pos \\\n                | Cont (_, cont_parse) -> \\\n                    Buffer.clear state.pbuf; \\\n                    let parse = mk_cont_parser cont_parse in \\\n                    mk_cont_state \"parse_block_quote\" \\\n                      (parse_block_quote parse) state \\\n                      ~cont_state:Cont_state.Parsing_block_comment \\\n              in \\\n              bump_pos_cont state str ~max_pos ~pos \\\n                (parse_block_quote parse_quoted) \\\n          | '#' -> bump_pos_cont state str ~max_pos ~pos parse_open_block \\\n          | '|' -> bump_pos_cont state str ~max_pos ~pos parse_close_block \\\n          | _ -> bump_pos_cont state str ~max_pos ~pos parse_block_depth \\\n      and parse_open_block state str ~max_pos ~pos = \\\n        if pos > max_pos then \\\n          mk_cont \"parse_open_block\" ~eof_safe:False parse_open_block state \\\n        else \\\n          if GET_CHAR = '|' then \\\n            bump_pos_cont state str ~max_pos ~pos (loop (depth + 1)) \\\n          else parse_block_depth state str ~max_pos ~pos \\\n      and parse_close_block state str ~max_pos ~pos = \\\n        if pos > max_pos then \\\n          mk_cont \"parse_close_block\" ~eof_safe:False parse_close_block state \\\n        else if GET_CHAR = '#' then \\\n          let parse = \\\n            if depth = 1 then \\\n              let () = Buffer.clear state.pbuf in \\\n              let pstack = old_pstack in \\\n              SET_PSTACK; \\\n              PARSE \\\n            else loop (depth - 1) \\\n          in \\\n          bump_pos_cont state str ~max_pos ~pos parse \\\n        else parse_block_depth state str ~max_pos ~pos \\\n      in \\\n      parse_block_depth state str ~max_pos ~pos \\\n    in \\\n    loop 1 state str ~max_pos ~pos \\\n  \\\n  and parse_atom state str ~max_pos ~pos = \\\n    if pos > max_pos then mk_cont \"parse_atom\" ~eof_safe:Should_not_be_empty parse_atom state \\\n    else \\\n      match GET_CHAR with \\\n      | ' ' | '\\009' | '\\012' -> \\\n          bump_found_atom bump_text_pos state str ~max_pos ~pos PARSE \\\n      | '#' as c -> \\\n          add_bump_pos state str ~max_pos ~pos c maybe_parse_bad_atom_hash \\\n      | '|' as c -> \\\n          add_bump_pos state str ~max_pos ~pos c maybe_parse_bad_atom_pipe \\\n      | '(' -> \\\n          let pbuf = state.pbuf in \\\n          let pbuf_str = Buffer.contents pbuf in \\\n          let atom = MK_ATOM in \\\n          (match GET_PSTACK with \\\n          | [] -> Done (atom, mk_parse_pos state pos) \\\n          | rev_sexp_lst :: sexp_stack -> \\\n              REGISTER_POS \\\n              Buffer.clear pbuf; \\\n              let pstack = [] :: (atom :: rev_sexp_lst) :: sexp_stack in \\\n              SET_PSTACK; \\\n              bump_pos_cont state str ~max_pos ~pos PARSE) \\\n      | ')' -> \\\n          let pbuf = state.pbuf in \\\n          let pbuf_str = Buffer.contents pbuf in \\\n          let atom = MK_ATOM in \\\n          (match GET_PSTACK with \\\n          | [] -> Done (atom, mk_parse_pos state pos) \\\n          | rev_sexp_lst :: sexp_stack -> \\\n              let sexp_lst = List.rev_append rev_sexp_lst [atom] in \\\n              let sexp = MK_LIST in \\\n              match sexp_stack with \\\n              | [] -> Done (sexp, mk_parse_pos state (pos + 1)) \\\n              | higher_rev_sexp_lst :: higher_sexp_stack -> \\\n                  Buffer.clear pbuf; \\\n                  let pstack = \\\n                    (sexp :: higher_rev_sexp_lst) :: higher_sexp_stack \\\n                  in \\\n                  SET_PSTACK; \\\n                  bump_pos_cont state str ~max_pos ~pos PARSE) \\\n      | '\\010' -> bump_found_atom bump_text_line state str ~max_pos ~pos PARSE \\\n      | '\\013' -> \\\n          bump_found_atom bump_text_pos state str ~max_pos ~pos parse_nl \\\n      | ';' -> \\\n          bump_found_atom bump_text_pos state str ~max_pos ~pos parse_comment \\\n      | '\"' -> \\\n          bump_found_atom \\\n            bump_text_pos state str ~max_pos ~pos reg_parse_quoted \\\n      | c -> \\\n          (* This is [add_bump_pos state str ~max_pos ~pos c parse_atom] inlined by \\\n             hand, see https://github.com/janestreet/sexplib/pull/14 for details: *) \\\n          Buffer.add_char state.pbuf c; \\\n          bump_text_pos state; \\\n          parse_atom state str ~max_pos ~pos:(pos + 1) \\\n  \\\n  and maybe_parse_bad_atom_pipe state str ~max_pos ~pos = \\\n    if pos > max_pos then \\\n      mk_cont \"maybe_parse_bad_atom_pipe\" \\\n        ~eof_safe:Should_not_be_empty maybe_parse_bad_atom_pipe state \\\n    else \\\n      match GET_CHAR with \\\n      | '#' -> \\\n          let err_msg = \"illegal end of block comment in unquoted atom\" in \\\n          raise_parse_error (MK_PARSE_STATE state) \"maybe_parse_bad_atom_pipe\" \\\n            pos err_msg \\\n      | _ -> parse_atom state str ~max_pos ~pos \\\n  \\\n  and maybe_parse_bad_atom_hash state str ~max_pos ~pos = \\\n    if pos > max_pos then \\\n      mk_cont \"maybe_parse_bad_atom_hash\" \\\n        ~eof_safe:Should_not_be_empty maybe_parse_bad_atom_hash state \\\n    else \\\n      match GET_CHAR with \\\n      | '|' -> \\\n          let err_msg = \"illegal start of block comment in unquoted atom\" in \\\n          raise_parse_error (MK_PARSE_STATE state) \"maybe_parse_bad_atom_hash\" \\\n            pos err_msg \\\n      | _ -> parse_atom state str ~max_pos ~pos \\\n  \\\n  and reg_parse_quoted state str ~max_pos ~pos = \\\n    REGISTER_POS \\\n    parse_quoted state str ~max_pos ~pos \\\n  \\\n  and parse_quoted state str ~max_pos ~pos = \\\n    if pos > max_pos then mk_cont \"parse_quoted\" ~eof_safe:False parse_quoted state \\\n    else \\\n      match GET_CHAR with \\\n      | '\"' -> \\\n          let pbuf = state.pbuf in \\\n          let pbuf_str = Buffer.contents pbuf in \\\n          let atom = MK_ATOM in \\\n          (match GET_PSTACK with \\\n          | [] -> Done (atom, mk_parse_pos state (pos + 1)) \\\n          | rev_sexp_lst :: sexp_stack -> \\\n              Buffer.clear pbuf; \\\n              let pstack = (atom :: rev_sexp_lst) :: sexp_stack in \\\n              SET_PSTACK; \\\n              bump_pos_cont state str ~max_pos ~pos PARSE) \\\n      | '\\\\' -> bump_pos_cont state str ~max_pos ~pos parse_escaped \\\n      | '\\010' as c -> add_bump_line state str ~max_pos ~pos c parse_quoted \\\n      | c -> \\\n          (* This is [add_bump_pos state str ~max_pos ~pos c parse_quoted] inlined by \\\n             hand, see https://github.com/janestreet/sexplib/pull/14 for details: *) \\\n          Buffer.add_char state.pbuf c; \\\n          bump_text_pos state; \\\n          parse_quoted state str ~max_pos ~pos:(pos + 1) \\\n  \\\n  and parse_escaped state str ~max_pos ~pos = \\\n    if pos > max_pos then mk_cont \"parse_escaped\" ~eof_safe:False parse_escaped state \\\n    else \\\n      match GET_CHAR with \\\n      | '\\010' -> bump_line_cont state str ~max_pos ~pos parse_skip_ws \\\n      | '\\013' -> bump_pos_cont state str ~max_pos ~pos parse_skip_ws_nl \\\n      | '0' .. '9' as c -> \\\n          bump_text_pos state; \\\n          let d = Char.code c - 48 in \\\n          parse_dec state str ~max_pos ~pos:(pos + 1) ~count:2 ~d \\\n      | 'x' -> \\\n          bump_text_pos state; \\\n          parse_hex state str ~max_pos ~pos:(pos + 1) ~count:2 ~d:0 \\\n      | ('\\\\' | '\"' | '\\'' ) as c -> \\\n          add_bump_pos state str ~max_pos ~pos c parse_quoted \\\n      | 'n' -> add_bump_pos state str ~max_pos ~pos '\\n' parse_quoted \\\n      | 't' -> add_bump_pos state str ~max_pos ~pos '\\t' parse_quoted \\\n      | 'b' -> add_bump_pos state str ~max_pos ~pos '\\b' parse_quoted \\\n      | 'r' -> add_bump_pos state str ~max_pos ~pos '\\r' parse_quoted \\\n      | c -> \\\n          Buffer.add_char state.pbuf '\\\\'; \\\n          add_bump_pos state str ~max_pos ~pos c parse_quoted \\\n  \\\n  and parse_skip_ws state str ~max_pos ~pos = \\\n    if pos > max_pos then mk_cont \"parse_skip_ws\" ~eof_safe:False parse_skip_ws state \\\n    else \\\n      match GET_CHAR with \\\n      | ' ' | '\\009' -> bump_pos_cont state str ~max_pos ~pos parse_skip_ws \\\n      | _ -> parse_quoted state str ~max_pos ~pos \\\n  \\\n  and parse_skip_ws_nl state str ~max_pos ~pos = \\\n      if pos > max_pos then \\\n        mk_cont \"parse_skip_ws_nl\" ~eof_safe:False parse_skip_ws_nl state \\\n    else \\\n      if GET_CHAR = '\\010' then \\\n        bump_line_cont state str ~max_pos ~pos parse_skip_ws \\\n      else begin \\\n        Buffer.add_char state.pbuf '\\013'; \\\n        parse_quoted state str ~max_pos ~pos \\\n      end \\\n  \\\n  and parse_dec state str ~max_pos ~pos ~count ~d = \\\n    if pos > max_pos then mk_cont \"parse_dec\" ~eof_safe:False (parse_dec ~count ~d) state \\\n    else \\\n      match GET_CHAR with \\\n      | '0' .. '9' as c -> \\\n          let d = 10 * d + Char.code c - 48 in \\\n          if count = 1 then \\\n            if d > 255 then \\\n              let err_msg = sprintf \"illegal decimal escape: \\\\%d\" d in \\\n              raise_parse_error (MK_PARSE_STATE state) \"parse_dec\" pos err_msg \\\n            else \\\n              add_bump_pos state str ~max_pos ~pos (Char.chr d) parse_quoted \\\n          else ( \\\n            bump_text_pos state; \\\n            parse_dec state str ~max_pos ~pos:(pos + 1) ~count:(count - 1) ~d) \\\n      | c -> raise_unexpected_char (MK_PARSE_STATE state) \"parse_dec\" pos c \\\n  \\\n  and parse_hex state str ~max_pos ~pos ~count ~d = \\\n    if pos > max_pos then mk_cont \"parse_hex\" ~eof_safe:False (parse_hex ~count ~d) state \\\n    else \\\n      match GET_CHAR with \\\n      | '0' .. '9' | 'a' .. 'f' | 'A' .. 'F' as c -> \\\n          let corr = \\\n            if c >= 'a' then 87 \\\n            else if c >= 'A' then 55 \\\n            else 48 \\\n          in \\\n          let d = 16 * d + Char.code c - corr in \\\n          if count = 1 then \\\n            if d > 255 then \\\n              let err_msg = sprintf \"illegal hexadecimal escape: \\\\%x\" d in \\\n              raise_parse_error (MK_PARSE_STATE state) \"parse_hex\" pos err_msg \\\n            else \\\n              add_bump_pos state str ~max_pos ~pos (Char.chr d) parse_quoted \\\n          else ( \\\n            bump_text_pos state; \\\n            parse_hex state str ~max_pos ~pos:(pos + 1) ~count:(count - 1) ~d) \\\n      | c -> raise_unexpected_char (MK_PARSE_STATE state) \"parse_hex\" pos c \\\n  \\\n  let PARSE ?(parse_pos = Parse_pos.create ()) ?len str = \\\n    let pos = parse_pos.Parse_pos.buf_pos in \\\n    let len = \\\n      match len with \\\n      | Some len -> len \\\n      | None -> GET_LEN str - pos \\\n    in \\\n    let max_pos = check_str_bounds \"parse\" ~pos ~len str in \\\n    let state = \\\n      { \\\n        parse_pos; \\\n        pstack = INIT_PSTACK; \\\n        pbuf = Buffer.create 128; \\\n      } \\\n    in \\\n    PARSE state str ~max_pos ~pos\n\nMK_PARSER(\n  string, String.length, parse_str, str.[pos],\n  state.pstack, state.pstack <- pstack,\n  ,,\n  Atom pbuf_str, List sexp_lst, [], `Sexp\n)\n\nlet parse = parse_str\n\n\n(* Annot parsers *)\n\nlet get_glob_ofs parse_pos pos =\n  parse_pos.Parse_pos.global_offset + pos - parse_pos.Parse_pos.buf_pos\n\nlet mk_annot_pos\n      ({ Parse_pos.text_line = line; text_char = col; _ } as parse_pos) pos =\n  { Annot.line; col; offset = get_glob_ofs parse_pos pos }\n\nlet mk_annot_pos1\n      ({ Parse_pos.text_line = line; text_char = col; _ } as parse_pos) pos =\n  { Annot.line; col = col + 1; offset = get_glob_ofs parse_pos pos }\n\nlet add_annot_pos { parse_pos; pstack; pbuf = _ } pos =\n  pstack.Annot.positions <- mk_annot_pos parse_pos pos :: pstack.Annot.positions\n\nlet add_annot_pos1 { parse_pos; pstack; pbuf = _ } pos =\n  pstack.Annot.positions <-\n    mk_annot_pos1 parse_pos pos :: pstack.Annot.positions\n\nlet get_annot_range { parse_pos; pstack; pbuf = _ } pos =\n  let start_pos =\n    match pstack.Annot.positions with\n    | [] -> assert false  (* impossible *)\n    | h :: t -> pstack.Annot.positions <- t; h\n  in\n  let end_pos =\n    {\n      Annot.\n      line = parse_pos.Parse_pos.text_line;\n      col = parse_pos.Parse_pos.text_char;\n      offset = get_glob_ofs parse_pos pos;\n    }\n  in\n  { Annot.start_pos; end_pos }\n\nlet mk_annot_atom parse_state str pos =\n  Annot.Atom (get_annot_range parse_state pos, Atom str)\n\nlet mk_annot_list parse_state annot_lst pos =\n  let range = get_annot_range parse_state pos in\n  let sexp = List (List.rev (List.rev_map Annot.get_sexp annot_lst)) in\n  Annot.List (range, annot_lst, sexp)\n\nlet init_annot_pstate () = { Annot.positions = []; stack = [] }\n\nMK_PARSER(\n  string, String.length, parse_str_annot, str.[pos],\n  state.pstack.Annot.stack, state.pstack.Annot.stack <- pstack,\n  add_annot_pos state pos;,add_annot_pos1 state pos;,\n  mk_annot_atom state pbuf_str pos, mk_annot_list state sexp_lst pos,\n  init_annot_pstate (), `Annot\n)\n\n\n(* Partial parsing from bigstrings *)\n\n(* NOTE: this is really an awful duplication of the code for parsing\n   strings, but since OCaml does not inline higher-order functions known\n   at compile, other solutions would sacrifice a lot of efficiency. *)\n\nMK_PARSER(\n  bigstring, Array1.dim, parse_bigstring, str.{pos},\n  state.pstack, state.pstack <- pstack,\n  ,,\n  Atom pbuf_str, List sexp_lst, [], `Sexp\n)\n\nMK_PARSER(\n  bigstring, Array1.dim, parse_bigstring_annot, str.{pos},\n  state.pstack.Annot.stack, state.pstack.Annot.stack <- pstack,\n  add_annot_pos state pos;,add_annot_pos1 state pos;,\n  mk_annot_atom state pbuf_str pos, mk_annot_list state sexp_lst pos,\n  init_annot_pstate (), `Annot\n)\n\n\n(* Input functions *)\n\nlet mk_this_parse ?parse_pos my_parse = (); fun ~pos ~len str ->\n  let parse_pos =\n    match parse_pos with\n    | None -> Parse_pos.create ~buf_pos:pos ()\n    | Some parse_pos -> parse_pos.Parse_pos.buf_pos <- pos; parse_pos\n  in\n  my_parse ?parse_pos:(Some parse_pos) ?len:(Some len) str\n\n(* [ws_buf] must contain a single space character *)\nlet feed_end_of_input ~this_parse ~ws_buf =\n  (* When parsing atoms, the incremental parser cannot tell whether\n     it is at the end until it hits whitespace.  We therefore feed it\n     one space to determine whether it is finished. *)\n  match this_parse ~pos:0 ~len:1 ws_buf with\n  | Done (sexp, _) -> Ok sexp\n  | Cont (cont_state, _) -> Error cont_state\n\nlet gen_input_sexp my_parse ?parse_pos ic =\n  let buf = String.create 1 in\n  let rec loop this_parse =\n    match input_char ic with\n    | exception End_of_file ->\n      (buf.[0] <- ' ';\n       match feed_end_of_input ~this_parse ~ws_buf:buf with\n       | Ok sexp -> sexp\n       | Error _ -> raise End_of_file)\n    | c ->\n      buf.[0] <- c;\n      match this_parse ~pos:0 ~len:1 buf with\n      | Done (sexp, _) -> sexp\n      | Cont (_, this_parse) -> loop this_parse\n  in\n  loop (mk_this_parse ?parse_pos my_parse)\n\nlet input_sexp ?parse_pos ic = gen_input_sexp parse ?parse_pos ic\n\nlet gen_input_rev_sexps my_parse ~ws_buf ?parse_pos ?(buf = String.create 8192) ic =\n  let rev_sexps_ref = ref [] in\n  let buf_len = String.length buf in\n  let rec loop this_parse ~pos ~len =\n    if len > 0 then\n      match this_parse ~pos ~len buf with\n      | Done (sexp, ({ Parse_pos.buf_pos; _ } as parse_pos)) ->\n        rev_sexps_ref := sexp :: !rev_sexps_ref;\n        let n_parsed = buf_pos - pos in\n        let this_parse = mk_this_parse ~parse_pos my_parse in\n        if n_parsed = len then\n          let new_len = input ic buf 0 buf_len in\n          loop this_parse ~pos:0 ~len:new_len\n        else loop this_parse ~pos:buf_pos ~len:(len - n_parsed)\n      | Cont (_, this_parse) ->\n        loop this_parse ~pos:0 ~len:(input ic buf 0 buf_len)\n    else\n      match feed_end_of_input ~this_parse ~ws_buf with\n      | Ok sexp ->\n        sexp :: !rev_sexps_ref\n      | Error Parsing_toplevel_whitespace ->\n        !rev_sexps_ref\n      | Error cont_state ->\n        failwith (\n          \"Sexplib.Sexp.input_rev_sexps: reached EOF while in state \"\n          ^ Cont_state.to_string cont_state)\n  in\n  let len = input ic buf 0 buf_len in\n  let this_parse = mk_this_parse ?parse_pos my_parse in\n  loop this_parse ~pos:0 ~len\n\nlet input_rev_sexps ?parse_pos ?buf ic =\n  gen_input_rev_sexps parse ~ws_buf:\" \" ?parse_pos ?buf ic\n\nlet input_sexps ?parse_pos ?buf ic =\n  List.rev (input_rev_sexps ?parse_pos ?buf ic)\n\n\n(* of_string and of_bigstring *)\n\nlet of_string_bigstring loc my_parse ws_buf get_len get_sub str =\n  match my_parse ?parse_pos:None ?len:None str with\n  | Done (sexp, parse_pos) ->\n    begin\n      match my_parse ?parse_pos:(Some parse_pos) ?len:None str with\n      | Done (_sexp2, _) ->\n        failwith (sprintf (\n          \"Sexplib.Sexp.%s: got multiple S-expressions where only one was expected.\"\n        ) loc)\n      | Cont (Cont_state.Parsing_toplevel_whitespace, _) ->\n        sexp\n      | Cont (_, _) ->\n        (* not using [feed_end_of_input] here means \"a b\" will end up here and not in\n           \"multiple S-expressions\" branch, but it doesn't matter that much *)\n        failwith (sprintf (\n          \"Sexplib.Sexp.%s: S-expression followed by data at position %d...\")\n          loc parse_pos.buf_pos)\n    end\n  | Cont (_, this_parse) ->\n    match feed_end_of_input ~this_parse ~ws_buf with\n    | Ok sexp -> sexp\n    | Error cont_state ->\n      let cont_state_str = Cont_state.to_string cont_state in\n      failwith (\n        sprintf\n          \"Sexplib.Sexp.%s: incomplete S-expression while in state %s: %s\"\n          loc cont_state_str (get_sub str 0 (get_len str)))\n\nlet of_string str =\n  of_string_bigstring \"of_string\" parse \" \" String.length String.sub str\n\nlet get_bstr_sub_str bstr pos len =\n  let str = String.create len in\n  for i = 0 to len - 1 do str.[i] <- bstr.{pos + i} done;\n  str\n\nlet bstr_ws_buf = Array1.create char c_layout 1\nlet () = bstr_ws_buf.{0} <- ' '\n\nlet of_bigstring bstr =\n  of_string_bigstring\n    \"of_bigstring\"\n    parse_bigstring\n    bstr_ws_buf Array1.dim get_bstr_sub_str bstr\n\n\n(* Loading *)\n\nlet gen_load_rev_sexps input_rev_sexps ?buf file =\n  let ic = open_in file in\n  try\n    let sexps = input_rev_sexps ?parse_pos:None ?buf ic in\n    close_in ic;\n    sexps\n  with exc -> close_in_noerr ic; raise exc\n\nlet load_rev_sexps ?buf file = gen_load_rev_sexps input_rev_sexps ?buf file\n\nlet load_sexps ?buf file = List.rev (load_rev_sexps ?buf file)\n\nlet gen_load_sexp_loc = \"Sexplib.Sexp.gen_load_sexp\"\n\nlet gen_load_sexp my_parse ?(strict = true) ?(buf = String.create 8192) file =\n  let buf_len = String.length buf in\n  let ic = open_in file in\n  let rec loop this_parse =\n    let len = input ic buf 0 buf_len in\n    if len = 0 then\n      match feed_end_of_input ~this_parse ~ws_buf:\" \" with\n      | Ok sexp -> sexp\n      | Error cont_state ->\n        failwith (\n          sprintf \"%s: EOF in %s while in state %s\"\n            gen_load_sexp_loc file (Cont_state.to_string cont_state))\n    else\n      match this_parse ~pos:0 ~len buf with\n      | Done (sexp, ({ Parse_pos.buf_pos; _ } as parse_pos)) when strict ->\n        let rec strict_loop this_parse ~pos ~len =\n            match this_parse ~pos ~len buf with\n            | Done _ ->\n                failwith (\n                  sprintf \"%s: more than one S-expression in file %s\"\n                    gen_load_sexp_loc file)\n            | Cont (cont_state, this_parse) ->\n                let len = input ic buf 0 buf_len in\n                if len > 0 then strict_loop this_parse ~pos:0 ~len\n                else if cont_state = Cont_state.Parsing_toplevel_whitespace then sexp\n                else\n                  failwith (\n                    sprintf \"%s: %s in state %s loading file %s\"\n                      gen_load_sexp_loc \"additional incomplete data\"\n                      (Cont_state.to_string cont_state) file)\n          in\n          let this_parse = mk_this_parse ~parse_pos my_parse in\n          strict_loop this_parse ~pos:buf_pos ~len:(len - buf_pos)\n      | Done (sexp, _) -> sexp\n      | Cont (_, this_parse) -> loop this_parse\n  in\n  try\n    let sexp = loop (mk_this_parse my_parse) in\n    close_in ic;\n    sexp\n  with exc -> close_in_noerr ic; raise exc\n\nlet load_sexp ?strict ?buf file = gen_load_sexp parse ?strict ?buf file\n\nmodule Annotated = struct\n  include Annot\n\n  let parse = parse_str_annot\n  let parse_bigstring = parse_bigstring_annot\n\n  let input_rev_sexps ?parse_pos ?buf ic =\n    gen_input_rev_sexps parse ~ws_buf:\" \" ?parse_pos ?buf ic\n\n  let input_sexp ?parse_pos ic = gen_input_sexp parse ?parse_pos ic\n\n  let input_sexps ?parse_pos ?buf ic =\n    List.rev (input_rev_sexps ?parse_pos ?buf ic)\n\n  let of_string str =\n    of_string_bigstring\n      \"Annotated.of_string\" parse\n      \" \" String.length String.sub str\n\n  let of_bigstring bstr =\n    of_string_bigstring\n      \"Annotated.of_bigstring\"\n      parse_bigstring\n      bstr_ws_buf Array1.dim get_bstr_sub_str bstr\n\n  let load_rev_sexps ?buf file = gen_load_rev_sexps input_rev_sexps ?buf file\n  let load_sexps ?buf file = List.rev (load_rev_sexps ?buf file)\n  let load_sexp ?strict ?buf file = gen_load_sexp parse ?strict ?buf file\n\n  let conv f annot_sexp =\n    let sexp = get_sexp annot_sexp in\n    try `Result (f sexp)\n    with Of_sexp_error (exc, bad_sexp) as e ->\n      match find_sexp annot_sexp bad_sexp with\n      | None -> raise e\n      | Some bad_annot_sexp -> `Error (exc, bad_annot_sexp)\n\n  let get_conv_exn ~file ~exc annot_sexp =\n    let range = get_range annot_sexp in\n    let { start_pos = { line; col; offset = _ }; end_pos = _ } = range in\n    let loc = sprintf \"%s:%d:%d\" file line col in\n    Of_sexp_error (Annot.Conv_exn (loc, exc), get_sexp annot_sexp)\nend\n\nlet load_sexp_conv ?(strict = true) ?(buf = String.create 8192) file f =\n  let sexp = load_sexp ~strict ~buf file in\n  try `Result (f sexp)\n  with Of_sexp_error _ ->\n    Annotated.conv f (Annotated.load_sexp ~strict ~buf file)\n\nlet raise_conv_exn ~file = function\n  | `Result res -> res\n  | `Error (exc, annot_sexp) ->\n      raise (Annotated.get_conv_exn ~file ~exc annot_sexp)\n\nlet load_sexp_conv_exn ?strict ?buf file f =\n  raise_conv_exn ~file (load_sexp_conv ?strict ?buf file f)\n\nlet load_sexps_conv ?(buf = String.create 8192) file f =\n  let rev_sexps = load_rev_sexps ~buf file in\n  try List.rev_map (fun sexp -> `Result (f sexp)) rev_sexps\n  with Of_sexp_error _ as e ->\n    match Annotated.load_rev_sexps ~buf file with\n    | [] ->\n        (* File is now empty - perhaps it was a temporary file handle? *)\n        raise e\n    | rev_annot_sexps ->\n        List.rev_map (fun annot_sexp -> Annotated.conv f annot_sexp)\n          rev_annot_sexps\n\nlet load_sexps_conv_exn ?(buf = String.create 8192) file f =\n  let rev_sexps = load_rev_sexps ~buf file in\n  try List.rev_map f rev_sexps\n  with Of_sexp_error _ as e ->\n    match Annotated.load_rev_sexps ~buf file with\n    | [] ->\n        (* File is now empty - perhaps it was a temporary file handle? *)\n        raise e\n    | rev_annot_sexps ->\n        List.rev_map\n          (fun annot_sexp -> raise_conv_exn ~file (Annotated.conv f annot_sexp))\n          rev_annot_sexps\n\nlet gen_of_string_conv of_string annot_of_string str f =\n  let sexp = of_string str in\n  try `Result (f sexp)\n  with Of_sexp_error _ -> Annotated.conv f (annot_of_string str)\n\nlet of_string_conv str f =\n  gen_of_string_conv of_string Annotated.of_string str f\n\nlet of_bigstring_conv bstr f =\n  gen_of_string_conv of_bigstring Annotated.of_bigstring bstr f\n\nmodule Of_string_conv_exn = struct\n  type t = { exc : exn; sexp : Type.t; sub_sexp : Type.t }\n\n  exception E of t\n\n  let () =\n    Conv.Exn_converter.add ~finalise:false [%extension_constructor E]\n      (function\n        | E osce ->\n          List [\n            Atom \"Sexplib.Sexp.Of_string_conv_exn.E\";\n            List [\n              List [Atom \"exc\"; Conv.sexp_of_exn osce.exc];\n              List [Atom \"sexp\"; osce.sexp];\n              List [Atom \"sub_sexp\"; osce.sub_sexp];\n            ]\n            ]\n        | _ -> assert false)\nend\n\nlet gen_of_string_conv_exn of_string str f =\n  let sexp = of_string str in\n  try f sexp\n  with Of_sexp_error (exc, sub_sexp) ->\n    raise (Of_string_conv_exn.E { Of_string_conv_exn.exc; sexp; sub_sexp })\n\nlet of_string_conv_exn str f = gen_of_string_conv_exn of_string str f\nlet of_bigstring_conv_exn bstr f = gen_of_string_conv_exn of_bigstring bstr f\n\n\n(* Utilities for automated type conversions *)\n\nlet unit = List []\n\nexternal sexp_of_t : t -> t = \"%identity\"\nexternal t_of_sexp : t -> t = \"%identity\"\n\n\n(* Utilities for conversion error handling *)\n\ntype found = [ `Found | `Pos of int * found ]\ntype search_result = [ `Not_found | found ]\n\nlet rec search_physical sexp ~contained =\n  if sexp == contained then `Found\n  else\n    match sexp with\n    | Atom _ -> `Not_found\n    | List lst ->\n        let rec loop i = function\n          | [] -> `Not_found\n          | h :: t ->\n              let res = search_physical h ~contained in\n              match res with\n              | `Not_found -> loop (i + 1) t\n              | #found as found -> `Pos (i, found)\n        in\n        loop 0 lst\n\nlet rec subst_found sexp ~subst = function\n  | `Found -> subst\n  | `Pos (pos, found) ->\n      match sexp with\n      | Atom _ ->\n          failwith \"Sexplib.Sexp.subst_found: atom when position requested\"\n      | List lst ->\n          let rec loop acc pos = function\n            | [] ->\n                failwith\n                  \"Sexplib.Sexp.subst_found: short list when position requested\"\n            | h :: t when pos <> 0 -> loop (h :: acc) (pos - 1) t\n            | h :: t ->\n                List (List.rev_append acc (subst_found h ~subst found :: t))\n          in\n          loop [] pos lst\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*           Damien Doligez, projet Gallium, INRIA Rocquencourt           *)\n(*                                                                        *)\n(*   Copyright 2014 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* String operations, based on byte sequence operations *)\n\n(* WARNING: Some functions in this file are duplicated in bytes.ml for\n   efficiency reasons. When you modify the one in this file you need to\n   modify its duplicate in bytes.ml.\n   These functions have a \"duplicated\" comment above their definition.\n*)\n\nexternal length : string -> int = \"%string_length\"\nexternal get : string -> int -> char = \"%string_safe_get\"\nexternal set : bytes -> int -> char -> unit = \"%string_safe_set\"\nexternal create : int -> bytes = \"caml_create_string\"\nexternal unsafe_get : string -> int -> char = \"%string_unsafe_get\"\nexternal unsafe_set : bytes -> int -> char -> unit = \"%string_unsafe_set\"\nexternal unsafe_blit : string -> int ->  bytes -> int -> int -> unit\n                     = \"caml_blit_string\" [@@noalloc]\nexternal unsafe_fill : bytes -> int -> int -> char -> unit\n                     = \"caml_fill_string\" [@@noalloc]\n\nmodule B = Bytes\n\nlet bts = B.unsafe_to_string\nlet bos = B.unsafe_of_string\n\nlet make n c =\n  B.make n c |> bts\nlet init n f =\n  B.init n f |> bts\nlet copy s =\n  B.copy (bos s) |> bts\nlet sub s ofs len =\n  B.sub (bos s) ofs len |> bts\nlet fill =\n  B.fill\nlet blit =\n  B.blit_string\n\nlet ensure_ge x y = if x >= y then x else invalid_arg \"String.concat\"\n\nlet rec sum_lengths acc seplen = function\n  | [] -> acc\n  | hd :: [] -> length hd + acc\n  | hd :: tl -> sum_lengths (ensure_ge (length hd + seplen + acc) acc) seplen tl\n\nlet rec unsafe_blits dst pos sep seplen = function\n    [] -> dst\n  | hd :: [] ->\n    unsafe_blit hd 0 dst pos (length hd); dst\n  | hd :: tl ->\n    unsafe_blit hd 0 dst pos (length hd);\n    unsafe_blit sep 0 dst (pos + length hd) seplen;\n    unsafe_blits dst (pos + length hd + seplen) sep seplen tl\n\nlet concat sep = function\n    [] -> \"\"\n  | l -> let seplen = length sep in bts @@\n          unsafe_blits \n            (B.create (sum_lengths 0 seplen l))\n            0 sep seplen l\n\n(* duplicated in bytes.ml *)\nlet iter f s =\n  for i = 0 to length s - 1 do f (unsafe_get s i) done\n\n(* duplicated in bytes.ml *)\nlet iteri f s =\n  for i = 0 to length s - 1 do f i (unsafe_get s i) done\n\nlet map f s =\n  B.map f (bos s) |> bts\nlet mapi f s =\n  B.mapi f (bos s) |> bts\n\n(* Beware: we cannot use B.trim or B.escape because they always make a\n   copy, but String.mli spells out some cases where we are not allowed\n   to make a copy. *)\n\nlet is_space = function\n  | ' ' | '\\012' | '\\n' | '\\r' | '\\t' -> true\n  | _ -> false\n\nlet trim s =\n  if s = \"\" then s\n  else if is_space (unsafe_get s 0) || is_space (unsafe_get s (length s - 1))\n    then bts (B.trim (bos s))\n  else s\n\nlet escaped s =\n  let rec needs_escape i =\n    if i >= length s then false else\n      match unsafe_get s i with\n      | '\\\"' | '\\\\' | '\\n' | '\\t' | '\\r' | '\\b' -> true\n      | ' ' .. '~' -> needs_escape (i+1)\n      | _ -> true\n  in\n  if needs_escape 0 then\n    bts (B.escaped (bos s))\n  else\n    s\n\n(* duplicated in bytes.ml *)\nlet rec index_rec s lim i c =\n  if i >= lim then raise Not_found else\n  if unsafe_get s i = c then i else index_rec s lim (i + 1) c\n\n(* duplicated in bytes.ml *)\nlet index s c = index_rec s (length s) 0 c\n\n(* duplicated in bytes.ml *)\nlet index_from s i c =\n  let l = length s in\n  if i < 0 || i > l then invalid_arg \"String.index_from / Bytes.index_from\" else\n    index_rec s l i c\n\n(* duplicated in bytes.ml *)\nlet rec rindex_rec s i c =\n  if i < 0 then raise Not_found else\n  if unsafe_get s i = c then i else rindex_rec s (i - 1) c\n\n(* duplicated in bytes.ml *)\nlet rindex s c = rindex_rec s (length s - 1) c\n\n(* duplicated in bytes.ml *)\nlet rindex_from s i c =\n  if i < -1 || i >= length s then\n    invalid_arg \"String.rindex_from / Bytes.rindex_from\"\n  else\n    rindex_rec s i c\n\n(* duplicated in bytes.ml *)\nlet contains_from s i c =\n  let l = length s in\n  if i < 0 || i > l then\n    invalid_arg \"String.contains_from / Bytes.contains_from\"\n  else\n    try ignore (index_rec s l i c); true with Not_found -> false\n\n(* duplicated in bytes.ml *)\nlet contains s c = contains_from s 0 c\n\n(* duplicated in bytes.ml *)\nlet rcontains_from s i c =\n  if i < 0 || i >= length s then\n    invalid_arg \"String.rcontains_from / Bytes.rcontains_from\"\n  else\n    try ignore (rindex_rec s i c); true with Not_found -> false\n\nlet uppercase_ascii s =\n  B.uppercase_ascii (bos s) |> bts\nlet lowercase_ascii s =\n  B.lowercase_ascii (bos s) |> bts\nlet capitalize_ascii s =\n  B.capitalize_ascii (bos s) |> bts\nlet uncapitalize_ascii s =\n  B.uncapitalize_ascii (bos s) |> bts\n\ntype t = string\n\nlet compare (x: t) (y: t) = Pervasives.compare x y\nexternal equal : string -> string -> bool = \"caml_string_equal\"\n\nlet split_on_char sep s =\n  let r = ref [] in\n  let j = ref (length s) in\n  for i = length s - 1 downto 0 do\n    if unsafe_get s i = sep then begin\n      r := sub s (i + 1) (!j - i - 1) :: !r;\n      j := i\n    end\n  done;\n  sub s 0 !j :: !r\n\n(* Deprecated functions implemented via other deprecated functions *)\n[@@@ocaml.warning \"-3\"]\nlet uppercase s =\n  B.uppercase (bos s) |> bts\nlet lowercase s =\n  B.lowercase (bos s) |> bts\nlet capitalize s =\n  B.capitalize (bos s) |> bts\nlet uncapitalize s =\n  B.uncapitalize (bos s) |> bts\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Xavier Leroy, projet Cristal, INRIA Rocquencourt           *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* Operations on internal representations of values *)\n\ntype t\n\nexternal repr : 'a -> t = \"%identity\"\nexternal obj : t -> 'a = \"%identity\"\nexternal magic : 'a -> 'b = \"%identity\"\nexternal is_int : t -> bool = \"%obj_is_int\"\nlet [@inline always] is_block a = not (is_int a)\nexternal tag : t -> int = \"caml_obj_tag\"\nexternal set_tag : t -> int -> unit = \"caml_obj_set_tag\"\nexternal size : t -> int = \"%obj_size\"\nexternal reachable_words : t -> int = \"caml_obj_reachable_words\"\nexternal field : t -> int -> t = \"%obj_field\"\nexternal set_field : t -> int -> t -> unit = \"%obj_set_field\"\nexternal array_get: 'a array -> int -> 'a = \"%array_safe_get\"\nexternal array_set: 'a array -> int -> 'a -> unit = \"%array_safe_set\"\nlet [@inline always] double_field x i = array_get (obj x : float array) i\nlet [@inline always] set_double_field x i v =\n  array_set (obj x : float array) i v\nexternal new_block : int -> int -> t = \"caml_obj_block\"\nexternal dup : t -> t = \"caml_obj_dup\"\nexternal truncate : t -> int -> unit = \"caml_obj_truncate\"\nexternal add_offset : t -> Int32.t -> t = \"caml_obj_add_offset\"\n\nlet marshal (obj : t) =\n  Marshal.to_bytes obj []\nlet unmarshal str pos =\n  (Marshal.from_bytes str pos, pos + Marshal.total_size str pos)\n\nlet first_non_constant_constructor_tag = 0\nlet last_non_constant_constructor_tag = 245\n\nlet lazy_tag = 246\nlet closure_tag = 247\nlet object_tag = 248\nlet infix_tag = 249\nlet forward_tag = 250\n\nlet no_scan_tag = 251\n\nlet abstract_tag = 251\nlet string_tag = 252\nlet double_tag = 253\nlet double_array_tag = 254\nlet custom_tag = 255\nlet final_tag = custom_tag\n\n\nlet int_tag = 1000\nlet out_of_heap_tag = 1001\nlet unaligned_tag = 1002\n\nlet extension_constructor x =\n  let x = repr x in\n  let slot =\n    if (is_block x) && (tag x) <> object_tag && (size x) >= 1 then field x 0\n    else x\n  in\n  let name =\n    if (is_block slot) && (tag slot) = object_tag then field slot 0\n    else invalid_arg \"Obj.extension_constructor\"\n  in\n    if (tag name) = string_tag then (obj slot : extension_constructor)\n    else invalid_arg \"Obj.extension_constructor\"\n\nlet [@inline always] extension_name (slot : extension_constructor) =\n  (obj (field (repr slot) 0) : string)\n\nlet [@inline always] extension_id (slot : extension_constructor) =\n  (obj (field (repr slot) 1) : int)\n\nmodule Ephemeron = struct\n  type obj_t = t\n\n  type t (** ephemeron *)\n\n  external create: int -> t = \"caml_ephe_create\"\n\n  let length x = size(repr x) - 2\n\n  external get_key: t -> int -> obj_t option = \"caml_ephe_get_key\"\n  external get_key_copy: t -> int -> obj_t option = \"caml_ephe_get_key_copy\"\n  external set_key: t -> int -> obj_t -> unit = \"caml_ephe_set_key\"\n  external unset_key: t -> int -> unit = \"caml_ephe_unset_key\"\n  external check_key: t -> int -> bool = \"caml_ephe_check_key\"\n  external blit_key : t -> int -> t -> int -> int -> unit\n    = \"caml_ephe_blit_key\"\n\n  external get_data: t -> obj_t option = \"caml_ephe_get_data\"\n  external get_data_copy: t -> obj_t option = \"caml_ephe_get_data_copy\"\n  external set_data: t -> obj_t -> unit = \"caml_ephe_set_data\"\n  external unset_data: t -> unit = \"caml_ephe_unset_data\"\n  external check_data: t -> bool = \"caml_ephe_check_data\"\n  external blit_data : t -> t -> unit = \"caml_ephe_blit_data\"\n\n\nend\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Xavier Leroy, projet Cristal, INRIA Rocquencourt           *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* Array operations *)\n\nexternal length : 'a array -> int = \"%array_length\"\nexternal get: 'a array -> int -> 'a = \"%array_safe_get\"\nexternal set: 'a array -> int -> 'a -> unit = \"%array_safe_set\"\nexternal unsafe_get: 'a array -> int -> 'a = \"%array_unsafe_get\"\nexternal unsafe_set: 'a array -> int -> 'a -> unit = \"%array_unsafe_set\"\nexternal make: int -> 'a -> 'a array = \"caml_make_vect\"\nexternal create: int -> 'a -> 'a array = \"caml_make_vect\"\nexternal unsafe_sub : 'a array -> int -> int -> 'a array = \"caml_array_sub\"\nexternal append_prim : 'a array -> 'a array -> 'a array = \"caml_array_append\"\nexternal concat : 'a array list -> 'a array = \"caml_array_concat\"\nexternal unsafe_blit :\n  'a array -> int -> 'a array -> int -> int -> unit = \"caml_array_blit\"\nexternal create_float: int -> float array = \"caml_make_float_vect\"\nlet make_float = create_float\n\nlet init l f =\n  if l = 0 then [||] else\n  if l < 0 then invalid_arg \"Array.init\"\n  (* See #6575. We could also check for maximum array size, but this depends\n     on whether we create a float array or a regular one... *)\n  else\n   let res = create l (f 0) in\n   for i = 1 to pred l do\n     unsafe_set res i (f i)\n   done;\n   res\n\nlet make_matrix sx sy init =\n  let res = create sx [||] in\n  for x = 0 to pred sx do\n    unsafe_set res x (create sy init)\n  done;\n  res\n\nlet create_matrix = make_matrix\n\nlet copy a =\n  let l = length a in if l = 0 then [||] else unsafe_sub a 0 l\n\nlet append a1 a2 =\n  let l1 = length a1 in\n  if l1 = 0 then copy a2\n  else if length a2 = 0 then unsafe_sub a1 0 l1\n  else append_prim a1 a2\n\nlet sub a ofs len =\n  if ofs < 0 || len < 0 || ofs > length a - len\n  then invalid_arg \"Array.sub\"\n  else unsafe_sub a ofs len\n\nlet fill a ofs len v =\n  if ofs < 0 || len < 0 || ofs > length a - len\n  then invalid_arg \"Array.fill\"\n  else for i = ofs to ofs + len - 1 do unsafe_set a i v done\n\nlet blit a1 ofs1 a2 ofs2 len =\n  if len < 0 || ofs1 < 0 || ofs1 > length a1 - len\n             || ofs2 < 0 || ofs2 > length a2 - len\n  then invalid_arg \"Array.blit\"\n  else unsafe_blit a1 ofs1 a2 ofs2 len\n\nlet iter f a =\n  for i = 0 to length a - 1 do f(unsafe_get a i) done\n\nlet iter2 f a b =\n  if length a <> length b then\n    invalid_arg \"Array.iter2: arrays must have the same length\"\n  else\n    for i = 0 to length a - 1 do f (unsafe_get a i) (unsafe_get b i) done\n\nlet map f a =\n  let l = length a in\n  if l = 0 then [||] else begin\n    let r = create l (f(unsafe_get a 0)) in\n    for i = 1 to l - 1 do\n      unsafe_set r i (f(unsafe_get a i))\n    done;\n    r\n  end\n\nlet map2 f a b =\n  let la = length a in\n  let lb = length b in\n  if la <> lb then\n    invalid_arg \"Array.map2: arrays must have the same length\"\n  else begin\n    if la = 0 then [||] else begin\n      let r = create la (f (unsafe_get a 0) (unsafe_get b 0)) in\n      for i = 1 to la - 1 do\n        unsafe_set r i (f (unsafe_get a i) (unsafe_get b i))\n      done;\n      r\n    end\n  end\n\nlet iteri f a =\n  for i = 0 to length a - 1 do f i (unsafe_get a i) done\n\nlet mapi f a =\n  let l = length a in\n  if l = 0 then [||] else begin\n    let r = create l (f 0 (unsafe_get a 0)) in\n    for i = 1 to l - 1 do\n      unsafe_set r i (f i (unsafe_get a i))\n    done;\n    r\n  end\n\nlet to_list a =\n  let rec tolist i res =\n    if i < 0 then res else tolist (i - 1) (unsafe_get a i :: res) in\n  tolist (length a - 1) []\n\n(* Cannot use List.length here because the List module depends on Array. *)\nlet rec list_length accu = function\n  | [] -> accu\n  | _::t -> list_length (succ accu) t\n\nlet of_list = function\n    [] -> [||]\n  | hd::tl as l ->\n      let a = create (list_length 0 l) hd in\n      let rec fill i = function\n          [] -> a\n        | hd::tl -> unsafe_set a i hd; fill (i+1) tl in\n      fill 1 tl\n\nlet fold_left f x a =\n  let r = ref x in\n  for i = 0 to length a - 1 do\n    r := f !r (unsafe_get a i)\n  done;\n  !r\n\nlet fold_right f a x =\n  let r = ref x in\n  for i = length a - 1 downto 0 do\n    r := f (unsafe_get a i) !r\n  done;\n  !r\n\nlet exists p a =\n  let n = length a in\n  let rec loop i =\n    if i = n then false\n    else if p (unsafe_get a i) then true\n    else loop (succ i) in\n  loop 0\n\nlet for_all p a =\n  let n = length a in\n  let rec loop i =\n    if i = n then true\n    else if p (unsafe_get a i) then loop (succ i)\n    else false in\n  loop 0\n\nlet mem x a =\n  let n = length a in\n  let rec loop i =\n    if i = n then false\n    else if compare (unsafe_get a i) x = 0 then true\n    else loop (succ i) in\n  loop 0\n\nlet memq x a =\n  let n = length a in\n  let rec loop i =\n    if i = n then false\n    else if x == (unsafe_get a i) then true\n    else loop (succ i) in\n  loop 0\n\nexception Bottom of int\nlet sort cmp a =\n  let maxson l i =\n    let i31 = i+i+i+1 in\n    let x = ref i31 in\n    if i31+2 < l then begin\n      if cmp (get a i31) (get a (i31+1)) < 0 then x := i31+1;\n      if cmp (get a !x) (get a (i31+2)) < 0 then x := i31+2;\n      !x\n    end else\n      if i31+1 < l && cmp (get a i31) (get a (i31+1)) < 0\n      then i31+1\n      else if i31 < l then i31 else raise (Bottom i)\n  in\n  let rec trickledown l i e =\n    let j = maxson l i in\n    if cmp (get a j) e > 0 then begin\n      set a i (get a j);\n      trickledown l j e;\n    end else begin\n      set a i e;\n    end;\n  in\n  let trickle l i e = try trickledown l i e with Bottom i -> set a i e in\n  let rec bubbledown l i =\n    let j = maxson l i in\n    set a i (get a j);\n    bubbledown l j\n  in\n  let bubble l i = try bubbledown l i with Bottom i -> i in\n  let rec trickleup i e =\n    let father = (i - 1) / 3 in\n    assert (i <> father);\n    if cmp (get a father) e < 0 then begin\n      set a i (get a father);\n      if father > 0 then trickleup father e else set a 0 e;\n    end else begin\n      set a i e;\n    end;\n  in\n  let l = length a in\n  for i = (l + 1) / 3 - 1 downto 0 do trickle l i (get a i); done;\n  for i = l - 1 downto 2 do\n    let e = (get a i) in\n    set a i (get a 0);\n    trickleup (bubble i 0) e;\n  done;\n  if l > 1 then (let e = (get a 1) in set a 1 (get a 0); set a 0 e)\n\n\nlet cutoff = 5\nlet stable_sort cmp a =\n  let merge src1ofs src1len src2 src2ofs src2len dst dstofs =\n    let src1r = src1ofs + src1len and src2r = src2ofs + src2len in\n    let rec loop i1 s1 i2 s2 d =\n      if cmp s1 s2 <= 0 then begin\n        set dst d s1;\n        let i1 = i1 + 1 in\n        if i1 < src1r then\n          loop i1 (get a i1) i2 s2 (d + 1)\n        else\n          blit src2 i2 dst (d + 1) (src2r - i2)\n      end else begin\n        set dst d s2;\n        let i2 = i2 + 1 in\n        if i2 < src2r then\n          loop i1 s1 i2 (get src2 i2) (d + 1)\n        else\n          blit a i1 dst (d + 1) (src1r - i1)\n      end\n    in loop src1ofs (get a src1ofs) src2ofs (get src2 src2ofs) dstofs;\n  in\n  let isortto srcofs dst dstofs len =\n    for i = 0 to len - 1 do\n      let e = (get a (srcofs + i)) in\n      let j = ref (dstofs + i - 1) in\n      while (!j >= dstofs && cmp (get dst !j) e > 0) do\n        set dst (!j + 1) (get dst !j);\n        decr j;\n      done;\n      set dst (!j + 1) e;\n    done;\n  in\n  let rec sortto srcofs dst dstofs len =\n    if len <= cutoff then isortto srcofs dst dstofs len else begin\n      let l1 = len / 2 in\n      let l2 = len - l1 in\n      sortto (srcofs + l1) dst (dstofs + l1) l2;\n      sortto srcofs a (srcofs + l2) l1;\n      merge (srcofs + l2) l1 dst (dstofs + l1) l2 dst dstofs;\n    end;\n  in\n  let l = length a in\n  if l <= cutoff then isortto 0 a 0 l else begin\n    let l1 = l / 2 in\n    let l2 = l - l1 in\n    let t = make l2 (get a 0) in\n    sortto l1 t 0 l2;\n    sortto 0 a l2 l1;\n    merge l2 l1 t 0 l2 a 0;\n  end\n\n\nlet fast_sort = stable_sort\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Xavier Leroy, projet Cristal, INRIA Rocquencourt           *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\nmodule type OrderedType =\n  sig\n    type t\n    val compare: t -> t -> int\n  end\n\nmodule type S =\n  sig\n    type key\n    type +'a t\n    val empty: 'a t\n    val is_empty: 'a t -> bool\n    val mem:  key -> 'a t -> bool\n    val add: key -> 'a -> 'a t -> 'a t\n    val singleton: key -> 'a -> 'a t\n    val remove: key -> 'a t -> 'a t\n    val merge:\n          (key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t\n    val union: (key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t\n    val compare: ('a -> 'a -> int) -> 'a t -> 'a t -> int\n    val equal: ('a -> 'a -> bool) -> 'a t -> 'a t -> bool\n    val iter: (key -> 'a -> unit) -> 'a t -> unit\n    val fold: (key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b\n    val for_all: (key -> 'a -> bool) -> 'a t -> bool\n    val exists: (key -> 'a -> bool) -> 'a t -> bool\n    val filter: (key -> 'a -> bool) -> 'a t -> 'a t\n    val partition: (key -> 'a -> bool) -> 'a t -> 'a t * 'a t\n    val cardinal: 'a t -> int\n    val bindings: 'a t -> (key * 'a) list\n    val min_binding: 'a t -> (key * 'a)\n    val max_binding: 'a t -> (key * 'a)\n    val choose: 'a t -> (key * 'a)\n    val split: key -> 'a t -> 'a t * 'a option * 'a t\n    val find: key -> 'a t -> 'a\n    val map: ('a -> 'b) -> 'a t -> 'b t\n    val mapi: (key -> 'a -> 'b) -> 'a t -> 'b t\n  end\n\nmodule Make(Ord: OrderedType) = struct\n\n    type key = Ord.t\n\n    type 'a t =\n        Empty\n      | Node of 'a t * key * 'a * 'a t * int\n\n    let height = function\n        Empty -> 0\n      | Node(_,_,_,_,h) -> h\n\n    let create l x d r =\n      let hl = height l and hr = height r in\n      Node(l, x, d, r, (if hl >= hr then hl + 1 else hr + 1))\n\n    let singleton x d = Node(Empty, x, d, Empty, 1)\n\n    let bal l x d r =\n      let hl = match l with Empty -> 0 | Node(_,_,_,_,h) -> h in\n      let hr = match r with Empty -> 0 | Node(_,_,_,_,h) -> h in\n      if hl > hr + 2 then begin\n        match l with\n          Empty -> invalid_arg \"Map.bal\"\n        | Node(ll, lv, ld, lr, _) ->\n            if height ll >= height lr then\n              create ll lv ld (create lr x d r)\n            else begin\n              match lr with\n                Empty -> invalid_arg \"Map.bal\"\n              | Node(lrl, lrv, lrd, lrr, _)->\n                  create (create ll lv ld lrl) lrv lrd (create lrr x d r)\n            end\n      end else if hr > hl + 2 then begin\n        match r with\n          Empty -> invalid_arg \"Map.bal\"\n        | Node(rl, rv, rd, rr, _) ->\n            if height rr >= height rl then\n              create (create l x d rl) rv rd rr\n            else begin\n              match rl with\n                Empty -> invalid_arg \"Map.bal\"\n              | Node(rll, rlv, rld, rlr, _) ->\n                  create (create l x d rll) rlv rld (create rlr rv rd rr)\n            end\n      end else\n        Node(l, x, d, r, (if hl >= hr then hl + 1 else hr + 1))\n\n    let empty = Empty\n\n    let is_empty = function Empty -> true | _ -> false\n\n    let rec add x data = function\n        Empty ->\n          Node(Empty, x, data, Empty, 1)\n      | Node(l, v, d, r, h) as m ->\n          let c = Ord.compare x v in\n          if c = 0 then\n            if d == data then m else Node(l, x, data, r, h)\n          else if c < 0 then\n            let ll = add x data l in\n            if l == ll then m else bal ll v d r\n          else\n            let rr = add x data r in\n            if r == rr then m else bal l v d rr\n\n    let rec find x = function\n        Empty ->\n          raise Not_found\n      | Node(l, v, d, r, _) ->\n          let c = Ord.compare x v in\n          if c = 0 then d\n          else find x (if c < 0 then l else r)\n\n    let rec mem x = function\n        Empty ->\n          false\n      | Node(l, v, _, r, _) ->\n          let c = Ord.compare x v in\n          c = 0 || mem x (if c < 0 then l else r)\n\n    let rec min_binding = function\n        Empty -> raise Not_found\n      | Node(Empty, x, d, _, _) -> (x, d)\n      | Node(l, _, _, _, _) -> min_binding l\n\n    let rec max_binding = function\n        Empty -> raise Not_found\n      | Node(_, x, d, Empty, _) -> (x, d)\n      | Node(_, _, _, r, _) -> max_binding r\n\n    let rec remove_min_binding = function\n        Empty -> invalid_arg \"Map.remove_min_elt\"\n      | Node(Empty, _, _, r, _) -> r\n      | Node(l, x, d, r, _) -> bal (remove_min_binding l) x d r\n\n    let merge t1 t2 =\n      match (t1, t2) with\n        (Empty, t) -> t\n      | (t, Empty) -> t\n      | (_, _) ->\n          let (x, d) = min_binding t2 in\n          bal t1 x d (remove_min_binding t2)\n\n    let rec remove x = function\n        Empty ->\n          Empty\n      | (Node(l, v, d, r, _) as t) ->\n          let c = Ord.compare x v in\n          if c = 0 then merge l r\n          else if c < 0 then\n            let ll = remove x l in if l == ll then t else bal ll v d r\n          else\n            let rr = remove x r in if r == rr then t else bal l v d rr\n\n    let rec iter f = function\n        Empty -> ()\n      | Node(l, v, d, r, _) ->\n          iter f l; f v d; iter f r\n\n    let rec map f = function\n        Empty ->\n          Empty\n      | Node(l, v, d, r, h) ->\n          let l' = map f l in\n          let d' = f d in\n          let r' = map f r in\n          Node(l', v, d', r', h)\n\n    let rec mapi f = function\n        Empty ->\n          Empty\n      | Node(l, v, d, r, h) ->\n          let l' = mapi f l in\n          let d' = f v d in\n          let r' = mapi f r in\n          Node(l', v, d', r', h)\n\n    let rec fold f m accu =\n      match m with\n        Empty -> accu\n      | Node(l, v, d, r, _) ->\n          fold f r (f v d (fold f l accu))\n\n    let rec for_all p = function\n        Empty -> true\n      | Node(l, v, d, r, _) -> p v d && for_all p l && for_all p r\n\n    let rec exists p = function\n        Empty -> false\n      | Node(l, v, d, r, _) -> p v d || exists p l || exists p r\n\n    (* Beware: those two functions assume that the added k is *strictly*\n       smaller (or bigger) than all the present keys in the tree; it\n       does not test for equality with the current min (or max) key.\n\n       Indeed, they are only used during the \"join\" operation which\n       respects this precondition.\n    *)\n\n    let rec add_min_binding k v = function\n      | Empty -> singleton k v\n      | Node (l, x, d, r, _) ->\n        bal (add_min_binding k v l) x d r\n\n    let rec add_max_binding k v = function\n      | Empty -> singleton k v\n      | Node (l, x, d, r, _) ->\n        bal l x d (add_max_binding k v r)\n\n    (* Same as create and bal, but no assumptions are made on the\n       relative heights of l and r. *)\n\n    let rec join l v d r =\n      match (l, r) with\n        (Empty, _) -> add_min_binding v d r\n      | (_, Empty) -> add_max_binding v d l\n      | (Node(ll, lv, ld, lr, lh), Node(rl, rv, rd, rr, rh)) ->\n          if lh > rh + 2 then bal ll lv ld (join lr v d r) else\n          if rh > lh + 2 then bal (join l v d rl) rv rd rr else\n          create l v d r\n\n    (* Merge two trees l and r into one.\n       All elements of l must precede the elements of r.\n       No assumption on the heights of l and r. *)\n\n    let concat t1 t2 =\n      match (t1, t2) with\n        (Empty, t) -> t\n      | (t, Empty) -> t\n      | (_, _) ->\n          let (x, d) = min_binding t2 in\n          join t1 x d (remove_min_binding t2)\n\n    let concat_or_join t1 v d t2 =\n      match d with\n      | Some d -> join t1 v d t2\n      | None -> concat t1 t2\n\n    let rec split x = function\n        Empty ->\n          (Empty, None, Empty)\n      | Node(l, v, d, r, _) ->\n          let c = Ord.compare x v in\n          if c = 0 then (l, Some d, r)\n          else if c < 0 then\n            let (ll, pres, rl) = split x l in (ll, pres, join rl v d r)\n          else\n            let (lr, pres, rr) = split x r in (join l v d lr, pres, rr)\n\n    let rec merge f s1 s2 =\n      match (s1, s2) with\n        (Empty, Empty) -> Empty\n      | (Node (l1, v1, d1, r1, h1), _) when h1 >= height s2 ->\n          let (l2, d2, r2) = split v1 s2 in\n          concat_or_join (merge f l1 l2) v1 (f v1 (Some d1) d2) (merge f r1 r2)\n      | (_, Node (l2, v2, d2, r2, _)) ->\n          let (l1, d1, r1) = split v2 s1 in\n          concat_or_join (merge f l1 l2) v2 (f v2 d1 (Some d2)) (merge f r1 r2)\n      | _ ->\n          assert false\n\n    let rec union f s1 s2 =\n      match (s1, s2) with\n      | (Empty, s) | (s, Empty) -> s\n      | (Node (l1, v1, d1, r1, h1), Node (l2, v2, d2, r2, h2)) ->\n          if h1 >= h2 then\n            let (l2, d2, r2) = split v1 s2 in\n            let l = union f l1 l2 and r = union f r1 r2 in\n            match d2 with\n            | None -> join l v1 d1 r\n            | Some d2 -> concat_or_join l v1 (f v1 d1 d2) r\n          else\n            let (l1, d1, r1) = split v2 s1 in\n            let l = union f l1 l2 and r = union f r1 r2 in\n            match d1 with\n            | None -> join l v2 d2 r\n            | Some d1 -> concat_or_join l v2 (f v2 d1 d2) r\n\n    let rec filter p = function\n        Empty -> Empty\n      | Node(l, v, d, r, _) as t ->\n          (* call [p] in the expected left-to-right order *)\n          let l' = filter p l in\n          let pvd = p v d in\n          let r' = filter p r in\n          if pvd then if l==l' && r==r' then t else join l' v d r'\n          else concat l' r'\n\n    let rec partition p = function\n        Empty -> (Empty, Empty)\n      | Node(l, v, d, r, _) ->\n          (* call [p] in the expected left-to-right order *)\n          let (lt, lf) = partition p l in\n          let pvd = p v d in\n          let (rt, rf) = partition p r in\n          if pvd\n          then (join lt v d rt, concat lf rf)\n          else (concat lt rt, join lf v d rf)\n\n    type 'a enumeration = End | More of key * 'a * 'a t * 'a enumeration\n\n    let rec cons_enum m e =\n      match m with\n        Empty -> e\n      | Node(l, v, d, r, _) -> cons_enum l (More(v, d, r, e))\n\n    let compare cmp m1 m2 =\n      let rec compare_aux e1 e2 =\n          match (e1, e2) with\n          (End, End) -> 0\n        | (End, _)  -> -1\n        | (_, End) -> 1\n        | (More(v1, d1, r1, e1), More(v2, d2, r2, e2)) ->\n            let c = Ord.compare v1 v2 in\n            if c <> 0 then c else\n            let c = cmp d1 d2 in\n            if c <> 0 then c else\n            compare_aux (cons_enum r1 e1) (cons_enum r2 e2)\n      in compare_aux (cons_enum m1 End) (cons_enum m2 End)\n\n    let equal cmp m1 m2 =\n      let rec equal_aux e1 e2 =\n          match (e1, e2) with\n          (End, End) -> true\n        | (End, _)  -> false\n        | (_, End) -> false\n        | (More(v1, d1, r1, e1), More(v2, d2, r2, e2)) ->\n            Ord.compare v1 v2 = 0 && cmp d1 d2 &&\n            equal_aux (cons_enum r1 e1) (cons_enum r2 e2)\n      in equal_aux (cons_enum m1 End) (cons_enum m2 End)\n\n    let rec cardinal = function\n        Empty -> 0\n      | Node(l, _, _, r, _) -> cardinal l + 1 + cardinal r\n\n    let rec bindings_aux accu = function\n        Empty -> accu\n      | Node(l, v, d, r, _) -> bindings_aux ((v, d) :: bindings_aux accu r) l\n\n    let bindings s =\n      bindings_aux [] s\n\n    let choose = min_binding\n\nend\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Damien Doligez, projet Para, INRIA Rocquencourt            *)\n(*                                                                        *)\n(*   Copyright 1997 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* Internals of forcing lazy values. *)\n\nexception Undefined\n\nlet raise_undefined = Obj.repr (fun () -> raise Undefined)\n\n(* Assume [blk] is a block with tag lazy *)\nlet force_lazy_block (blk : 'arg lazy_t) =\n  let closure = (Obj.obj (Obj.field (Obj.repr blk) 0) : unit -> 'arg) in\n  Obj.set_field (Obj.repr blk) 0 raise_undefined;\n  try\n    let result = closure () in\n    (* do set_field BEFORE set_tag *)\n    Obj.set_field (Obj.repr blk) 0 (Obj.repr result);\n    Obj.set_tag (Obj.repr blk) Obj.forward_tag;\n    result\n  with e ->\n    Obj.set_field (Obj.repr blk) 0 (Obj.repr (fun () -> raise e));\n    raise e\n\n\n(* Assume [blk] is a block with tag lazy *)\nlet force_val_lazy_block (blk : 'arg lazy_t) =\n  let closure = (Obj.obj (Obj.field (Obj.repr blk) 0) : unit -> 'arg) in\n  Obj.set_field (Obj.repr blk) 0 raise_undefined;\n  let result = closure () in\n  (* do set_field BEFORE set_tag *)\n  Obj.set_field (Obj.repr blk) 0 (Obj.repr result);\n  Obj.set_tag (Obj.repr blk) (Obj.forward_tag);\n  result\n\n\n(* [force] is not used, since [Lazy.force] is declared as a primitive\n   whose code inlines the tag tests of its argument.  This function is\n   here for the sake of completeness, and for debugging purpose. *)\n\nlet force (lzv : 'arg lazy_t) =\n  let x = Obj.repr lzv in\n  let t = Obj.tag x in\n  if t = Obj.forward_tag then (Obj.obj (Obj.field x 0) : 'arg) else\n  if t <> Obj.lazy_tag then (Obj.obj x : 'arg)\n  else force_lazy_block lzv\n\n\nlet force_val (lzv : 'arg lazy_t) =\n  let x = Obj.repr lzv in\n  let t = Obj.tag x in\n  if t = Obj.forward_tag then (Obj.obj (Obj.field x 0) : 'arg) else\n  if t <> Obj.lazy_tag then (Obj.obj x : 'arg)\n  else force_val_lazy_block lzv\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Damien Doligez, projet Para, INRIA Rocquencourt            *)\n(*                                                                        *)\n(*   Copyright 1997 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* Module [Lazy]: deferred computations *)\n\n\n(*\n   WARNING: some purple magic is going on here.  Do not take this file\n   as an example of how to program in OCaml.\n*)\n\n\n(* We make use of two special tags provided by the runtime:\n   [lazy_tag] and [forward_tag].\n\n   A value of type ['a Lazy.t] can be one of three things:\n   1. A block of size 1 with tag [lazy_tag].  Its field is a closure of\n      type [unit -> 'a] that computes the value.\n   2. A block of size 1 with tag [forward_tag].  Its field is the value\n      of type ['a] that was computed.\n   3. Anything else except a float.  This has type ['a] and is the value\n      that was computed.\n   Exceptions are stored in format (1).\n   The GC will magically change things from (2) to (3) according to its\n   fancy.\n\n   We cannot use representation (3) for a [float Lazy.t] because\n   [caml_make_array] assumes that only a [float] value can have tag\n   [Double_tag].\n\n   We have to use the built-in type constructor [lazy_t] to\n   let the compiler implement the special typing and compilation\n   rules for the [lazy] keyword.\n*)\n\ntype 'a t = 'a lazy_t\n\nexception Undefined = CamlinternalLazy.Undefined\n\nexternal make_forward : 'a -> 'a lazy_t = \"caml_lazy_make_forward\"\n\nexternal force : 'a t -> 'a = \"%lazy_force\"\n\n(* let force = force *)\n\nlet force_val = CamlinternalLazy.force_val\n\nlet from_fun (f : unit -> 'arg) =\n  let x = Obj.new_block Obj.lazy_tag 1 in\n  Obj.set_field x 0 (Obj.repr f);\n  (Obj.obj x : 'arg t)\n\n\nlet from_val (v : 'arg) =\n  let t = Obj.tag (Obj.repr v) in\n  if t = Obj.forward_tag || t = Obj.lazy_tag || t = Obj.double_tag then begin\n    make_forward v\n  end else begin\n    (Obj.magic v : 'arg t)\n  end\n\n\nlet is_val (l : 'arg t) = Obj.tag (Obj.repr l) <> Obj.lazy_tag\n\nlet lazy_from_fun = from_fun\n\nlet lazy_from_val = from_val\n\nlet lazy_is_val = is_val\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*    Pierre Weis and Xavier Leroy, projet Cristal, INRIA Rocquencourt    *)\n(*                                                                        *)\n(*   Copyright 1999 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* Extensible buffers *)\n\ntype t =\n {mutable buffer : bytes;\n  mutable position : int;\n  mutable length : int;\n  initial_buffer : bytes}\n\nlet create n =\n let n = if n < 1 then 1 else n in\n let n = if n > Sys.max_string_length then Sys.max_string_length else n in\n let s = Bytes.create n in\n {buffer = s; position = 0; length = n; initial_buffer = s}\n\nlet contents b = Bytes.sub_string b.buffer 0 b.position\nlet to_bytes b = Bytes.sub b.buffer 0 b.position\n\nlet sub b ofs len =\n  if ofs < 0 || len < 0 || ofs > b.position - len\n  then invalid_arg \"Buffer.sub\"\n  else Bytes.sub_string b.buffer ofs len\n\n\nlet blit src srcoff dst dstoff len =\n  if len < 0 || srcoff < 0 || srcoff > src.position - len\n             || dstoff < 0 || dstoff > (Bytes.length dst) - len\n  then invalid_arg \"Buffer.blit\"\n  else\n    Bytes.unsafe_blit src.buffer srcoff dst dstoff len\n\n\nlet nth b ofs =\n  if ofs < 0 || ofs >= b.position then\n   invalid_arg \"Buffer.nth\"\n  else Bytes.unsafe_get b.buffer ofs\n\n\nlet length b = b.position\n\nlet clear b = b.position <- 0\n\nlet reset b =\n  b.position <- 0; b.buffer <- b.initial_buffer;\n  b.length <- Bytes.length b.buffer\n\nlet resize b more =\n  let len = b.length in\n  let new_len = ref len in\n  while b.position + more > !new_len do new_len := 2 * !new_len done;\n  if !new_len > Sys.max_string_length then begin\n    if b.position + more <= Sys.max_string_length\n    then new_len := Sys.max_string_length\n    else failwith \"Buffer.add: cannot grow buffer\"\n  end;\n  let new_buffer = Bytes.create !new_len in\n  (* PR#6148: let's keep using [blit] rather than [unsafe_blit] in\n     this tricky function that is slow anyway. *)\n  Bytes.blit b.buffer 0 new_buffer 0 b.position;\n  b.buffer <- new_buffer;\n  b.length <- !new_len\n\nlet add_char b c =\n  let pos = b.position in\n  if pos >= b.length then resize b 1;\n  Bytes.unsafe_set b.buffer pos c;\n  b.position <- pos + 1\n\nlet add_substring b s offset len =\n  if offset < 0 || len < 0 || offset > String.length s - len\n  then invalid_arg \"Buffer.add_substring/add_subbytes\";\n  let new_position = b.position + len in\n  if new_position > b.length then resize b len;\n  Bytes.blit_string s offset b.buffer b.position len;\n  b.position <- new_position\n\nlet add_subbytes b s offset len =\n  add_substring b (Bytes.unsafe_to_string s) offset len\n\nlet add_string b s =\n  let len = String.length s in\n  let new_position = b.position + len in\n  if new_position > b.length then resize b len;\n  Bytes.blit_string s 0 b.buffer b.position len;\n  b.position <- new_position\n\nlet add_bytes b s = add_string b (Bytes.unsafe_to_string s)\n\nlet add_buffer b bs =\n  add_subbytes b bs.buffer 0 bs.position\n\n(* read up to [len] bytes from [ic] into [b]. *)\nlet rec add_channel_rec b ic len =\n  if len > 0 then (\n    let n = input ic b.buffer b.position len in\n    b.position <- b.position + n;\n    if n = 0 then raise End_of_file\n    else add_channel_rec b ic (len-n)   (* n <= len *)\n  )\n\nlet add_channel b ic len =\n  if len < 0 || len > Sys.max_string_length then   (* PR#5004 *)\n    invalid_arg \"Buffer.add_channel\";\n  if b.position + len > b.length then resize b len;\n  add_channel_rec b ic len\n\nlet output_buffer oc b =\n  output oc b.buffer 0 b.position\n\nlet closing = function\n  | '(' -> ')'\n  | '{' -> '}'\n  | _ -> assert false\n\n(* opening and closing: open and close characters, typically ( and )\n   k: balance of opening and closing chars\n   s: the string where we are searching\n   start: the index where we start the search. *)\nlet advance_to_closing opening closing k s start =\n  let rec advance k i lim =\n    if i >= lim then raise Not_found else\n    if s.[i] = opening then advance (k + 1) (i + 1) lim else\n    if s.[i] = closing then\n      if k = 0 then i else advance (k - 1) (i + 1) lim\n    else advance k (i + 1) lim in\n  advance k start (String.length s)\n\nlet advance_to_non_alpha s start =\n  let rec advance i lim =\n    if i >= lim then lim else\n    match s.[i] with\n    | 'a' .. 'z' | 'A' .. 'Z' | '0' .. '9' | '_' -> advance (i + 1) lim\n    | _ -> i in\n  advance start (String.length s)\n\n(* We are just at the beginning of an ident in s, starting at start. *)\nlet find_ident s start lim =\n  if start >= lim then raise Not_found else\n  match s.[start] with\n  (* Parenthesized ident ? *)\n  | '(' | '{' as c ->\n     let new_start = start + 1 in\n     let stop = advance_to_closing c (closing c) 0 s new_start in\n     String.sub s new_start (stop - start - 1), stop + 1\n  (* Regular ident *)\n  | _ ->\n     let stop = advance_to_non_alpha s (start + 1) in\n     String.sub s start (stop - start), stop\n\n(* Substitute $ident, $(ident), or ${ident} in s,\n    according to the function mapping f. *)\nlet add_substitute b f s =\n  let lim = String.length s in\n  let rec subst previous i =\n    if i < lim then begin\n      match s.[i] with\n      | '$' as current when previous = '\\\\' ->\n         add_char b current;\n         subst ' ' (i + 1)\n      | '$' ->\n         let j = i + 1 in\n         let ident, next_i = find_ident s j lim in\n         add_string b (f ident);\n         subst ' ' next_i\n      | current when previous == '\\\\' ->\n         add_char b '\\\\';\n         add_char b current;\n         subst ' ' (i + 1)\n      | '\\\\' as current ->\n         subst current (i + 1)\n      | current ->\n         add_char b current;\n         subst current (i + 1)\n    end else\n    if previous = '\\\\' then add_char b previous in\n  subst ' ' 0\n","#2 \"stdlib/sys.mlp\"\n(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Xavier Leroy, projet Cristal, INRIA Rocquencourt           *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* WARNING: sys.ml is generated from sys.mlp.  DO NOT EDIT sys.ml or\n   your changes will be lost.\n*)\n\ntype backend_type =\n  | Native\n  | Bytecode\n  | Other of string\n(* System interface *)\n\nexternal get_config: unit -> string * int * bool = \"caml_sys_get_config\"\nexternal get_argv: unit -> string * string array = \"caml_sys_get_argv\"\nexternal big_endian : unit -> bool = \"%big_endian\"\nexternal word_size : unit -> int = \"%word_size\"\nexternal int_size : unit -> int = \"%int_size\"\nexternal max_wosize : unit -> int = \"%max_wosize\"\nexternal unix : unit -> bool = \"%ostype_unix\"\nexternal win32 : unit -> bool = \"%ostype_win32\"\nexternal cygwin : unit -> bool = \"%ostype_cygwin\"\nexternal get_backend_type : unit -> backend_type = \"%backend_type\"\n\nlet (executable_name, argv) = get_argv()\nlet (os_type, _, _) = get_config()\nlet backend_type = get_backend_type ()\nlet big_endian = big_endian ()\nlet word_size = word_size ()\nlet int_size = int_size ()\nlet unix = unix ()\nlet win32 = win32 ()\nlet cygwin = cygwin ()\nlet max_array_length = max_wosize ()\nlet max_string_length = word_size / 8 * max_array_length - 1\nexternal runtime_variant : unit -> string = \"caml_runtime_variant\"\nexternal runtime_parameters : unit -> string = \"caml_runtime_parameters\"\n\nexternal file_exists: string -> bool = \"caml_sys_file_exists\"\nexternal is_directory : string -> bool = \"caml_sys_is_directory\"\nexternal remove: string -> unit = \"caml_sys_remove\"\nexternal rename : string -> string -> unit = \"caml_sys_rename\"\nexternal getenv: string -> string = \"caml_sys_getenv\"\nexternal command: string -> int = \"caml_sys_system_command\"\nexternal time: unit -> (float [@unboxed]) =\n  \"caml_sys_time\" \"caml_sys_time_unboxed\" [@@noalloc]\nexternal chdir: string -> unit = \"caml_sys_chdir\"\nexternal getcwd: unit -> string = \"caml_sys_getcwd\"\nexternal readdir : string -> string array = \"caml_sys_read_directory\"\n\nlet interactive = ref false\n\ntype signal_behavior =\n    Signal_default\n  | Signal_ignore\n  | Signal_handle of (int -> unit)\n\nexternal signal : int -> signal_behavior -> signal_behavior\n                = \"caml_install_signal_handler\"\n\nlet set_signal sig_num sig_beh = ignore(signal sig_num sig_beh)\n\nlet sigabrt = -1\nlet sigalrm = -2\nlet sigfpe = -3\nlet sighup = -4\nlet sigill = -5\nlet sigint = -6\nlet sigkill = -7\nlet sigpipe = -8\nlet sigquit = -9\nlet sigsegv = -10\nlet sigterm = -11\nlet sigusr1 = -12\nlet sigusr2 = -13\nlet sigchld = -14\nlet sigcont = -15\nlet sigstop = -16\nlet sigtstp = -17\nlet sigttin = -18\nlet sigttou = -19\nlet sigvtalrm = -20\nlet sigprof = -21\nlet sigbus = -22\nlet sigpoll = -23\nlet sigsys = -24\nlet sigtrap = -25\nlet sigurg = -26\nlet sigxcpu = -27\nlet sigxfsz = -28\n\nexception Break\n\nlet catch_break on =\n  if on then\n    set_signal sigint (Signal_handle(fun _ -> raise Break))\n  else\n    set_signal sigint Signal_default\n\n\nexternal enable_runtime_warnings: bool -> unit =\n  \"caml_ml_enable_runtime_warnings\"\nexternal runtime_warnings_enabled: unit -> bool =\n  \"caml_ml_runtime_warnings_enabled\"\n\n(* The version string is found in file ../VERSION *)\n\nlet ocaml_version = \"4.04.0\"\n\n(* Optimization *)\n\nexternal opaque_identity : 'a -> 'a = \"%opaque\"\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*                          Benoit Vaugon, ENSTA                          *)\n(*                                                                        *)\n(*   Copyright 2014 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\nopen CamlinternalFormatBasics\n\n(******************************************************************************)\n           (* Tools to manipulate scanning set of chars (see %[...]) *)\n\ntype mutable_char_set = bytes\n\n(* Create a fresh, empty, mutable char set. *)\nlet create_char_set () = Bytes.make 32 '\\000'\n\n(* Add a char in a mutable char set. *)\nlet add_in_char_set char_set c =\n  let ind = int_of_char c in\n  let str_ind = ind lsr 3 and mask = 1 lsl (ind land 0b111) in\n  Bytes.set char_set str_ind\n    (char_of_int (int_of_char (Bytes.get char_set str_ind) lor mask))\n\nlet freeze_char_set char_set =\n  Bytes.to_string char_set\n\n(* Compute the complement of a char set. *)\nlet rev_char_set char_set =\n  let char_set' = create_char_set () in\n  for i = 0 to 31 do\n    Bytes.set char_set' i\n      (char_of_int (int_of_char (String.get char_set i) lxor 0xFF));\n  done;\n  Bytes.unsafe_to_string char_set'\n\n(* Return true if a `c' is in `char_set'. *)\nlet is_in_char_set char_set c =\n  let ind = int_of_char c in\n  let str_ind = ind lsr 3 and mask = 1 lsl (ind land 0b111) in\n  (int_of_char (String.get char_set str_ind) land mask) <> 0\n\n\n(******************************************************************************)\n                         (* Ignored param conversion *)\n\n(* GADT used to abstract an existential type parameter. *)\n(* See param_format_of_ignored_format. *)\ntype ('a, 'b, 'c, 'd, 'e, 'f) param_format_ebb = Param_format_EBB :\n    ('x -> 'a, 'b, 'c, 'd, 'e, 'f) fmt ->\n    ('a, 'b, 'c, 'd, 'e, 'f) param_format_ebb\n\n(* Compute a padding associated to a pad_option (see \"%_42d\"). *)\nlet pad_of_pad_opt pad_opt = match pad_opt with\n  | None -> No_padding\n  | Some width -> Lit_padding (Right, width)\n\n(* Compute a precision associated to a prec_option (see \"%_.42f\"). *)\nlet prec_of_prec_opt prec_opt = match prec_opt with\n  | None -> No_precision\n  | Some ndec -> Lit_precision ndec\n\n(* Turn an ignored param into its equivalent not-ignored format node. *)\n(* Used for format pretty-printing and Scanf. *)\nlet param_format_of_ignored_format : type a b c d e f x y .\n    (a, b, c, d, y, x) ignored -> (x, b, c, y, e, f) fmt ->\n      (a, b, c, d, e, f) param_format_ebb =\nfun ign fmt -> match ign with\n  | Ignored_char ->\n    Param_format_EBB (Char fmt)\n  | Ignored_caml_char ->\n    Param_format_EBB (Caml_char fmt)\n  | Ignored_string pad_opt ->\n    Param_format_EBB (String (pad_of_pad_opt pad_opt, fmt))\n  | Ignored_caml_string pad_opt ->\n    Param_format_EBB (Caml_string (pad_of_pad_opt pad_opt, fmt))\n  | Ignored_int (iconv, pad_opt) ->\n    Param_format_EBB (Int (iconv, pad_of_pad_opt pad_opt, No_precision, fmt))\n  | Ignored_int32 (iconv, pad_opt) ->\n    Param_format_EBB\n      (Int32 (iconv, pad_of_pad_opt pad_opt, No_precision, fmt))\n  | Ignored_nativeint (iconv, pad_opt) ->\n    Param_format_EBB\n      (Nativeint (iconv, pad_of_pad_opt pad_opt, No_precision, fmt))\n  | Ignored_int64 (iconv, pad_opt) ->\n    Param_format_EBB\n      (Int64 (iconv, pad_of_pad_opt pad_opt, No_precision, fmt))\n  | Ignored_float (pad_opt, prec_opt) ->\n    Param_format_EBB\n      (Float (Float_f, pad_of_pad_opt pad_opt, prec_of_prec_opt prec_opt, fmt))\n  | Ignored_bool ->\n    Param_format_EBB (Bool fmt)\n  | Ignored_format_arg (pad_opt, fmtty) ->\n    Param_format_EBB (Format_arg (pad_opt, fmtty, fmt))\n  | Ignored_format_subst (pad_opt, fmtty) ->\n    Param_format_EBB\n      (Format_subst (pad_opt, fmtty, fmt))\n  | Ignored_reader ->\n    Param_format_EBB (Reader fmt)\n  | Ignored_scan_char_set (width_opt, char_set) ->\n    Param_format_EBB (Scan_char_set (width_opt, char_set, fmt))\n  | Ignored_scan_get_counter counter ->\n    Param_format_EBB (Scan_get_counter (counter, fmt))\n  | Ignored_scan_next_char ->\n    Param_format_EBB (Scan_next_char fmt)\n\n\n(******************************************************************************)\n                                 (* Types *)\n\ntype ('b, 'c) acc_formatting_gen =\n  | Acc_open_tag of ('b, 'c) acc\n  | Acc_open_box of ('b, 'c) acc\n\n(* Reversed list of printing atoms. *)\n(* Used to accumulate printf arguments. *)\nand ('b, 'c) acc =\n  | Acc_formatting_lit of ('b, 'c) acc * formatting_lit\n      (* Special fmtting (box) *)\n  | Acc_formatting_gen of ('b, 'c) acc * ('b, 'c) acc_formatting_gen\n      (* Special fmtting (box) *)\n  | Acc_string_literal of ('b, 'c) acc * string     (* Literal string *)\n  | Acc_char_literal   of ('b, 'c) acc * char       (* Literal char *)\n  | Acc_data_string    of ('b, 'c) acc * string     (* Generated string *)\n  | Acc_data_char      of ('b, 'c) acc * char       (* Generated char *)\n  | Acc_delay          of ('b, 'c) acc * ('b -> 'c)\n                                                (* Delayed printing (%a, %t) *)\n  | Acc_flush          of ('b, 'c) acc              (* Flush *)\n  | Acc_invalid_arg    of ('b, 'c) acc * string\n      (* Raise Invalid_argument msg *)\n  | End_of_acc\n\n(* List of heterogeneous values. *)\n(* Used to accumulate scanf callback arguments. *)\ntype ('a, 'b) heter_list =\n  | Cons : 'c * ('a, 'b) heter_list -> ('c -> 'a, 'b) heter_list\n  | Nil : ('b, 'b) heter_list\n\n(* Existential Black Boxes. *)\n(* Used to abstract some existential type parameters. *)\n\n(* GADT type associating a padding and an fmtty. *)\n(* See the type_padding function. *)\ntype ('a, 'b, 'c, 'd, 'e, 'f) padding_fmtty_ebb = Padding_fmtty_EBB :\n     ('x, 'y) padding * ('y, 'b, 'c, 'd, 'e, 'f) fmtty ->\n     ('x, 'b, 'c, 'd, 'e, 'f) padding_fmtty_ebb\n\n(* GADT type associating a padding, a precision and an fmtty. *)\n(* See the type_padprec function. *)\ntype ('a, 'b, 'c, 'd, 'e, 'f) padprec_fmtty_ebb = Padprec_fmtty_EBB :\n     ('x, 'y) padding * ('y, 'z) precision * ('z, 'b, 'c, 'd, 'e, 'f) fmtty ->\n     ('x, 'b, 'c, 'd, 'e, 'f) padprec_fmtty_ebb\n\n(* GADT type associating a padding and an fmt. *)\n(* See make_padding_fmt_ebb and parse_format functions. *)\ntype ('a, 'b, 'c, 'e, 'f) padding_fmt_ebb = Padding_fmt_EBB :\n     (_, 'x -> 'a) padding *\n     ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n     ('x, 'b, 'c, 'e, 'f) padding_fmt_ebb\n\n(* GADT type associating a precision and an fmt. *)\n(* See make_precision_fmt_ebb and parse_format functions. *)\ntype ('a, 'b, 'c, 'e, 'f) precision_fmt_ebb = Precision_fmt_EBB :\n     (_, 'x -> 'a) precision *\n     ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n     ('x, 'b, 'c, 'e, 'f) precision_fmt_ebb\n\n(* GADT type associating a padding, a precision and an fmt. *)\n(* See make_padprec_fmt_ebb and parse_format functions. *)\ntype ('p, 'b, 'c, 'e, 'f) padprec_fmt_ebb = Padprec_fmt_EBB :\n     ('x, 'y) padding * ('y, 'p -> 'a) precision *\n     ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n     ('p, 'b, 'c, 'e, 'f) padprec_fmt_ebb\n\n(* Abstract the 'a and 'd parameters of an fmt. *)\n(* Output type of the format parsing function. *)\ntype ('b, 'c, 'e, 'f) fmt_ebb = Fmt_EBB :\n     ('a, 'b, 'c, 'd, 'e, 'f) fmt ->\n     ('b, 'c, 'e, 'f) fmt_ebb\n\n(* GADT type associating an fmtty and an fmt. *)\n(* See the type_format_gen function. *)\ntype ('a, 'b, 'c, 'd, 'e, 'f) fmt_fmtty_ebb = Fmt_fmtty_EBB :\n     ('a, 'b, 'c, 'd, 'y, 'x) fmt *\n     ('x, 'b, 'c, 'y, 'e, 'f) fmtty ->\n     ('a, 'b, 'c, 'd, 'e, 'f) fmt_fmtty_ebb\n\n(* GADT type associating an fmtty and an fmt. *)\n(* See the type_ignored_format_substitution function. *)\ntype ('a, 'b, 'c, 'd, 'e, 'f) fmtty_fmt_ebb = Fmtty_fmt_EBB :\n     ('a, 'b, 'c, 'd, 'y, 'x) fmtty *\n     ('x, 'b, 'c, 'y, 'e, 'f) fmt_fmtty_ebb ->\n     ('a, 'b, 'c, 'd, 'e, 'f) fmtty_fmt_ebb\n\n(* Abstract all fmtty type parameters. *)\n(* Used to compare format types. *)\ntype fmtty_ebb = Fmtty_EBB : ('a, 'b, 'c, 'd, 'e, 'f) fmtty -> fmtty_ebb\n\n(* Abstract all padding type parameters. *)\n(* Used to compare paddings. *)\ntype padding_ebb = Padding_EBB : ('a, 'b) padding -> padding_ebb\n\n(* Abstract all precision type parameters. *)\n(* Used to compare precisions. *)\ntype precision_ebb = Precision_EBB : ('a, 'b) precision -> precision_ebb\n\n(******************************************************************************)\n                               (* Constants *)\n\n(* Default precision for float printing. *)\nlet default_float_precision = -6\n  (* For %h and %H formats, a negative precision means \"as many digits as\n     necessary\".  For the other FP formats, we take the absolute value\n     of the precision, hence 6 digits by default. *)\n\n(******************************************************************************)\n                               (* Externals *)\n\nexternal format_float: string -> float -> string\n  = \"caml_format_float\"\nexternal format_int: string -> int -> string\n  = \"caml_format_int\"\nexternal format_int32: string -> int32 -> string\n  = \"caml_int32_format\"\nexternal format_nativeint: string -> nativeint -> string\n  = \"caml_nativeint_format\"\nexternal format_int64: string -> int64 -> string\n  = \"caml_int64_format\"\nexternal hexstring_of_float: float -> int -> char -> string\n  = \"caml_hexstring_of_float\"\n\n(******************************************************************************)\n                     (* Tools to pretty-print formats *)\n\n(* Type of extensible character buffers. *)\ntype buffer = {\n  mutable ind : int;\n  mutable bytes : bytes;\n}\n\n(* Create a fresh buffer. *)\nlet buffer_create init_size = { ind = 0; bytes = Bytes.create init_size }\n\n(* Check size of the buffer and grow it if needed. *)\nlet buffer_check_size buf overhead =\n  let len = Bytes.length buf.bytes in\n  let min_len = buf.ind + overhead in\n  if min_len > len then (\n    let new_len = max (len * 2) min_len in\n    let new_str = Bytes.create new_len in\n    Bytes.blit buf.bytes 0 new_str 0 len;\n    buf.bytes <- new_str;\n  )\n\n(* Add the character `c' to the buffer `buf'. *)\nlet buffer_add_char buf c =\n  buffer_check_size buf 1;\n  Bytes.set buf.bytes buf.ind c;\n  buf.ind <- buf.ind + 1\n\n(* Add the string `s' to the buffer `buf'. *)\nlet buffer_add_string buf s =\n  let str_len = String.length s in\n  buffer_check_size buf str_len;\n  String.blit s 0 buf.bytes buf.ind str_len;\n  buf.ind <- buf.ind + str_len\n\n(* Get the content of the buffer. *)\nlet buffer_contents buf =\n  Bytes.sub_string buf.bytes 0 buf.ind\n\n(***)\n\n(* Convert an integer conversion to char. *)\nlet char_of_iconv iconv = match iconv with\n  | Int_d | Int_pd | Int_sd -> 'd' | Int_i | Int_pi | Int_si -> 'i'\n  | Int_x | Int_Cx -> 'x' | Int_X | Int_CX -> 'X' | Int_o | Int_Co -> 'o'\n  | Int_u -> 'u'\n\n(* Convert a float conversion to char. *)\nlet char_of_fconv fconv = match fconv with\n  | Float_f | Float_pf | Float_sf -> 'f' | Float_e | Float_pe | Float_se -> 'e'\n  | Float_E | Float_pE | Float_sE -> 'E' | Float_g | Float_pg | Float_sg -> 'g'\n  | Float_G | Float_pG | Float_sG -> 'G' | Float_F -> 'F'\n  | Float_h | Float_ph | Float_sh -> 'h' | Float_H | Float_pH | Float_sH -> 'H'\n\n\n(* Convert a scanning counter to char. *)\nlet char_of_counter counter = match counter with\n  | Line_counter  -> 'l'\n  | Char_counter  -> 'n'\n  | Token_counter -> 'N'\n\n(***)\n\n(* Print a char_set in a buffer with the OCaml format lexical convention. *)\nlet bprint_char_set buf char_set =\n  let rec print_start set =\n    let is_alone c =\n      let before, after = Char.(chr (code c - 1), chr (code c + 1)) in\n      is_in_char_set set c\n      && not (is_in_char_set set before && is_in_char_set set after) in\n    if is_alone ']' then buffer_add_char buf ']';\n    print_out set 1;\n    if is_alone '-' then buffer_add_char buf '-';\n  and print_out set i =\n    if i < 256 then\n      if is_in_char_set set (char_of_int i) then print_first set i\n      else print_out set (i + 1)\n  and print_first set i =\n    match char_of_int i with\n    | '\\255' -> print_char buf 255;\n    | ']' | '-' -> print_out set (i + 1);\n    | _ -> print_second set (i + 1);\n  and print_second set i =\n    if is_in_char_set set (char_of_int i) then\n      match char_of_int i with\n      | '\\255' ->\n        print_char buf 254;\n        print_char buf 255;\n      | ']' | '-' when not (is_in_char_set set (char_of_int (i + 1))) ->\n        print_char buf (i - 1);\n        print_out set (i + 1);\n      | _ when not (is_in_char_set set (char_of_int (i + 1))) ->\n        print_char buf (i - 1);\n        print_char buf i;\n        print_out set (i + 2);\n      | _ ->\n        print_in set (i - 1) (i + 2);\n    else (\n      print_char buf (i - 1);\n      print_out set (i + 1);\n    )\n  and print_in set i j =\n    if j = 256 || not (is_in_char_set set (char_of_int j)) then (\n      print_char buf i;\n      print_char buf (int_of_char '-');\n      print_char buf (j - 1);\n      if j < 256 then print_out set (j + 1);\n    ) else\n      print_in set i (j + 1);\n  and print_char buf i = match char_of_int i with\n    | '%' -> buffer_add_char buf '%'; buffer_add_char buf '%';\n    | '@' -> buffer_add_char buf '%'; buffer_add_char buf '@';\n    | c   -> buffer_add_char buf c;\n  in\n  buffer_add_char buf '[';\n  print_start (\n    if is_in_char_set char_set '\\000'\n    then ( buffer_add_char buf '^'; rev_char_set char_set )\n    else char_set\n  );\n  buffer_add_char buf ']'\n\n(***)\n\n(* Print a padty in a buffer with the format-like syntax. *)\nlet bprint_padty buf padty = match padty with\n  | Left  -> buffer_add_char buf '-'\n  | Right -> ()\n  | Zeros -> buffer_add_char buf '0'\n\n(* Print the '_' of an ignored flag if needed. *)\nlet bprint_ignored_flag buf ign_flag =\n  if ign_flag then buffer_add_char buf '_'\n\n(***)\n\nlet bprint_pad_opt buf pad_opt = match pad_opt with\n  | None -> ()\n  | Some width -> buffer_add_string buf (string_of_int width)\n\n(***)\n\n(* Print padding in a buffer with the format-like syntax. *)\nlet bprint_padding : type a b . buffer -> (a, b) padding -> unit =\nfun buf pad -> match pad with\n  | No_padding -> ()\n  | Lit_padding (padty, n) ->\n    bprint_padty buf padty;\n    buffer_add_string buf (string_of_int n);\n  | Arg_padding padty ->\n    bprint_padty buf padty;\n    buffer_add_char buf '*'\n\n(* Print precision in a buffer with the format-like syntax. *)\nlet bprint_precision : type a b . buffer -> (a, b) precision -> unit =\n  fun buf prec -> match prec with\n  | No_precision -> ()\n  | Lit_precision n ->\n    buffer_add_char buf '.';\n    buffer_add_string buf (string_of_int n);\n  | Arg_precision ->\n    buffer_add_string buf \".*\"\n\n(***)\n\n(* Print the optionnal '+', ' ' or '#' associated to an int conversion. *)\nlet bprint_iconv_flag buf iconv = match iconv with\n  | Int_pd | Int_pi -> buffer_add_char buf '+'\n  | Int_sd | Int_si -> buffer_add_char buf ' '\n  | Int_Cx | Int_CX | Int_Co -> buffer_add_char buf '#'\n  | Int_d | Int_i | Int_x | Int_X | Int_o | Int_u -> ()\n\n(* Print an complete int format in a buffer (ex: \"%3.*d\"). *)\nlet bprint_int_fmt buf ign_flag iconv pad prec =\n  buffer_add_char buf '%';\n  bprint_ignored_flag buf ign_flag;\n  bprint_iconv_flag buf iconv;\n  bprint_padding buf pad;\n  bprint_precision buf prec;\n  buffer_add_char buf (char_of_iconv iconv)\n\n(* Print a complete int32, nativeint or int64 format in a buffer. *)\nlet bprint_altint_fmt buf ign_flag iconv pad prec c =\n  buffer_add_char buf '%';\n  bprint_ignored_flag buf ign_flag;\n  bprint_iconv_flag buf iconv;\n  bprint_padding buf pad;\n  bprint_precision buf prec;\n  buffer_add_char buf c;\n  buffer_add_char buf (char_of_iconv iconv)\n\n(***)\n\n(* Print the optionnal '+' associated to a float conversion. *)\nlet bprint_fconv_flag buf fconv = match fconv with\n  | Float_pf | Float_pe | Float_pE\n  | Float_pg | Float_pG | Float_ph | Float_pH ->\n    buffer_add_char buf '+'\n  | Float_sf | Float_se | Float_sE\n  | Float_sg | Float_sG | Float_sh | Float_sH ->\n    buffer_add_char buf ' '\n  | Float_f | Float_e | Float_E\n  | Float_g | Float_G | Float_F | Float_h | Float_H ->\n    ()\n\n(* Print a complete float format in a buffer (ex: \"%+*.3f\"). *)\nlet bprint_float_fmt buf ign_flag fconv pad prec =\n  buffer_add_char buf '%';\n  bprint_ignored_flag buf ign_flag;\n  bprint_fconv_flag buf fconv;\n  bprint_padding buf pad;\n  bprint_precision buf prec;\n  buffer_add_char buf (char_of_fconv fconv)\n\n(* Compute the literal string representation of a formatting_lit. *)\n(* Also used by Printf and Scanf where formatting is not interpreted. *)\nlet string_of_formatting_lit formatting_lit = match formatting_lit with\n  | Close_box            -> \"@]\"\n  | Close_tag            -> \"@}\"\n  | Break (str, _, _)    -> str\n  | FFlush               -> \"@?\"\n  | Force_newline        -> \"@\\n\"\n  | Flush_newline        -> \"@.\"\n  | Magic_size (str, _)  -> str\n  | Escaped_at           -> \"@@\"\n  | Escaped_percent      -> \"@%\"\n  | Scan_indic c -> \"@\" ^ (String.make 1 c)\n\n(* Compute the literal string representation of a formatting. *)\n(* Also used by Printf and Scanf where formatting is not interpreted. *)\nlet string_of_formatting_gen : type a b c d e f .\n    (a, b, c, d, e, f) formatting_gen -> string =\n  fun formatting_gen -> match formatting_gen with\n  | Open_tag (Format (_, str)) -> str\n  | Open_box (Format (_, str)) -> str\n\n(***)\n\n(* Print a literal char in a buffer, escape '%' by \"%%\". *)\nlet bprint_char_literal buf chr = match chr with\n  | '%' -> buffer_add_string buf \"%%\"\n  | _ -> buffer_add_char buf chr\n\n(* Print a literal string in a buffer, escape all '%' by \"%%\". *)\nlet bprint_string_literal buf str =\n  for i = 0 to String.length str - 1 do\n    bprint_char_literal buf str.[i]\n  done\n\n(******************************************************************************)\n                          (* Format pretty-printing *)\n\n(* Print a complete format type (an fmtty) in a buffer. *)\nlet rec bprint_fmtty : type a b c d e f g h i j k l .\n    buffer -> (a, b, c, d, e, f, g, h, i, j, k, l) fmtty_rel -> unit =\nfun buf fmtty -> match fmtty with\n  | Char_ty rest      -> buffer_add_string buf \"%c\";  bprint_fmtty buf rest;\n  | String_ty rest    -> buffer_add_string buf \"%s\";  bprint_fmtty buf rest;\n  | Int_ty rest       -> buffer_add_string buf \"%i\";  bprint_fmtty buf rest;\n  | Int32_ty rest     -> buffer_add_string buf \"%li\"; bprint_fmtty buf rest;\n  | Nativeint_ty rest -> buffer_add_string buf \"%ni\"; bprint_fmtty buf rest;\n  | Int64_ty rest     -> buffer_add_string buf \"%Li\"; bprint_fmtty buf rest;\n  | Float_ty rest     -> buffer_add_string buf \"%f\";  bprint_fmtty buf rest;\n  | Bool_ty rest      -> buffer_add_string buf \"%B\";  bprint_fmtty buf rest;\n  | Alpha_ty rest     -> buffer_add_string buf \"%a\";  bprint_fmtty buf rest;\n  | Theta_ty rest     -> buffer_add_string buf \"%t\";  bprint_fmtty buf rest;\n  | Any_ty rest       -> buffer_add_string buf \"%?\";  bprint_fmtty buf rest;\n  | Reader_ty rest    -> buffer_add_string buf \"%r\";  bprint_fmtty buf rest;\n\n  | Ignored_reader_ty rest ->\n    buffer_add_string buf \"%_r\";\n    bprint_fmtty buf rest;\n\n  | Format_arg_ty (sub_fmtty, rest) ->\n    buffer_add_string buf \"%{\"; bprint_fmtty buf sub_fmtty;\n    buffer_add_string buf \"%}\"; bprint_fmtty buf rest;\n  | Format_subst_ty (sub_fmtty, _, rest) ->\n    buffer_add_string buf \"%(\"; bprint_fmtty buf sub_fmtty;\n    buffer_add_string buf \"%)\"; bprint_fmtty buf rest;\n\n  | End_of_fmtty -> ()\n\n(***)\n\nlet rec int_of_custom_arity : type a b c .\n  (a, b, c) custom_arity -> int =\n  function\n  | Custom_zero -> 0\n  | Custom_succ x -> 1 + int_of_custom_arity x\n\n(* Print a complete format in a buffer. *)\nlet bprint_fmt buf fmt =\n  let rec fmtiter : type a b c d e f .\n      (a, b, c, d, e, f) fmt -> bool -> unit =\n  fun fmt ign_flag -> match fmt with\n    | String (pad, rest) ->\n      buffer_add_char buf '%'; bprint_ignored_flag buf ign_flag;\n      bprint_padding buf pad; buffer_add_char buf 's';\n      fmtiter rest false;\n    | Caml_string (pad, rest) ->\n      buffer_add_char buf '%'; bprint_ignored_flag buf ign_flag;\n      bprint_padding buf pad; buffer_add_char buf 'S';\n      fmtiter rest false;\n\n    | Int (iconv, pad, prec, rest) ->\n      bprint_int_fmt buf ign_flag iconv pad prec;\n      fmtiter rest false;\n    | Int32 (iconv, pad, prec, rest) ->\n      bprint_altint_fmt buf ign_flag iconv pad prec 'l';\n      fmtiter rest false;\n    | Nativeint (iconv, pad, prec, rest) ->\n      bprint_altint_fmt buf ign_flag iconv pad prec 'n';\n      fmtiter rest false;\n    | Int64 (iconv, pad, prec, rest) ->\n      bprint_altint_fmt buf ign_flag iconv pad prec 'L';\n      fmtiter rest false;\n    | Float (fconv, pad, prec, rest) ->\n      bprint_float_fmt buf ign_flag fconv pad prec;\n      fmtiter rest false;\n\n    | Char rest ->\n      buffer_add_char buf '%'; bprint_ignored_flag buf ign_flag;\n      buffer_add_char buf 'c'; fmtiter rest false;\n    | Caml_char rest ->\n      buffer_add_char buf '%'; bprint_ignored_flag buf ign_flag;\n      buffer_add_char buf 'C'; fmtiter rest false;\n    | Bool rest ->\n      buffer_add_char buf '%'; bprint_ignored_flag buf ign_flag;\n      buffer_add_char buf 'B'; fmtiter rest false;\n    | Alpha rest ->\n      buffer_add_char buf '%'; bprint_ignored_flag buf ign_flag;\n      buffer_add_char buf 'a'; fmtiter rest false;\n    | Theta rest ->\n      buffer_add_char buf '%'; bprint_ignored_flag buf ign_flag;\n      buffer_add_char buf 't'; fmtiter rest false;\n    | Custom (arity, _, rest) ->\n      for _i = 1 to int_of_custom_arity arity do\n        buffer_add_char buf '%'; bprint_ignored_flag buf ign_flag;\n        buffer_add_char buf '?';\n      done;\n      fmtiter rest false;\n    | Reader rest ->\n      buffer_add_char buf '%'; bprint_ignored_flag buf ign_flag;\n      buffer_add_char buf 'r'; fmtiter rest false;\n    | Flush rest ->\n      buffer_add_string buf \"%!\";\n      fmtiter rest ign_flag;\n\n    | String_literal (str, rest) ->\n      bprint_string_literal buf str;\n      fmtiter rest ign_flag;\n    | Char_literal (chr, rest) ->\n      bprint_char_literal buf chr;\n      fmtiter rest ign_flag;\n\n    | Format_arg (pad_opt, fmtty, rest) ->\n      buffer_add_char buf '%'; bprint_ignored_flag buf ign_flag;\n      bprint_pad_opt buf pad_opt; buffer_add_char buf '{';\n      bprint_fmtty buf fmtty; buffer_add_char buf '%'; buffer_add_char buf '}';\n      fmtiter rest false;\n    | Format_subst (pad_opt, fmtty, rest) ->\n      buffer_add_char buf '%'; bprint_ignored_flag buf ign_flag;\n      bprint_pad_opt buf pad_opt; buffer_add_char buf '(';\n      bprint_fmtty buf fmtty; buffer_add_char buf '%'; buffer_add_char buf ')';\n      fmtiter rest false;\n\n    | Scan_char_set (width_opt, char_set, rest) ->\n      buffer_add_char buf '%'; bprint_ignored_flag buf ign_flag;\n      bprint_pad_opt buf width_opt; bprint_char_set buf char_set;\n      fmtiter rest false;\n    | Scan_get_counter (counter, rest) ->\n      buffer_add_char buf '%'; bprint_ignored_flag buf ign_flag;\n      buffer_add_char buf (char_of_counter counter);\n      fmtiter rest false;\n    | Scan_next_char rest ->\n      buffer_add_char buf '%'; bprint_ignored_flag buf ign_flag;\n      bprint_string_literal buf \"0c\"; fmtiter rest false;\n\n    | Ignored_param (ign, rest) ->\n      let Param_format_EBB fmt' = param_format_of_ignored_format ign rest in\n      fmtiter fmt' true;\n\n    | Formatting_lit (fmting_lit, rest) ->\n      bprint_string_literal buf (string_of_formatting_lit fmting_lit);\n      fmtiter rest ign_flag;\n    | Formatting_gen (fmting_gen, rest) ->\n      bprint_string_literal buf \"@{\";\n      bprint_string_literal buf (string_of_formatting_gen fmting_gen);\n      fmtiter rest ign_flag;\n\n    | End_of_format -> ()\n\n  in fmtiter fmt false\n\n(***)\n\n(* Convert a format to string. *)\nlet string_of_fmt fmt =\n  let buf = buffer_create 16 in\n  bprint_fmt buf fmt;\n  buffer_contents buf\n\n(******************************************************************************)\n                          (* Type extraction *)\n\ntype (_, _) eq = Refl : ('a, 'a) eq\n\n(* Invariant: this function is the identity on values.\n\n   In particular, if (ty1, ty2) have equal values, then\n   (trans (symm ty1) ty2) respects the 'trans' precondition. *)\nlet rec symm : type a1 b1 c1 d1 e1 f1 a2 b2 c2 d2 e2 f2 .\n   (a1, b1, c1, d1, e1, f1,\n    a2, b2, c2, d2, e2, f2) fmtty_rel\n-> (a2, b2, c2, d2, e2, f2,\n    a1, b1, c1, d1, e1, f1) fmtty_rel\n= function\n  | Char_ty rest -> Char_ty (symm rest)\n  | Int_ty rest -> Int_ty (symm rest)\n  | Int32_ty rest -> Int32_ty (symm rest)\n  | Int64_ty rest -> Int64_ty (symm rest)\n  | Nativeint_ty rest -> Nativeint_ty (symm rest)\n  | Float_ty rest -> Float_ty (symm rest)\n  | Bool_ty rest -> Bool_ty (symm rest)\n  | String_ty rest -> String_ty (symm rest)\n  | Theta_ty rest -> Theta_ty (symm rest)\n  | Alpha_ty rest -> Alpha_ty (symm rest)\n  | Any_ty rest -> Any_ty (symm rest)\n  | Reader_ty rest -> Reader_ty (symm rest)\n  | Ignored_reader_ty rest -> Ignored_reader_ty (symm rest)\n  | Format_arg_ty (ty, rest) ->\n    Format_arg_ty (ty, symm rest)\n  | Format_subst_ty (ty1, ty2, rest) ->\n    Format_subst_ty (ty2, ty1, symm rest)\n  | End_of_fmtty -> End_of_fmtty\n\nlet rec fmtty_rel_det : type a1 b c d1 e1 f1 a2 d2 e2 f2 .\n  (a1, b, c, d1, e1, f1,\n   a2, b, c, d2, e2, f2) fmtty_rel ->\n    ((f1, f2) eq -> (a1, a2) eq)\n  * ((a1, a2) eq -> (f1, f2) eq)\n  * ((e1, e2) eq -> (d1, d2) eq)\n  * ((d1, d2) eq -> (e1, e2) eq)\n= function\n  | End_of_fmtty ->\n    (fun Refl -> Refl),\n    (fun Refl -> Refl),\n    (fun Refl -> Refl),\n    (fun Refl -> Refl)\n  | Char_ty rest ->\n    let fa, af, ed, de = fmtty_rel_det rest in\n    (fun Refl -> let Refl = fa Refl in Refl),\n    (fun Refl -> let Refl = af Refl in Refl),\n    ed, de\n  | String_ty rest ->\n    let fa, af, ed, de = fmtty_rel_det rest in\n    (fun Refl -> let Refl = fa Refl in Refl),\n    (fun Refl -> let Refl = af Refl in Refl),\n    ed, de\n  | Int_ty rest ->\n    let fa, af, ed, de = fmtty_rel_det rest in\n    (fun Refl -> let Refl = fa Refl in Refl),\n    (fun Refl -> let Refl = af Refl in Refl),\n    ed, de\n  | Int32_ty rest ->\n    let fa, af, ed, de = fmtty_rel_det rest in\n    (fun Refl -> let Refl = fa Refl in Refl),\n    (fun Refl -> let Refl = af Refl in Refl),\n    ed, de\n  | Int64_ty rest ->\n    let fa, af, ed, de = fmtty_rel_det rest in\n    (fun Refl -> let Refl = fa Refl in Refl),\n    (fun Refl -> let Refl = af Refl in Refl),\n    ed, de\n  | Nativeint_ty rest ->\n    let fa, af, ed, de = fmtty_rel_det rest in\n    (fun Refl -> let Refl = fa Refl in Refl),\n    (fun Refl -> let Refl = af Refl in Refl),\n    ed, de\n  | Float_ty rest ->\n    let fa, af, ed, de = fmtty_rel_det rest in\n    (fun Refl -> let Refl = fa Refl in Refl),\n    (fun Refl -> let Refl = af Refl in Refl),\n    ed, de\n  | Bool_ty rest ->\n    let fa, af, ed, de = fmtty_rel_det rest in\n    (fun Refl -> let Refl = fa Refl in Refl),\n    (fun Refl -> let Refl = af Refl in Refl),\n    ed, de\n\n  | Theta_ty rest ->\n    let fa, af, ed, de = fmtty_rel_det rest in\n    (fun Refl -> let Refl = fa Refl in Refl),\n    (fun Refl -> let Refl = af Refl in Refl),\n    ed, de\n  | Alpha_ty rest ->\n    let fa, af, ed, de = fmtty_rel_det rest in\n    (fun Refl -> let Refl = fa Refl in Refl),\n    (fun Refl -> let Refl = af Refl in Refl),\n    ed, de\n  | Any_ty rest ->\n    let fa, af, ed, de = fmtty_rel_det rest in\n    (fun Refl -> let Refl = fa Refl in Refl),\n    (fun Refl -> let Refl = af Refl in Refl),\n    ed, de\n  | Reader_ty rest ->\n    let fa, af, ed, de = fmtty_rel_det rest in\n    (fun Refl -> let Refl = fa Refl in Refl),\n    (fun Refl -> let Refl = af Refl in Refl),\n    (fun Refl -> let Refl = ed Refl in Refl),\n    (fun Refl -> let Refl = de Refl in Refl)\n  | Ignored_reader_ty rest ->\n    let fa, af, ed, de = fmtty_rel_det rest in\n    (fun Refl -> let Refl = fa Refl in Refl),\n    (fun Refl -> let Refl = af Refl in Refl),\n    (fun Refl -> let Refl = ed Refl in Refl),\n    (fun Refl -> let Refl = de Refl in Refl)\n  | Format_arg_ty (_ty, rest) ->\n    let fa, af, ed, de = fmtty_rel_det rest in\n    (fun Refl -> let Refl = fa Refl in Refl),\n    (fun Refl -> let Refl = af Refl in Refl),\n    ed, de\n  | Format_subst_ty (ty1, ty2, rest) ->\n    let fa, af, ed, de = fmtty_rel_det rest in\n    let ty = trans (symm ty1) ty2 in\n    let ag, ga, dj, jd = fmtty_rel_det ty in\n    (fun Refl -> let Refl = fa Refl in let Refl = ag Refl in Refl),\n    (fun Refl -> let Refl = ga Refl in let Refl = af Refl in Refl),\n    (fun Refl -> let Refl = ed Refl in let Refl = dj Refl in Refl),\n    (fun Refl -> let Refl = jd Refl in let Refl = de Refl in Refl)\n\n(* Precondition: we assume that the two fmtty_rel arguments have equal\n   values (at possibly distinct types); this invariant comes from the way\n   fmtty_rel witnesses are produced by the type-checker\n\n   The code below uses (assert false) when this assumption is broken. The\n   code pattern is the following:\n\n     | Foo x, Foo y ->\n       (* case where indeed both values\n          start with constructor Foo *)\n     | Foo _, _\n     | _, Foo _ ->\n       (* different head constructors: broken precondition *)\n       assert false\n*)\nand trans : type\n  a1 b1 c1 d1 e1 f1\n  a2 b2 c2 d2 e2 f2\n  a3 b3 c3 d3 e3 f3\n.\n   (a1, b1, c1, d1, e1, f1,\n    a2, b2, c2, d2, e2, f2) fmtty_rel\n-> (a2, b2, c2, d2, e2, f2,\n    a3, b3, c3, d3, e3, f3) fmtty_rel\n-> (a1, b1, c1, d1, e1, f1,\n    a3, b3, c3, d3, e3, f3) fmtty_rel\n= fun ty1 ty2 -> match ty1, ty2 with\n  | Char_ty rest1, Char_ty rest2 -> Char_ty (trans rest1 rest2)\n  | String_ty rest1, String_ty rest2 -> String_ty (trans rest1 rest2)\n  | Bool_ty rest1, Bool_ty rest2 -> Bool_ty (trans rest1 rest2)\n  | Int_ty rest1, Int_ty rest2 -> Int_ty (trans rest1 rest2)\n  | Int32_ty rest1, Int32_ty rest2 -> Int32_ty (trans rest1 rest2)\n  | Int64_ty rest1, Int64_ty rest2 -> Int64_ty (trans rest1 rest2)\n  | Nativeint_ty rest1, Nativeint_ty rest2 -> Nativeint_ty (trans rest1 rest2)\n  | Float_ty rest1, Float_ty rest2 -> Float_ty (trans rest1 rest2)\n\n  | Alpha_ty rest1, Alpha_ty rest2 -> Alpha_ty (trans rest1 rest2)\n  | Alpha_ty _, _ -> assert false\n  | _, Alpha_ty _ -> assert false\n\n  | Theta_ty rest1, Theta_ty rest2 -> Theta_ty (trans rest1 rest2)\n  | Theta_ty _, _ -> assert false\n  | _, Theta_ty _ -> assert false\n\n  | Any_ty rest1, Any_ty rest2 -> Any_ty (trans rest1 rest2)\n  | Any_ty _, _ -> assert false\n  | _, Any_ty _ -> assert false\n\n  | Reader_ty rest1, Reader_ty rest2 -> Reader_ty (trans rest1 rest2)\n  | Reader_ty _, _ -> assert false\n  | _, Reader_ty _ -> assert false\n\n  | Ignored_reader_ty rest1, Ignored_reader_ty rest2 ->\n    Ignored_reader_ty (trans rest1 rest2)\n  | Ignored_reader_ty _, _ -> assert false\n  | _, Ignored_reader_ty _ -> assert false\n\n  | Format_arg_ty (ty1, rest1), Format_arg_ty (ty2, rest2) ->\n    Format_arg_ty (trans ty1 ty2, trans rest1 rest2)\n  | Format_arg_ty _, _ -> assert false\n  | _, Format_arg_ty _ -> assert false\n\n  | Format_subst_ty (ty11, ty12, rest1),\n    Format_subst_ty (ty21, ty22, rest2) ->\n    let ty = trans (symm ty12) ty21 in\n    let _, f2, _, f4 = fmtty_rel_det ty in\n    let Refl = f2 Refl in\n    let Refl = f4 Refl in\n    Format_subst_ty (ty11, ty22, trans rest1 rest2)\n  | Format_subst_ty _, _ -> assert false\n  | _, Format_subst_ty _ -> assert false\n\n  | End_of_fmtty, End_of_fmtty -> End_of_fmtty\n  | End_of_fmtty, _ -> assert false\n  | _, End_of_fmtty -> assert false\n\nlet rec fmtty_of_formatting_gen : type a b c d e f .\n  (a, b, c, d, e, f) formatting_gen ->\n    (a, b, c, d, e, f) fmtty =\nfun formatting_gen -> match formatting_gen with\n  | Open_tag (Format (fmt, _)) -> fmtty_of_fmt fmt\n  | Open_box (Format (fmt, _)) -> fmtty_of_fmt fmt\n\n(* Extract the type representation (an fmtty) of a format. *)\nand fmtty_of_fmt : type a b c d e f .\n  (a, b, c, d, e, f) fmt -> (a, b, c, d, e, f) fmtty =\nfun fmtty -> match fmtty with\n  | String (pad, rest) ->\n    fmtty_of_padding_fmtty pad (String_ty (fmtty_of_fmt rest))\n  | Caml_string (pad, rest) ->\n    fmtty_of_padding_fmtty pad (String_ty (fmtty_of_fmt rest))\n\n  | Int (_, pad, prec, rest) ->\n    let ty_rest = fmtty_of_fmt rest in\n    let prec_ty = fmtty_of_precision_fmtty prec (Int_ty ty_rest) in\n    fmtty_of_padding_fmtty pad prec_ty\n  | Int32 (_, pad, prec, rest) ->\n    let ty_rest = fmtty_of_fmt rest in\n    let prec_ty = fmtty_of_precision_fmtty prec (Int32_ty ty_rest) in\n    fmtty_of_padding_fmtty pad prec_ty\n  | Nativeint (_, pad, prec, rest) ->\n    let ty_rest = fmtty_of_fmt rest in\n    let prec_ty = fmtty_of_precision_fmtty prec (Nativeint_ty ty_rest) in\n    fmtty_of_padding_fmtty pad prec_ty\n  | Int64 (_, pad, prec, rest) ->\n    let ty_rest = fmtty_of_fmt rest in\n    let prec_ty = fmtty_of_precision_fmtty prec (Int64_ty ty_rest) in\n    fmtty_of_padding_fmtty pad prec_ty\n  | Float (_, pad, prec, rest) ->\n    let ty_rest = fmtty_of_fmt rest in\n    let prec_ty = fmtty_of_precision_fmtty prec (Float_ty ty_rest) in\n    fmtty_of_padding_fmtty pad prec_ty\n\n  | Char rest                  -> Char_ty (fmtty_of_fmt rest)\n  | Caml_char rest             -> Char_ty (fmtty_of_fmt rest)\n  | Bool rest                  -> Bool_ty (fmtty_of_fmt rest)\n  | Alpha rest                 -> Alpha_ty (fmtty_of_fmt rest)\n  | Theta rest                 -> Theta_ty (fmtty_of_fmt rest)\n  | Custom (arity, _, rest)    -> fmtty_of_custom arity (fmtty_of_fmt rest)\n  | Reader rest                -> Reader_ty (fmtty_of_fmt rest)\n\n  | Format_arg (_, ty, rest) ->\n    Format_arg_ty (ty, fmtty_of_fmt rest)\n  | Format_subst (_, ty, rest) ->\n    Format_subst_ty (ty, ty, fmtty_of_fmt rest)\n\n  | Flush rest                 -> fmtty_of_fmt rest\n  | String_literal (_, rest)   -> fmtty_of_fmt rest\n  | Char_literal (_, rest)     -> fmtty_of_fmt rest\n\n  | Scan_char_set (_, _, rest) -> String_ty (fmtty_of_fmt rest)\n  | Scan_get_counter (_, rest) -> Int_ty (fmtty_of_fmt rest)\n  | Scan_next_char rest        -> Char_ty (fmtty_of_fmt rest)\n  | Ignored_param (ign, rest)  -> fmtty_of_ignored_format ign rest\n  | Formatting_lit (_, rest)   -> fmtty_of_fmt rest\n  | Formatting_gen (fmting_gen, rest)  ->\n    concat_fmtty (fmtty_of_formatting_gen fmting_gen) (fmtty_of_fmt rest)\n\n  | End_of_format              -> End_of_fmtty\n\nand fmtty_of_custom : type x y a b c d e f .\n  (a, x, y) custom_arity -> (a, b, c, d, e, f) fmtty ->\n  (y, b, c, d, e, f) fmtty =\nfun arity fmtty -> match arity with\n  | Custom_zero -> fmtty\n  | Custom_succ arity -> Any_ty (fmtty_of_custom arity fmtty)\n\n(* Extract the fmtty of an ignored parameter followed by the rest of\n   the format. *)\nand fmtty_of_ignored_format : type x y a b c d e f .\n    (a, b, c, d, y, x) ignored ->\n    (x, b, c, y, e, f) fmt ->\n    (a, b, c, d, e, f) fmtty =\nfun ign fmt -> match ign with\n  | Ignored_char                    -> fmtty_of_fmt fmt\n  | Ignored_caml_char               -> fmtty_of_fmt fmt\n  | Ignored_string _                -> fmtty_of_fmt fmt\n  | Ignored_caml_string _           -> fmtty_of_fmt fmt\n  | Ignored_int (_, _)              -> fmtty_of_fmt fmt\n  | Ignored_int32 (_, _)            -> fmtty_of_fmt fmt\n  | Ignored_nativeint (_, _)        -> fmtty_of_fmt fmt\n  | Ignored_int64 (_, _)            -> fmtty_of_fmt fmt\n  | Ignored_float (_, _)            -> fmtty_of_fmt fmt\n  | Ignored_bool                    -> fmtty_of_fmt fmt\n  | Ignored_format_arg _            -> fmtty_of_fmt fmt\n  | Ignored_format_subst (_, fmtty) -> concat_fmtty fmtty (fmtty_of_fmt fmt)\n  | Ignored_reader                  -> Ignored_reader_ty (fmtty_of_fmt fmt)\n  | Ignored_scan_char_set _         -> fmtty_of_fmt fmt\n  | Ignored_scan_get_counter _      -> fmtty_of_fmt fmt\n  | Ignored_scan_next_char          -> fmtty_of_fmt fmt\n\n(* Add an Int_ty node if padding is taken as an extra argument (ex: \"%*s\"). *)\nand fmtty_of_padding_fmtty : type x a b c d e f .\n    (x, a) padding -> (a, b, c, d, e, f) fmtty -> (x, b, c, d, e, f) fmtty =\n  fun pad fmtty -> match pad with\n    | No_padding    -> fmtty\n    | Lit_padding _ -> fmtty\n    | Arg_padding _ -> Int_ty fmtty\n\n(* Add an Int_ty node if precision is taken as an extra argument (ex: \"%.*f\").*)\nand fmtty_of_precision_fmtty : type x a b c d e f .\n    (x, a) precision -> (a, b, c, d, e, f) fmtty -> (x, b, c, d, e, f) fmtty =\n  fun prec fmtty -> match prec with\n    | No_precision    -> fmtty\n    | Lit_precision _ -> fmtty\n    | Arg_precision   -> Int_ty fmtty\n\n(******************************************************************************)\n                            (* Format typing *)\n\n(* Exception raised when a format does not match a given format type. *)\nexception Type_mismatch\n\n(* Type a padding. *)\n(* Take an Int_ty from the fmtty if the integer should be kept as argument. *)\n(* Raise Type_mismatch in case of type mismatch. *)\nlet type_padding : type a b c d e f x y .\n    (x, y) padding -> (a, b, c, d, e, f) fmtty ->\n      (a, b, c, d, e, f) padding_fmtty_ebb =\nfun pad fmtty -> match pad, fmtty with\n  | No_padding, _ -> Padding_fmtty_EBB (No_padding, fmtty)\n  | Lit_padding (padty, w), _ -> Padding_fmtty_EBB (Lit_padding (padty,w),fmtty)\n  | Arg_padding padty, Int_ty rest -> Padding_fmtty_EBB (Arg_padding padty,rest)\n  | _ -> raise Type_mismatch\n\n(* Convert a (upadding, uprecision) to a (padding, precision). *)\n(* Take one or two Int_ty from the fmtty if needed. *)\n(* Raise Type_mismatch in case of type mismatch. *)\nlet type_padprec : type a b c d e f x y z .\n  (x, y) padding -> (y, z) precision -> (a, b, c, d, e, f) fmtty ->\n    (a, b, c, d, e, f) padprec_fmtty_ebb =\nfun pad prec fmtty -> match prec, type_padding pad fmtty with\n  | No_precision, Padding_fmtty_EBB (pad, rest) ->\n    Padprec_fmtty_EBB (pad, No_precision, rest)\n  | Lit_precision p, Padding_fmtty_EBB (pad, rest) ->\n    Padprec_fmtty_EBB (pad, Lit_precision p, rest)\n  | Arg_precision, Padding_fmtty_EBB (pad, Int_ty rest) ->\n    Padprec_fmtty_EBB (pad, Arg_precision, rest)\n  | _, Padding_fmtty_EBB (_, _) -> raise Type_mismatch\n\n(* Type a format according to an fmtty. *)\n(* If typing succeed, generate a copy of the format with the same\n    type parameters as the fmtty. *)\n(* Raise a Failure with an error message in case of type mismatch. *)\nlet rec type_format :\n  type a1 b1 c1 d1 e1 f1\n       a2 b2 c2 d2 e2 f2  .\n     (a1, b1, c1, d1, e1, f1) fmt\n  -> (a2, b2, c2, d2, e2, f2) fmtty\n  -> (a2, b2, c2, d2, e2, f2) fmt\n= fun fmt fmtty -> match type_format_gen fmt fmtty with\n  | Fmt_fmtty_EBB (fmt', End_of_fmtty) -> fmt'\n  | _ -> raise Type_mismatch\n\nand type_format_gen :\n  type a1 b1 c1 d1 e1 f1\n       a2 b2 c2 d2 e2 f2  .\n     (a1, b1, c1, d1, e1, f1) fmt\n  -> (a2, b2, c2, d2, e2, f2) fmtty\n  -> (a2, b2, c2, d2, e2, f2) fmt_fmtty_ebb\n= fun fmt fmtty -> match fmt, fmtty with\n  | Char fmt_rest, Char_ty fmtty_rest ->\n    let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n    Fmt_fmtty_EBB (Char fmt', fmtty')\n  | Caml_char fmt_rest, Char_ty fmtty_rest ->\n    let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n    Fmt_fmtty_EBB (Caml_char fmt', fmtty')\n  | String (pad, fmt_rest), _ -> (\n    match type_padding pad fmtty with\n    | Padding_fmtty_EBB (pad, String_ty fmtty_rest) ->\n      let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n      Fmt_fmtty_EBB (String (pad, fmt'), fmtty')\n    | Padding_fmtty_EBB (_, _) -> raise Type_mismatch\n  )\n  | Caml_string (pad, fmt_rest), _ -> (\n    match type_padding pad fmtty with\n    | Padding_fmtty_EBB (pad, String_ty fmtty_rest) ->\n      let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n      Fmt_fmtty_EBB (Caml_string (pad, fmt'), fmtty')\n    | Padding_fmtty_EBB (_, _) -> raise Type_mismatch\n  )\n  | Int (iconv, pad, prec, fmt_rest), _ -> (\n    match type_padprec pad prec fmtty with\n    | Padprec_fmtty_EBB (pad, prec, Int_ty fmtty_rest) ->\n      let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n      Fmt_fmtty_EBB (Int (iconv, pad, prec, fmt'), fmtty')\n    | Padprec_fmtty_EBB (_, _, _) -> raise Type_mismatch\n  )\n  | Int32 (iconv, pad, prec, fmt_rest), _ -> (\n    match type_padprec pad prec fmtty with\n    | Padprec_fmtty_EBB (pad, prec, Int32_ty fmtty_rest) ->\n      let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n      Fmt_fmtty_EBB (Int32 (iconv, pad, prec, fmt'), fmtty')\n    | Padprec_fmtty_EBB (_, _, _) -> raise Type_mismatch\n  )\n  | Nativeint (iconv, pad, prec, fmt_rest), _ -> (\n    match type_padprec pad prec fmtty with\n    | Padprec_fmtty_EBB (pad, prec, Nativeint_ty fmtty_rest) ->\n      let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n      Fmt_fmtty_EBB (Nativeint (iconv, pad, prec, fmt'), fmtty')\n    | Padprec_fmtty_EBB (_, _, _) -> raise Type_mismatch\n  )\n  | Int64 (iconv, pad, prec, fmt_rest), _ -> (\n    match type_padprec pad prec fmtty with\n    | Padprec_fmtty_EBB (pad, prec, Int64_ty fmtty_rest) ->\n      let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n      Fmt_fmtty_EBB (Int64 (iconv, pad, prec, fmt'), fmtty')\n    | Padprec_fmtty_EBB (_, _, _) -> raise Type_mismatch\n  )\n  | Float (fconv, pad, prec, fmt_rest), _ -> (\n    match type_padprec pad prec fmtty with\n    | Padprec_fmtty_EBB (pad, prec, Float_ty fmtty_rest) ->\n      let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n      Fmt_fmtty_EBB (Float (fconv, pad, prec, fmt'), fmtty')\n    | Padprec_fmtty_EBB (_, _, _) -> raise Type_mismatch\n  )\n  | Bool fmt_rest, Bool_ty fmtty_rest ->\n    let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n    Fmt_fmtty_EBB (Bool fmt', fmtty')\n  | Flush fmt_rest, fmtty_rest ->\n    let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n    Fmt_fmtty_EBB (Flush fmt', fmtty')\n\n  | String_literal (str, fmt_rest), fmtty_rest ->\n    let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n    Fmt_fmtty_EBB (String_literal (str, fmt'), fmtty')\n  | Char_literal (chr, fmt_rest), fmtty_rest ->\n    let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n    Fmt_fmtty_EBB (Char_literal (chr, fmt'), fmtty')\n\n  | Format_arg (pad_opt, sub_fmtty, fmt_rest),\n    Format_arg_ty (sub_fmtty', fmtty_rest) ->\n    if Fmtty_EBB sub_fmtty <> Fmtty_EBB sub_fmtty' then raise Type_mismatch;\n    let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n    Fmt_fmtty_EBB (Format_arg (pad_opt, sub_fmtty', fmt'), fmtty')\n  | Format_subst (pad_opt, sub_fmtty, fmt_rest),\n    Format_subst_ty (sub_fmtty1, _sub_fmtty2, fmtty_rest) ->\n    if Fmtty_EBB (erase_rel sub_fmtty) <> Fmtty_EBB (erase_rel sub_fmtty1) then\n      raise Type_mismatch;\n    let Fmt_fmtty_EBB (fmt', fmtty') =\n      type_format_gen fmt_rest (erase_rel fmtty_rest)\n    in\n    Fmt_fmtty_EBB (Format_subst (pad_opt, sub_fmtty1, fmt'), fmtty')\n  (* Printf and Format specific constructors: *)\n  | Alpha fmt_rest, Alpha_ty fmtty_rest ->\n    let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n    Fmt_fmtty_EBB (Alpha fmt', fmtty')\n  | Theta fmt_rest, Theta_ty fmtty_rest ->\n    let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n    Fmt_fmtty_EBB (Theta fmt', fmtty')\n\n  (* Format specific constructors: *)\n  | Formatting_lit (formatting_lit, fmt_rest), fmtty_rest ->\n    let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n    Fmt_fmtty_EBB (Formatting_lit (formatting_lit, fmt'), fmtty')\n  | Formatting_gen (formatting_gen, fmt_rest), fmtty_rest ->\n    type_formatting_gen formatting_gen fmt_rest fmtty_rest\n\n  (* Scanf specific constructors: *)\n  | Reader fmt_rest, Reader_ty fmtty_rest ->\n    let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n    Fmt_fmtty_EBB (Reader fmt', fmtty')\n  | Scan_char_set (width_opt, char_set, fmt_rest), String_ty fmtty_rest ->\n    let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n    Fmt_fmtty_EBB (Scan_char_set (width_opt, char_set, fmt'), fmtty')\n  | Scan_get_counter (counter, fmt_rest), Int_ty fmtty_rest ->\n    let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt_rest fmtty_rest in\n    Fmt_fmtty_EBB (Scan_get_counter (counter, fmt'), fmtty')\n  | Ignored_param (ign, rest), fmtty_rest ->\n    type_ignored_param ign rest fmtty_rest\n\n  | End_of_format, fmtty_rest -> Fmt_fmtty_EBB (End_of_format, fmtty_rest)\n\n  | _ -> raise Type_mismatch\n\nand type_formatting_gen : type a1 a3 b1 b3 c1 c3 d1 d3 e1 e2 e3 f1 f2 f3 .\n    (a1, b1, c1, d1, e1, f1) formatting_gen ->\n    (f1, b1, c1, e1, e2, f2) fmt ->\n    (a3, b3, c3, d3, e3, f3) fmtty ->\n    (a3, b3, c3, d3, e3, f3) fmt_fmtty_ebb =\nfun formatting_gen fmt0 fmtty0 -> match formatting_gen with\n  | Open_tag (Format (fmt1, str)) ->\n    let Fmt_fmtty_EBB (fmt2, fmtty2) = type_format_gen fmt1 fmtty0 in\n    let Fmt_fmtty_EBB (fmt3, fmtty3) = type_format_gen fmt0 fmtty2 in\n    Fmt_fmtty_EBB (Formatting_gen (Open_tag (Format (fmt2, str)), fmt3), fmtty3)\n  | Open_box (Format (fmt1, str)) ->\n    let Fmt_fmtty_EBB (fmt2, fmtty2) = type_format_gen fmt1 fmtty0 in\n    let Fmt_fmtty_EBB (fmt3, fmtty3) = type_format_gen fmt0 fmtty2 in\n    Fmt_fmtty_EBB (Formatting_gen (Open_box (Format (fmt2, str)), fmt3), fmtty3)\n\n(* Type an Ignored_param node according to an fmtty. *)\nand type_ignored_param : type p q x y z t u v a b c d e f .\n    (x, y, z, t, q, p) ignored ->\n    (p, y, z, q, u, v) fmt ->\n    (a, b, c, d, e, f) fmtty ->\n    (a, b, c, d, e, f) fmt_fmtty_ebb =\nfun ign fmt fmtty -> match ign with\n  | Ignored_char               as ign' -> type_ignored_param_one ign' fmt fmtty\n  | Ignored_caml_char          as ign' -> type_ignored_param_one ign' fmt fmtty\n  | Ignored_string _           as ign' -> type_ignored_param_one ign' fmt fmtty\n  | Ignored_caml_string _      as ign' -> type_ignored_param_one ign' fmt fmtty\n  | Ignored_int _              as ign' -> type_ignored_param_one ign' fmt fmtty\n  | Ignored_int32 _            as ign' -> type_ignored_param_one ign' fmt fmtty\n  | Ignored_nativeint _        as ign' -> type_ignored_param_one ign' fmt fmtty\n  | Ignored_int64 _            as ign' -> type_ignored_param_one ign' fmt fmtty\n  | Ignored_float _            as ign' -> type_ignored_param_one ign' fmt fmtty\n  | Ignored_bool               as ign' -> type_ignored_param_one ign' fmt fmtty\n  | Ignored_scan_char_set _    as ign' -> type_ignored_param_one ign' fmt fmtty\n  | Ignored_scan_get_counter _ as ign' -> type_ignored_param_one ign' fmt fmtty\n  | Ignored_scan_next_char     as ign' -> type_ignored_param_one ign' fmt fmtty\n  | Ignored_format_arg (pad_opt, sub_fmtty) ->\n    type_ignored_param_one (Ignored_format_arg (pad_opt, sub_fmtty)) fmt fmtty\n  | Ignored_format_subst (pad_opt, sub_fmtty) ->\n    let Fmtty_fmt_EBB (sub_fmtty', Fmt_fmtty_EBB (fmt', fmtty')) =\n      type_ignored_format_substitution sub_fmtty fmt fmtty in\n    Fmt_fmtty_EBB (Ignored_param (Ignored_format_subst (pad_opt, sub_fmtty'),\n                                  fmt'),\n                   fmtty')\n  | Ignored_reader -> (\n    match fmtty with\n    | Ignored_reader_ty fmtty_rest ->\n      let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt fmtty_rest in\n      Fmt_fmtty_EBB (Ignored_param (Ignored_reader, fmt'), fmtty')\n    | _ -> raise Type_mismatch\n  )\n\nand type_ignored_param_one : type a1 a2 b1 b2 c1 c2 d1 d2 e1 e2 f1 f2 .\n    (a2, b2, c2, d2, d2, a2) ignored ->\n    (a1, b1, c1, d1, e1, f1) fmt ->\n    (a2, b2, c2, d2, e2, f2) fmtty ->\n    (a2, b2, c2, d2, e2, f2) fmt_fmtty_ebb\n= fun ign fmt fmtty ->\n  let Fmt_fmtty_EBB (fmt', fmtty') = type_format_gen fmt fmtty in\n  Fmt_fmtty_EBB (Ignored_param (ign, fmt'), fmtty')\n\n(* Typing of the complex case: \"%_(...%)\". *)\nand type_ignored_format_substitution : type w x y z p s t u a b c d e f .\n    (w, x, y, z, s, p) fmtty ->\n    (p, x, y, s, t, u) fmt ->\n    (a, b, c, d, e, f) fmtty -> (a, b, c, d, e, f) fmtty_fmt_ebb =\nfun sub_fmtty fmt fmtty -> match sub_fmtty, fmtty with\n  | Char_ty sub_fmtty_rest, Char_ty fmtty_rest ->\n    let Fmtty_fmt_EBB (sub_fmtty_rest', fmt') =\n      type_ignored_format_substitution sub_fmtty_rest fmt fmtty_rest in\n    Fmtty_fmt_EBB (Char_ty sub_fmtty_rest', fmt')\n  | String_ty sub_fmtty_rest, String_ty fmtty_rest ->\n    let Fmtty_fmt_EBB (sub_fmtty_rest', fmt') =\n      type_ignored_format_substitution sub_fmtty_rest fmt fmtty_rest in\n    Fmtty_fmt_EBB (String_ty sub_fmtty_rest', fmt')\n  | Int_ty sub_fmtty_rest, Int_ty fmtty_rest ->\n    let Fmtty_fmt_EBB (sub_fmtty_rest', fmt') =\n      type_ignored_format_substitution sub_fmtty_rest fmt fmtty_rest in\n    Fmtty_fmt_EBB (Int_ty sub_fmtty_rest', fmt')\n  | Int32_ty sub_fmtty_rest, Int32_ty fmtty_rest ->\n    let Fmtty_fmt_EBB (sub_fmtty_rest', fmt') =\n      type_ignored_format_substitution sub_fmtty_rest fmt fmtty_rest in\n    Fmtty_fmt_EBB (Int32_ty sub_fmtty_rest', fmt')\n  | Nativeint_ty sub_fmtty_rest, Nativeint_ty fmtty_rest ->\n    let Fmtty_fmt_EBB (sub_fmtty_rest', fmt') =\n      type_ignored_format_substitution sub_fmtty_rest fmt fmtty_rest in\n    Fmtty_fmt_EBB (Nativeint_ty sub_fmtty_rest', fmt')\n  | Int64_ty sub_fmtty_rest, Int64_ty fmtty_rest ->\n    let Fmtty_fmt_EBB (sub_fmtty_rest', fmt') =\n      type_ignored_format_substitution sub_fmtty_rest fmt fmtty_rest in\n    Fmtty_fmt_EBB (Int64_ty sub_fmtty_rest', fmt')\n  | Float_ty sub_fmtty_rest, Float_ty fmtty_rest ->\n    let Fmtty_fmt_EBB (sub_fmtty_rest', fmt') =\n      type_ignored_format_substitution sub_fmtty_rest fmt fmtty_rest in\n    Fmtty_fmt_EBB (Float_ty sub_fmtty_rest', fmt')\n  | Bool_ty sub_fmtty_rest, Bool_ty fmtty_rest ->\n    let Fmtty_fmt_EBB (sub_fmtty_rest', fmt') =\n      type_ignored_format_substitution sub_fmtty_rest fmt fmtty_rest in\n    Fmtty_fmt_EBB (Bool_ty sub_fmtty_rest', fmt')\n  | Alpha_ty sub_fmtty_rest, Alpha_ty fmtty_rest ->\n    let Fmtty_fmt_EBB (sub_fmtty_rest', fmt') =\n      type_ignored_format_substitution sub_fmtty_rest fmt fmtty_rest in\n    Fmtty_fmt_EBB (Alpha_ty sub_fmtty_rest', fmt')\n  | Theta_ty sub_fmtty_rest, Theta_ty fmtty_rest ->\n    let Fmtty_fmt_EBB (sub_fmtty_rest', fmt') =\n      type_ignored_format_substitution sub_fmtty_rest fmt fmtty_rest in\n    Fmtty_fmt_EBB (Theta_ty sub_fmtty_rest', fmt')\n  | Reader_ty sub_fmtty_rest, Reader_ty fmtty_rest ->\n    let Fmtty_fmt_EBB (sub_fmtty_rest', fmt') =\n      type_ignored_format_substitution sub_fmtty_rest fmt fmtty_rest in\n    Fmtty_fmt_EBB (Reader_ty sub_fmtty_rest', fmt')\n  | Ignored_reader_ty sub_fmtty_rest, Ignored_reader_ty fmtty_rest ->\n    let Fmtty_fmt_EBB (sub_fmtty_rest', fmt') =\n      type_ignored_format_substitution sub_fmtty_rest fmt fmtty_rest in\n    Fmtty_fmt_EBB (Ignored_reader_ty sub_fmtty_rest', fmt')\n\n  | Format_arg_ty (sub2_fmtty, sub_fmtty_rest),\n    Format_arg_ty (sub2_fmtty', fmtty_rest) ->\n    if Fmtty_EBB sub2_fmtty <> Fmtty_EBB sub2_fmtty' then raise Type_mismatch;\n    let Fmtty_fmt_EBB (sub_fmtty_rest', fmt') =\n      type_ignored_format_substitution sub_fmtty_rest fmt fmtty_rest in\n    Fmtty_fmt_EBB (Format_arg_ty (sub2_fmtty', sub_fmtty_rest'), fmt')\n  | Format_subst_ty (sub1_fmtty,  sub2_fmtty,  sub_fmtty_rest),\n    Format_subst_ty (sub1_fmtty', sub2_fmtty', fmtty_rest) ->\n    (* TODO define Fmtty_rel_EBB to remove those erase_rel *)\n    if Fmtty_EBB (erase_rel sub1_fmtty) <> Fmtty_EBB (erase_rel sub1_fmtty')\n    then raise Type_mismatch;\n    if Fmtty_EBB (erase_rel sub2_fmtty) <> Fmtty_EBB (erase_rel sub2_fmtty')\n    then raise Type_mismatch;\n    let sub_fmtty' = trans (symm sub1_fmtty') sub2_fmtty' in\n    let _, f2, _, f4 = fmtty_rel_det sub_fmtty' in\n    let Refl = f2 Refl in\n    let Refl = f4 Refl in\n    let Fmtty_fmt_EBB (sub_fmtty_rest', fmt') =\n      type_ignored_format_substitution (erase_rel sub_fmtty_rest) fmt fmtty_rest\n    in\n    Fmtty_fmt_EBB (Format_subst_ty (sub1_fmtty', sub2_fmtty',\n                                    symm sub_fmtty_rest'),\n                   fmt')\n  | End_of_fmtty, fmtty ->\n    Fmtty_fmt_EBB (End_of_fmtty, type_format_gen fmt fmtty)\n  | _ -> raise Type_mismatch\n\n(* This implementation of `recast` is a bit disappointing. The\n   invariant provided by the type are very strong: the input format's\n   type is in relation to the output type's as witnessed by the\n   fmtty_rel argument. One would at first expect this function to be\n   total, and implementable by exhaustive pattern matching. Instead,\n   we reuse the highly partial and much less well-defined function\n   `type_format` that has lost all knowledge of the correspondence\n   between the argument's types.\n\n   Besides the fact that this function reuses a lot of the\n   `type_format` logic (eg.: seeing Int_ty in the fmtty parameter does\n   not let you match on Int only, as you may in fact have Float\n   (Arg_padding, ...) (\"%.*d\") beginning with an Int_ty), it is also\n   a partial function, because the typing information in a format is\n   not quite enough to reconstruct it unambiguously. For example, the\n   format types of \"%d%_r\" and \"%_r%d\" have the same format6\n   parameters, but they are not at all exchangeable, and putting one\n   in place of the other must result in a dynamic failure.\n\n   Given that:\n   - we'd have to duplicate a lot of non-trivial typing logic from type_format\n   - this wouldn't even eliminate (all) the dynamic failures\n   we decided to just reuse type_format directly for now.\n*)\nlet recast :\n  type a1 b1 c1 d1 e1 f1\n       a2 b2 c2 d2 e2 f2\n  .\n     (a1, b1, c1, d1, e1, f1) fmt\n  -> (a1, b1, c1, d1, e1, f1,\n      a2, b2, c2, d2, e2, f2) fmtty_rel\n  -> (a2, b2, c2, d2, e2, f2) fmt\n= fun fmt fmtty ->\n  type_format fmt (erase_rel (symm fmtty))\n\n(******************************************************************************)\n                             (* Printing tools *)\n\n(* Add padding spaces arround a string. *)\nlet fix_padding padty width str =\n  let len = String.length str in\n  let width, padty =\n    abs width,\n    (* while literal padding widths are always non-negative,\n       dynamically-set widths (Arg_padding, eg. %*d) may be negative;\n       we interpret those as specifying a padding-to-the-left; this\n       means that '0' may get dropped even if it was explicitly set,\n       but:\n       - this is what the legacy implementation does, and\n         we preserve compatibility if possible\n       - we could only signal this issue by failing at runtime,\n         which is not very nice... *)\n    if width < 0 then Left else padty in\n  if width <= len then str else\n    let res = Bytes.make width (if padty = Zeros then '0' else ' ') in\n    begin match padty with\n    | Left  -> String.blit str 0 res 0 len\n    | Right -> String.blit str 0 res (width - len) len\n    | Zeros when len > 0 && (str.[0] = '+' || str.[0] = '-' || str.[0] = ' ') ->\n      Bytes.set res 0 str.[0];\n      String.blit str 1 res (width - len + 1) (len - 1)\n    | Zeros when len > 1 && str.[0] = '0' && (str.[1] = 'x' || str.[1] = 'X') ->\n      Bytes.set res 1 str.[1];\n      String.blit str 2 res (width - len + 2) (len - 2)\n    | Zeros ->\n      String.blit str 0 res (width - len) len\n    end;\n    Bytes.unsafe_to_string res\n\n(* Add '0' padding to int, int32, nativeint or int64 string representation. *)\nlet fix_int_precision prec str =\n  let prec = abs prec in\n  let len = String.length str in\n  match str.[0] with\n  | ('+' | '-' | ' ') as c when prec + 1 > len ->\n    let res = Bytes.make (prec + 1) '0' in\n    Bytes.set res 0 c;\n    String.blit str 1 res (prec - len + 2) (len - 1);\n    Bytes.unsafe_to_string res\n  | '0' when prec + 2 > len && len > 1 && (str.[1] = 'x' || str.[1] = 'X') ->\n    let res = Bytes.make (prec + 2) '0' in\n    Bytes.set res 1 str.[1];\n    String.blit str 2 res (prec - len + 4) (len - 2);\n    Bytes.unsafe_to_string res\n  | '0' .. '9' | 'a' .. 'f' | 'A' .. 'F' when prec > len ->\n    let res = Bytes.make prec '0' in\n    String.blit str 0 res (prec - len) len;\n    Bytes.unsafe_to_string res\n  | _ ->\n    str\n\n(* Escape a string according to the OCaml lexing convention. *)\nlet string_to_caml_string str =\n  let str = String.escaped str in\n  let l = String.length str in\n  let res = Bytes.make (l + 2) '\\\"' in\n  String.unsafe_blit str 0 res 1 l;\n  Bytes.unsafe_to_string res\n\n(* Generate the format_int/int32/nativeint/int64 first argument\n   from an int_conv. *)\nlet format_of_iconv = function\n  | Int_d -> \"%d\" | Int_pd -> \"%+d\" | Int_sd -> \"% d\"\n  | Int_i -> \"%i\" | Int_pi -> \"%+i\" | Int_si -> \"% i\"\n  | Int_x -> \"%x\" | Int_Cx -> \"%#x\"\n  | Int_X -> \"%X\" | Int_CX -> \"%#X\"\n  | Int_o -> \"%o\" | Int_Co -> \"%#o\"\n  | Int_u -> \"%u\"\n\nlet format_of_iconvL = function\n  | Int_d -> \"%Ld\" | Int_pd -> \"%+Ld\" | Int_sd -> \"% Ld\"\n  | Int_i -> \"%Li\" | Int_pi -> \"%+Li\" | Int_si -> \"% Li\"\n  | Int_x -> \"%Lx\" | Int_Cx -> \"%#Lx\"\n  | Int_X -> \"%LX\" | Int_CX -> \"%#LX\"\n  | Int_o -> \"%Lo\" | Int_Co -> \"%#Lo\"\n  | Int_u -> \"%Lu\"\n\nlet format_of_iconvl = function\n  | Int_d -> \"%ld\" | Int_pd -> \"%+ld\" | Int_sd -> \"% ld\"\n  | Int_i -> \"%li\" | Int_pi -> \"%+li\" | Int_si -> \"% li\"\n  | Int_x -> \"%lx\" | Int_Cx -> \"%#lx\"\n  | Int_X -> \"%lX\" | Int_CX -> \"%#lX\"\n  | Int_o -> \"%lo\" | Int_Co -> \"%#lo\"\n  | Int_u -> \"%lu\"\n\nlet format_of_iconvn = function\n  | Int_d -> \"%nd\" | Int_pd -> \"%+nd\" | Int_sd -> \"% nd\"\n  | Int_i -> \"%ni\" | Int_pi -> \"%+ni\" | Int_si -> \"% ni\"\n  | Int_x -> \"%nx\" | Int_Cx -> \"%#nx\"\n  | Int_X -> \"%nX\" | Int_CX -> \"%#nX\"\n  | Int_o -> \"%no\" | Int_Co -> \"%#no\"\n  | Int_u -> \"%nu\"\n\n(* Generate the format_float first argument form a float_conv. *)\nlet format_of_fconv fconv prec =\n  if fconv = Float_F then \"%.12g\" else\n    let prec = abs prec in\n    let symb = char_of_fconv fconv in\n    let buf = buffer_create 16 in\n    buffer_add_char buf '%';\n    bprint_fconv_flag buf fconv;\n    buffer_add_char buf '.';\n    buffer_add_string buf (string_of_int prec);\n    buffer_add_char buf symb;\n    buffer_contents buf\n\n(* Convert an integer to a string according to a conversion. *)\nlet convert_int iconv n = format_int (format_of_iconv iconv) n\nlet convert_int32 iconv n = format_int32 (format_of_iconvl iconv) n\nlet convert_nativeint iconv n = format_nativeint (format_of_iconvn iconv) n\nlet convert_int64 iconv n = format_int64 (format_of_iconvL iconv) n\n\n(* Convert a float to string. *)\n(* Fix special case of \"OCaml float format\". *)\nlet convert_float fconv prec x =\n  match fconv with\n  | Float_h | Float_ph | Float_sh | Float_H | Float_pH | Float_sH ->\n    let sign =\n      match fconv with\n      | Float_ph | Float_pH -> '+'\n      | Float_sh | Float_sH -> ' '\n      | _ -> '-' in\n    let str = hexstring_of_float x prec sign in\n    begin match fconv with\n    | Float_H | Float_pH | Float_sH -> String.uppercase_ascii str\n    | _ -> str\n    end\n  | _ ->\n    let str = format_float (format_of_fconv fconv prec) x in\n    if fconv <> Float_F then str else\n      let len = String.length str in\n      let rec is_valid i =\n        if i = len then false else\n          match str.[i] with\n          | '.' | 'e' | 'E' -> true\n          | _ -> is_valid (i + 1)\n      in\n      match classify_float x with\n      | FP_normal | FP_subnormal | FP_zero ->\n        if is_valid 0 then str else str ^ \".\"\n      | FP_infinite ->\n        if x < 0.0 then \"neg_infinity\" else \"infinity\"\n      | FP_nan -> \"nan\"\n\n(* Convert a char to a string according to the OCaml lexical convention. *)\nlet format_caml_char c =\n  let str = Char.escaped c in\n  let l = String.length str in\n  let res = Bytes.make (l + 2) '\\'' in\n  String.unsafe_blit str 0 res 1 l;\n  Bytes.unsafe_to_string res\n\n(* Convert a format type to string *)\nlet string_of_fmtty fmtty =\n  let buf = buffer_create 16 in\n  bprint_fmtty buf fmtty;\n  buffer_contents buf\n\n(******************************************************************************)\n                        (* Generic printing function *)\n\n(* Make a generic printing function. *)\n(* Used to generate Printf and Format printing functions. *)\n(* Parameters:\n     k: a continuation finally applied to the output stream and the accumulator.\n     o: the output stream (see k, %a and %t).\n     acc: rev list of printing entities (string, char, flush, formatting, ...).\n     fmt: the format. *)\nlet rec make_printf : type a b c d e f .\n    (b -> (b, c) acc -> f) -> b -> (b, c) acc ->\n    (a, b, c, d, e, f) fmt -> a =\nfun k o acc fmt -> match fmt with\n  | Char rest ->\n    fun c ->\n      let new_acc = Acc_data_char (acc, c) in\n      make_printf k o new_acc rest\n  | Caml_char rest ->\n    fun c ->\n      let new_acc = Acc_data_string (acc, format_caml_char c) in\n      make_printf k o new_acc rest\n  | String (pad, rest) ->\n    make_string_padding k o acc rest pad (fun str -> str)\n  | Caml_string (pad, rest) ->\n    make_string_padding k o acc rest pad string_to_caml_string\n  | Int (iconv, pad, prec, rest) ->\n    make_int_padding_precision k o acc rest pad prec convert_int iconv\n  | Int32 (iconv, pad, prec, rest) ->\n    make_int_padding_precision k o acc rest pad prec convert_int32 iconv\n  | Nativeint (iconv, pad, prec, rest) ->\n    make_int_padding_precision k o acc rest pad prec convert_nativeint iconv\n  | Int64 (iconv, pad, prec, rest) ->\n    make_int_padding_precision k o acc rest pad prec convert_int64 iconv\n  | Float (fconv, pad, prec, rest) ->\n    make_float_padding_precision k o acc rest pad prec fconv\n  | Bool rest ->\n    fun b -> make_printf k o (Acc_data_string (acc, string_of_bool b)) rest\n  | Alpha rest ->\n    fun f x -> make_printf k o (Acc_delay (acc, fun o -> f o x)) rest\n  | Theta rest ->\n    fun f -> make_printf k o (Acc_delay (acc, f)) rest\n  | Custom (arity, f, rest) ->\n    make_custom k o acc rest arity (f ())\n  | Reader _ ->\n    (* This case is impossible, by typing of formats. *)\n    (* Indeed, since printf and co. take a format4 as argument, the 'd and 'e\n       type parameters of fmt are obviously equals. The Reader is the\n       only constructor which touch 'd and 'e type parameters of the format\n       type, it adds an (->) to the 'd parameters. Consequently, a format4\n       cannot contain a Reader node, except in the sub-format associated to\n       an %{...%}. It's not a problem because make_printf do not call\n       itself recursively on the sub-format associated to %{...%}. *)\n    assert false\n  | Flush rest ->\n    make_printf k o (Acc_flush acc) rest\n\n  | String_literal (str, rest) ->\n    make_printf k o (Acc_string_literal (acc, str)) rest\n  | Char_literal (chr, rest) ->\n    make_printf k o (Acc_char_literal (acc, chr)) rest\n\n  | Format_arg (_, sub_fmtty, rest) ->\n    let ty = string_of_fmtty sub_fmtty in\n    (fun str ->\n      ignore str;\n      make_printf k o (Acc_data_string (acc, ty)) rest)\n  | Format_subst (_, fmtty, rest) ->\n    fun (Format (fmt, _)) -> make_printf k o acc\n      (concat_fmt (recast fmt fmtty) rest)\n\n  | Scan_char_set (_, _, rest) ->\n    let new_acc = Acc_invalid_arg (acc, \"Printf: bad conversion %[\") in\n    fun _ -> make_printf k o new_acc rest\n  | Scan_get_counter (_, rest) ->\n    (* This case should be refused for Printf. *)\n    (* Accepted for backward compatibility. *)\n    (* Interpret %l, %n and %L as %u. *)\n    fun n ->\n      let new_acc = Acc_data_string (acc, format_int \"%u\" n) in\n      make_printf k o new_acc rest\n  | Scan_next_char rest ->\n    fun c ->\n      let new_acc = Acc_data_char (acc, c) in\n      make_printf k o new_acc rest\n  | Ignored_param (ign, rest) ->\n    make_ignored_param k o acc ign rest\n\n  | Formatting_lit (fmting_lit, rest) ->\n    make_printf k o (Acc_formatting_lit (acc, fmting_lit)) rest\n  | Formatting_gen (Open_tag (Format (fmt', _)), rest) ->\n    let k' koc kacc =\n      make_printf k koc (Acc_formatting_gen (acc, Acc_open_tag kacc)) rest in\n    make_printf k' o End_of_acc fmt'\n  | Formatting_gen (Open_box (Format (fmt', _)), rest) ->\n    let k' koc kacc =\n      make_printf k koc (Acc_formatting_gen (acc, Acc_open_box kacc)) rest in\n    make_printf k' o End_of_acc fmt'\n\n  | End_of_format ->\n    k o acc\n\n(* Delay the error (Invalid_argument \"Printf: bad conversion %_\"). *)\n(* Generate functions to take remaining arguments (after the \"%_\"). *)\nand make_ignored_param : type x y a b c d e f .\n    (b -> (b, c) acc -> f) -> b -> (b, c) acc ->\n    (a, b, c, d, y, x) ignored ->\n    (x, b, c, y, e, f) fmt -> a =\nfun k o acc ign fmt -> match ign with\n  | Ignored_char                    -> make_invalid_arg k o acc fmt\n  | Ignored_caml_char               -> make_invalid_arg k o acc fmt\n  | Ignored_string _                -> make_invalid_arg k o acc fmt\n  | Ignored_caml_string _           -> make_invalid_arg k o acc fmt\n  | Ignored_int (_, _)              -> make_invalid_arg k o acc fmt\n  | Ignored_int32 (_, _)            -> make_invalid_arg k o acc fmt\n  | Ignored_nativeint (_, _)        -> make_invalid_arg k o acc fmt\n  | Ignored_int64 (_, _)            -> make_invalid_arg k o acc fmt\n  | Ignored_float (_, _)            -> make_invalid_arg k o acc fmt\n  | Ignored_bool                    -> make_invalid_arg k o acc fmt\n  | Ignored_format_arg _            -> make_invalid_arg k o acc fmt\n  | Ignored_format_subst (_, fmtty) -> make_from_fmtty k o acc fmtty fmt\n  | Ignored_reader                  -> assert false\n  | Ignored_scan_char_set _         -> make_invalid_arg k o acc fmt\n  | Ignored_scan_get_counter _      -> make_invalid_arg k o acc fmt\n  | Ignored_scan_next_char          -> make_invalid_arg k o acc fmt\n\n\n(* Special case of printf \"%_(\". *)\nand make_from_fmtty : type x y a b c d e f .\n    (b -> (b, c) acc -> f) -> b -> (b, c) acc ->\n    (a, b, c, d, y, x) fmtty ->\n    (x, b, c, y, e, f) fmt -> a =\nfun k o acc fmtty fmt -> match fmtty with\n  | Char_ty rest            -> fun _ -> make_from_fmtty k o acc rest fmt\n  | String_ty rest          -> fun _ -> make_from_fmtty k o acc rest fmt\n  | Int_ty rest             -> fun _ -> make_from_fmtty k o acc rest fmt\n  | Int32_ty rest           -> fun _ -> make_from_fmtty k o acc rest fmt\n  | Nativeint_ty rest       -> fun _ -> make_from_fmtty k o acc rest fmt\n  | Int64_ty rest           -> fun _ -> make_from_fmtty k o acc rest fmt\n  | Float_ty rest           -> fun _ -> make_from_fmtty k o acc rest fmt\n  | Bool_ty rest            -> fun _ -> make_from_fmtty k o acc rest fmt\n  | Alpha_ty rest           -> fun _ _ -> make_from_fmtty k o acc rest fmt\n  | Theta_ty rest           -> fun _ -> make_from_fmtty k o acc rest fmt\n  | Any_ty rest             -> fun _ -> make_from_fmtty k o acc rest fmt\n  | Reader_ty _             -> assert false\n  | Ignored_reader_ty _     -> assert false\n  | Format_arg_ty (_, rest) -> fun _ -> make_from_fmtty k o acc rest fmt\n  | End_of_fmtty            -> make_invalid_arg k o acc fmt\n  | Format_subst_ty (ty1, ty2, rest) ->\n    let ty = trans (symm ty1) ty2 in\n    fun _ -> make_from_fmtty k o acc (concat_fmtty ty rest) fmt\n\n(* Insert an Acc_invalid_arg in the accumulator and continue to generate\n   closures to get the remaining arguments. *)\nand make_invalid_arg : type a b c d e f .\n    (b -> (b, c) acc -> f) -> b -> (b, c) acc ->\n    (a, b, c, d, e, f) fmt -> a =\nfun k o acc fmt ->\n  make_printf k o (Acc_invalid_arg (acc, \"Printf: bad conversion %_\")) fmt\n\n(* Fix padding, take it as an extra integer argument if needed. *)\nand make_string_padding : type x z a b c d e f .\n    (b -> (b, c) acc -> f) -> b -> (b, c) acc ->\n    (a, b, c, d, e, f) fmt ->\n    (x, z -> a) padding -> (z -> string) -> x =\n  fun k o acc fmt pad trans -> match pad with\n  | No_padding ->\n    fun x ->\n      let new_acc = Acc_data_string (acc, trans x) in\n      make_printf k o new_acc fmt\n  | Lit_padding (padty, width) ->\n    fun x ->\n      let new_acc = Acc_data_string (acc, fix_padding padty width (trans x)) in\n      make_printf k o new_acc fmt\n  | Arg_padding padty ->\n    fun w x ->\n      let new_acc = Acc_data_string (acc, fix_padding padty w (trans x)) in\n      make_printf k o new_acc fmt\n\n(* Fix padding and precision for int, int32, nativeint or int64. *)\n(* Take one or two extra integer arguments if needed. *)\nand make_int_padding_precision : type x y z a b c d e f .\n    (b -> (b, c) acc -> f) -> b -> (b, c) acc ->\n    (a, b, c, d, e, f) fmt ->\n    (x, y) padding -> (y, z -> a) precision -> (int_conv -> z -> string) ->\n    int_conv -> x =\n  fun k o acc fmt pad prec trans iconv -> match pad, prec with\n  | No_padding, No_precision ->\n    fun x ->\n      let str = trans iconv x in\n      make_printf k o (Acc_data_string (acc, str)) fmt\n  | No_padding, Lit_precision p ->\n    fun x ->\n      let str = fix_int_precision p (trans iconv x) in\n      make_printf k o (Acc_data_string (acc, str)) fmt\n  | No_padding, Arg_precision ->\n    fun p x ->\n      let str = fix_int_precision p (trans iconv x) in\n      make_printf k o (Acc_data_string (acc, str)) fmt\n  | Lit_padding (padty, w), No_precision ->\n    fun x ->\n      let str = fix_padding padty w (trans iconv x) in\n      make_printf k o (Acc_data_string (acc, str)) fmt\n  | Lit_padding (padty, w), Lit_precision p ->\n    fun x ->\n      let str = fix_padding padty w (fix_int_precision p (trans iconv x)) in\n      make_printf k o (Acc_data_string (acc, str)) fmt\n  | Lit_padding (padty, w), Arg_precision ->\n    fun p x ->\n      let str = fix_padding padty w (fix_int_precision p (trans iconv x)) in\n      make_printf k o (Acc_data_string (acc, str)) fmt\n  | Arg_padding padty, No_precision ->\n    fun w x ->\n      let str = fix_padding padty w (trans iconv x) in\n      make_printf k o (Acc_data_string (acc, str)) fmt\n  | Arg_padding padty, Lit_precision p ->\n    fun w x ->\n      let str = fix_padding padty w (fix_int_precision p (trans iconv x)) in\n      make_printf k o (Acc_data_string (acc, str)) fmt\n  | Arg_padding padty, Arg_precision ->\n    fun w p x ->\n      let str = fix_padding padty w (fix_int_precision p (trans iconv x)) in\n      make_printf k o (Acc_data_string (acc, str)) fmt\n\n(* Convert a float, fix padding and precision if needed. *)\n(* Take the float argument and one or two extra integer arguments if needed. *)\nand make_float_padding_precision : type x y a b c d e f .\n    (b -> (b, c) acc -> f) -> b -> (b, c) acc ->\n    (a, b, c, d, e, f) fmt ->\n    (x, y) padding -> (y, float -> a) precision -> float_conv -> x =\n  fun k o acc fmt pad prec fconv -> match pad, prec with\n  | No_padding, No_precision ->\n    fun x ->\n      let str = convert_float fconv default_float_precision x in\n      make_printf k o (Acc_data_string (acc, str)) fmt\n  | No_padding, Lit_precision p ->\n    fun x ->\n      let str = convert_float fconv p x in\n      make_printf k o (Acc_data_string (acc, str)) fmt\n  | No_padding, Arg_precision ->\n    fun p x ->\n      let str = convert_float fconv p x in\n      make_printf k o (Acc_data_string (acc, str)) fmt\n  | Lit_padding (padty, w), No_precision ->\n    fun x ->\n      let str = convert_float fconv default_float_precision x in\n      let str' = fix_padding padty w str in\n      make_printf k o (Acc_data_string (acc, str')) fmt\n  | Lit_padding (padty, w), Lit_precision p ->\n    fun x ->\n      let str = fix_padding padty w (convert_float fconv p x) in\n      make_printf k o (Acc_data_string (acc, str)) fmt\n  | Lit_padding (padty, w), Arg_precision ->\n    fun p x ->\n      let str = fix_padding padty w (convert_float fconv p x) in\n      make_printf k o (Acc_data_string (acc, str)) fmt\n  | Arg_padding padty, No_precision ->\n    fun w x ->\n      let str = convert_float fconv default_float_precision x in\n      let str' = fix_padding padty w str in\n      make_printf k o (Acc_data_string (acc, str')) fmt\n  | Arg_padding padty, Lit_precision p ->\n    fun w x ->\n      let str = fix_padding padty w (convert_float fconv p x) in\n      make_printf k o (Acc_data_string (acc, str)) fmt\n  | Arg_padding padty, Arg_precision ->\n    fun w p x ->\n      let str = fix_padding padty w (convert_float fconv p x) in\n      make_printf k o (Acc_data_string (acc, str)) fmt\nand make_custom : type x y a b c d e f .\n  (b -> (b, c) acc -> f) -> b -> (b, c) acc ->\n  (a, b, c, d, e, f) fmt ->\n  (a, x, y) custom_arity -> x -> y =\n  fun k o acc rest arity f -> match arity with\n  | Custom_zero -> make_printf k o (Acc_data_string (acc, f)) rest\n  | Custom_succ arity ->\n    fun x ->\n      make_custom k o acc rest arity (f x)\n\nlet const x _ = x\n\nlet rec make_iprintf : type a b c d e f.\n  (b -> f) -> b -> (a, b, c, d, e, f) fmt -> a =\n  fun k o fmt -> match fmt with\n    | Char rest ->\n        const (make_iprintf k o rest)\n    | Caml_char rest ->\n        const (make_iprintf k o rest)\n    | String (No_padding, rest) ->\n        const (make_iprintf k o rest)\n    | String (Lit_padding _, rest) ->\n        const (make_iprintf k o rest)\n    | String (Arg_padding _, rest) ->\n        const (const (make_iprintf k o rest))\n    | Caml_string (No_padding, rest) ->\n        const (make_iprintf k o rest)\n    | Caml_string (Lit_padding _, rest) ->\n        const (make_iprintf k o rest)\n    | Caml_string (Arg_padding _, rest) ->\n        const (const (make_iprintf k o rest))\n    | Int (_, pad, prec, rest) ->\n        fn_of_padding_precision k o rest pad prec\n    | Int32 (_, pad, prec, rest) ->\n        fn_of_padding_precision k o rest pad prec\n    | Nativeint (_, pad, prec, rest) ->\n        fn_of_padding_precision k o rest pad prec\n    | Int64 (_, pad, prec, rest) ->\n        fn_of_padding_precision k o rest pad prec\n    | Float (_, pad, prec, rest) ->\n        fn_of_padding_precision k o rest pad prec\n    | Bool rest ->\n        const (make_iprintf k o rest)\n    | Alpha rest ->\n        const (const (make_iprintf k o rest))\n    | Theta rest ->\n        const (make_iprintf k o rest)\n    | Custom (arity, _, rest) ->\n        fn_of_custom_arity k o rest arity\n    | Reader _ ->\n        (* This case is impossible, by typing of formats.  See the\n           note in the corresponding case for make_printf. *)\n        assert false\n    | Flush rest ->\n        make_iprintf k o rest\n    | String_literal (_, rest) ->\n        make_iprintf k o rest\n    | Char_literal (_, rest) ->\n        make_iprintf k o rest\n    | Format_arg (_, _, rest) ->\n        const (make_iprintf k o rest)\n    | Format_subst (_, fmtty, rest) ->\n        fun (Format (fmt, _)) ->\n          make_iprintf k o\n            (concat_fmt (recast fmt fmtty) rest)\n    | Scan_char_set (_, _, rest) ->\n        const (make_iprintf k o rest)\n    | Scan_get_counter (_, rest) ->\n        const (make_iprintf k o rest)\n    | Scan_next_char rest ->\n        const (make_iprintf k o rest)\n    | Ignored_param (ign, rest) ->\n        make_ignored_param (fun x _ -> k x) o (End_of_acc) ign rest\n    | Formatting_lit (_, rest) ->\n        make_iprintf k o rest\n    | Formatting_gen (Open_tag (Format (fmt', _)), rest) ->\n        make_iprintf (fun koc -> make_iprintf k koc rest) o fmt'\n    | Formatting_gen (Open_box (Format (fmt', _)), rest) ->\n        make_iprintf (fun koc -> make_iprintf k koc rest) o fmt'\n    | End_of_format ->\n        k o\nand fn_of_padding_precision :\n  type x y z a b c d e f.\n  (b -> f) -> b -> (a, b, c, d, e, f) fmt ->\n  (x, y) padding -> (y, z -> a) precision -> x =\n  fun k o fmt pad prec -> match pad, prec with\n    | No_padding   , No_precision    ->\n        const (make_iprintf k o fmt)\n    | No_padding   , Lit_precision _ ->\n        const (make_iprintf k o fmt)\n    | No_padding   , Arg_precision   ->\n        const (const (make_iprintf k o fmt))\n    | Lit_padding _, No_precision    ->\n        const (make_iprintf k o fmt)\n    | Lit_padding _, Lit_precision _ ->\n        const (make_iprintf k o fmt)\n    | Lit_padding _, Arg_precision   ->\n        const (const (make_iprintf k o fmt))\n    | Arg_padding _, No_precision    ->\n        const (const (make_iprintf k o fmt))\n    | Arg_padding _, Lit_precision _ ->\n        const (const (make_iprintf k o fmt))\n    | Arg_padding _, Arg_precision   ->\n        const (const (const (make_iprintf k o fmt)))\nand fn_of_custom_arity : type x y a b c d e f .\n  (b -> f) -> b -> (a, b, c, d, e, f) fmt -> (a, x, y) custom_arity -> y =\n  fun k o fmt -> function\n    | Custom_zero ->\n        make_iprintf k o fmt\n    | Custom_succ arity ->\n        const (fn_of_custom_arity k o fmt arity)\n\n(******************************************************************************)\n                          (* Continuations for make_printf *)\n\n(* Recursively output an \"accumulator\" containing a reversed list of\n   printing entities (string, char, flus, ...) in an output_stream. *)\n(* Used as a continuation of make_printf. *)\nlet rec output_acc o acc = match acc with\n  | Acc_formatting_lit (p, fmting_lit) ->\n    let s = string_of_formatting_lit fmting_lit in\n    output_acc o p; output_string o s;\n  | Acc_formatting_gen (p, Acc_open_tag acc') ->\n    output_acc o p; output_string o \"@{\"; output_acc o acc';\n  | Acc_formatting_gen (p, Acc_open_box acc') ->\n    output_acc o p; output_string o \"@[\"; output_acc o acc';\n  | Acc_string_literal (p, s)\n  | Acc_data_string (p, s)   -> output_acc o p; output_string o s\n  | Acc_char_literal (p, c)\n  | Acc_data_char (p, c)     -> output_acc o p; output_char o c\n  | Acc_delay (p, f)         -> output_acc o p; f o\n  | Acc_flush p              -> output_acc o p; flush o\n  | Acc_invalid_arg (p, msg) -> output_acc o p; invalid_arg msg;\n  | End_of_acc               -> ()\n\n(* Recursively output an \"accumulator\" containing a reversed list of\n   printing entities (string, char, flus, ...) in a buffer. *)\n(* Used as a continuation of make_printf. *)\nlet rec bufput_acc b acc = match acc with\n  | Acc_formatting_lit (p, fmting_lit) ->\n    let s = string_of_formatting_lit fmting_lit in\n    bufput_acc b p; Buffer.add_string b s;\n  | Acc_formatting_gen (p, Acc_open_tag acc') ->\n    bufput_acc b p; Buffer.add_string b \"@{\"; bufput_acc b acc';\n  | Acc_formatting_gen (p, Acc_open_box acc') ->\n    bufput_acc b p; Buffer.add_string b \"@[\"; bufput_acc b acc';\n  | Acc_string_literal (p, s)\n  | Acc_data_string (p, s)   -> bufput_acc b p; Buffer.add_string b s\n  | Acc_char_literal (p, c)\n  | Acc_data_char (p, c)     -> bufput_acc b p; Buffer.add_char b c\n  | Acc_delay (p, f)         -> bufput_acc b p; f b\n  | Acc_flush p              -> bufput_acc b p;\n  | Acc_invalid_arg (p, msg) -> bufput_acc b p; invalid_arg msg;\n  | End_of_acc               -> ()\n\n(* Recursively output an \"accumulator\" containing a reversed list of\n   printing entities (string, char, flus, ...) in a buffer. *)\n(* Differ from bufput_acc by the interpretation of %a and %t. *)\n(* Used as a continuation of make_printf. *)\nlet rec strput_acc b acc = match acc with\n  | Acc_formatting_lit (p, fmting_lit) ->\n    let s = string_of_formatting_lit fmting_lit in\n    strput_acc b p; Buffer.add_string b s;\n  | Acc_formatting_gen (p, Acc_open_tag acc') ->\n    strput_acc b p; Buffer.add_string b \"@{\"; strput_acc b acc';\n  | Acc_formatting_gen (p, Acc_open_box acc') ->\n    strput_acc b p; Buffer.add_string b \"@[\"; strput_acc b acc';\n  | Acc_string_literal (p, s)\n  | Acc_data_string (p, s)   -> strput_acc b p; Buffer.add_string b s\n  | Acc_char_literal (p, c)\n  | Acc_data_char (p, c)     -> strput_acc b p; Buffer.add_char b c\n  | Acc_delay (p, f)         -> strput_acc b p; Buffer.add_string b (f ())\n  | Acc_flush p              -> strput_acc b p;\n  | Acc_invalid_arg (p, msg) -> strput_acc b p; invalid_arg msg;\n  | End_of_acc               -> ()\n\n(******************************************************************************)\n                          (* Error managment *)\n\n(* Raise a Failure with a pretty-printed error message. *)\nlet failwith_message (Format (fmt, _)) =\n  let buf = Buffer.create 256 in\n  let k () acc = strput_acc buf acc; failwith (Buffer.contents buf) in\n  make_printf k () End_of_acc fmt\n\n(******************************************************************************)\n                            (* Formatting tools *)\n\n(* Convert a string to an open block description (indent, block_type) *)\nlet open_box_of_string str =\n  if str = \"\" then (0, Pp_box) else\n    let len = String.length str in\n    let invalid_box () = failwith_message \"invalid box description %S\" str in\n    let rec parse_spaces i =\n      if i = len then i else\n        match str.[i] with\n        | ' ' | '\\t' -> parse_spaces (i + 1)\n        | _ -> i\n    and parse_lword i j =\n      if j = len then j else\n        match str.[j] with\n        | 'a' .. 'z' -> parse_lword i (j + 1)\n        | _ -> j\n    and parse_int i j =\n      if j = len then j else\n        match str.[j] with\n        | '0' .. '9' | '-' -> parse_int i (j + 1)\n        | _ -> j in\n    let wstart = parse_spaces 0 in\n    let wend = parse_lword wstart wstart in\n    let box_name = String.sub str wstart (wend - wstart) in\n    let nstart = parse_spaces wend in\n    let nend = parse_int nstart nstart in\n    let indent =\n      if nstart = nend then 0 else\n        try int_of_string (String.sub str nstart (nend - nstart))\n        with Failure _ -> invalid_box () in\n    let exp_end = parse_spaces nend in\n    if exp_end <> len then invalid_box ();\n    let box_type = match box_name with\n      | \"\" | \"b\" -> Pp_box\n      | \"h\"      -> Pp_hbox\n      | \"v\"      -> Pp_vbox\n      | \"hv\"     -> Pp_hvbox\n      | \"hov\"    -> Pp_hovbox\n      | _        -> invalid_box () in\n    (indent, box_type)\n\n(******************************************************************************)\n                            (* Parsing tools *)\n\n(* Create a padding_fmt_ebb from a padding and a format. *)\n(* Copy the padding to disjoin the type parameters of argument and result. *)\nlet make_padding_fmt_ebb : type x y .\n    (x, y) padding -> (_, _, _, _, _, _) fmt ->\n      (_, _, _, _, _) padding_fmt_ebb =\nfun pad fmt -> match pad with\n  | No_padding         -> Padding_fmt_EBB (No_padding, fmt)\n  | Lit_padding (s, w) -> Padding_fmt_EBB (Lit_padding (s, w), fmt)\n  | Arg_padding s      -> Padding_fmt_EBB (Arg_padding s, fmt)\n\n(* Create a precision_fmt_ebb from a precision and a format. *)\n(* Copy the precision to disjoin the type parameters of argument and result. *)\nlet make_precision_fmt_ebb : type x y .\n    (x, y) precision -> (_, _, _, _, _, _) fmt ->\n      (_, _, _, _, _) precision_fmt_ebb =\nfun prec fmt -> match prec with\n  | No_precision    -> Precision_fmt_EBB (No_precision, fmt)\n  | Lit_precision p -> Precision_fmt_EBB (Lit_precision p, fmt)\n  | Arg_precision   -> Precision_fmt_EBB (Arg_precision, fmt)\n\n(* Create a padprec_fmt_ebb forma a padding, a precision and a format. *)\n(* Copy the padding and the precision to disjoin type parameters of arguments\n   and result. *)\nlet make_padprec_fmt_ebb : type x y z t .\n    (x, y) padding -> (z, t) precision ->\n    (_, _, _, _, _, _) fmt ->\n    (_, _, _, _, _) padprec_fmt_ebb =\nfun pad prec fmt ->\n  let Precision_fmt_EBB (prec, fmt') = make_precision_fmt_ebb prec fmt in\n  match pad with\n  | No_padding         -> Padprec_fmt_EBB (No_padding, prec, fmt')\n  | Lit_padding (s, w) -> Padprec_fmt_EBB (Lit_padding (s, w), prec, fmt')\n  | Arg_padding s      -> Padprec_fmt_EBB (Arg_padding s, prec, fmt')\n\n(******************************************************************************)\n                             (* Format parsing *)\n\n(* Parse a string representing a format and create a fmt_ebb. *)\n(* Raise an Failure exception in case of invalid format. *)\nlet fmt_ebb_of_string ?legacy_behavior str =\n  (* Parameters naming convention:                                    *)\n  (*   - lit_start: start of the literal sequence.                    *)\n  (*   - str_ind: current index in the string.                        *)\n  (*   - end_ind: end of the current (sub-)format.                    *)\n  (*   - pct_ind: index of the '%' in the current micro-format.       *)\n  (*   - zero:  is the '0' flag defined in the current micro-format.  *)\n  (*   - minus: is the '-' flag defined in the current micro-format.  *)\n  (*   - plus:  is the '+' flag defined in the current micro-format.  *)\n  (*   - hash:  is the '#' flag defined in the current micro-format.  *)\n  (*   - space: is the ' ' flag defined in the current micro-format.  *)\n  (*   - ign:   is the '_' flag defined in the current micro-format.  *)\n  (*   - pad: padding of the current micro-format.                    *)\n  (*   - prec: precision of the current micro-format.                 *)\n  (*   - symb: char representing the conversion ('c', 's', 'd', ...). *)\n  (*   - char_set: set of characters as bitmap (see scanf %[...]).    *)\n\n  let legacy_behavior = match legacy_behavior with\n    | Some flag -> flag\n    | None -> true\n  (*  When this flag is enabled, the format parser tries to behave as\n      the <4.02 implementations, in particular it ignores most benine\n      nonsensical format. When the flag is disabled, it will reject any\n      format that is not accepted by the specification.\n\n      A typical example would be \"%+ d\": specifying both '+' (if the\n      number is positive, pad with a '+' to get the same width as\n      negative numbres) and ' ' (if the number is positive, pad with\n      a space) does not make sense, but the legacy (< 4.02)\n      implementation was happy to just ignore the space.\n  *)\n  in\n\n  (* Raise a Failure with a friendly error message. *)\n  let invalid_format_message str_ind msg =\n    failwith_message\n      \"invalid format %S: at character number %d, %s\"\n      str str_ind msg;\n  in\n\n  (* Used when the end of the format (or the current sub-format) was encoutered\n      unexpectedly. *)\n  let unexpected_end_of_format end_ind =\n    invalid_format_message end_ind\n      \"unexpected end of format\"\n  in\n\n  (* Used for %0c: no other widths are implemented *)\n  let invalid_nonnull_char_width str_ind =\n    invalid_format_message str_ind\n      \"non-zero widths are unsupported for %c conversions\"\n  in\n  (* Raise Failure with a friendly error message about an option dependencie\n     problem. *)\n  let invalid_format_without str_ind c s =\n    failwith_message\n      \"invalid format %S: at character number %d, '%c' without %s\"\n      str str_ind c s\n  in\n\n  (* Raise Failure with a friendly error message about an unexpected\n     character. *)\n  let expected_character str_ind expected read =\n    failwith_message\n     \"invalid format %S: at character number %d, %s expected, read %C\"\n      str str_ind expected read\n  in\n\n  (* Parse the string from beg_ind (included) to end_ind (excluded). *)\n  let rec parse : type e f . int -> int -> (_, _, e, f) fmt_ebb =\n  fun beg_ind end_ind -> parse_literal beg_ind beg_ind end_ind\n\n  (* Read literal characters up to '%' or '@' special characters. *)\n  and parse_literal : type e f . int -> int -> int -> (_, _, e, f) fmt_ebb =\n  fun lit_start str_ind end_ind ->\n    if str_ind = end_ind then add_literal lit_start str_ind End_of_format else\n      match str.[str_ind] with\n      | '%' ->\n        let Fmt_EBB fmt_rest = parse_format str_ind end_ind in\n        add_literal lit_start str_ind fmt_rest\n      | '@' ->\n        let Fmt_EBB fmt_rest = parse_after_at (str_ind + 1) end_ind in\n        add_literal lit_start str_ind fmt_rest\n      | _ ->\n        parse_literal lit_start (str_ind + 1) end_ind\n\n  (* Parse a format after '%' *)\n  and parse_format : type e f . int -> int -> (_, _, e, f) fmt_ebb =\n  fun pct_ind end_ind -> parse_ign pct_ind (pct_ind + 1) end_ind\n\n  and parse_ign : type e f . int -> int -> int -> (_, _, e, f) fmt_ebb =\n  fun pct_ind str_ind end_ind ->\n    if str_ind = end_ind then unexpected_end_of_format end_ind;\n    match str.[str_ind] with\n      | '_' -> parse_flags pct_ind (str_ind+1) end_ind true\n      | _ -> parse_flags pct_ind str_ind end_ind false\n\n  and parse_flags : type e f . int -> int -> int -> bool -> (_, _, e, f) fmt_ebb\n  =\n  fun pct_ind str_ind end_ind ign ->\n    let zero = ref false and minus = ref false\n    and plus = ref false and space = ref false\n    and hash = ref false in\n    let set_flag str_ind flag =\n      (* in legacy mode, duplicate flags are accepted *)\n      if !flag && not legacy_behavior then\n        failwith_message\n          \"invalid format %S: at character number %d, duplicate flag %C\"\n          str str_ind str.[str_ind];\n      flag := true;\n    in\n    let rec read_flags str_ind =\n      if str_ind = end_ind then unexpected_end_of_format end_ind;\n      begin match str.[str_ind] with\n      | '0' -> set_flag str_ind zero;  read_flags (str_ind + 1)\n      | '-' -> set_flag str_ind minus; read_flags (str_ind + 1)\n      | '+' -> set_flag str_ind plus;  read_flags (str_ind + 1)\n      | '#' -> set_flag str_ind hash; read_flags (str_ind + 1)\n      | ' ' -> set_flag str_ind space; read_flags (str_ind + 1)\n      | _ ->\n        parse_padding pct_ind str_ind end_ind\n          !zero !minus !plus !hash !space ign\n      end\n    in\n    read_flags str_ind\n\n  (* Try to read a digital or a '*' padding. *)\n  and parse_padding : type e f .\n      int -> int -> int -> bool -> bool -> bool -> bool -> bool -> bool ->\n        (_, _, e, f) fmt_ebb =\n  fun pct_ind str_ind end_ind zero minus plus hash space ign ->\n    if str_ind = end_ind then unexpected_end_of_format end_ind;\n    let padty = match zero, minus with\n      | false, false -> Right\n      | false, true  -> Left\n      |  true, false -> Zeros\n      |  true, true  ->\n        if legacy_behavior then Left\n        else incompatible_flag pct_ind str_ind '-' \"0\" in\n    match str.[str_ind] with\n    | '0' .. '9' ->\n      let new_ind, width = parse_positive str_ind end_ind 0 in\n      parse_after_padding pct_ind new_ind end_ind minus plus hash space ign\n        (Lit_padding (padty, width))\n    | '*' ->\n      parse_after_padding pct_ind (str_ind + 1) end_ind minus plus hash space\n        ign (Arg_padding padty)\n    | _ ->\n      begin match padty with\n      | Left  ->\n        if not legacy_behavior then\n          invalid_format_without (str_ind - 1) '-' \"padding\";\n        parse_after_padding pct_ind str_ind end_ind minus plus hash space ign\n          No_padding\n      | Zeros ->\n         (* a '0' padding indication not followed by anything should\n           be interpreted as a Right padding of width 0. This is used\n           by scanning conversions %0s and %0c *)\n        parse_after_padding pct_ind str_ind end_ind minus plus hash space ign\n          (Lit_padding (Right, 0))\n      | Right ->\n        parse_after_padding pct_ind str_ind end_ind minus plus hash space ign\n          No_padding\n      end\n\n  (* Is precision defined? *)\n  and parse_after_padding : type x e f .\n      int -> int -> int -> bool -> bool -> bool -> bool -> bool ->\n        (x, _) padding -> (_, _, e, f) fmt_ebb =\n  fun pct_ind str_ind end_ind minus plus hash space ign pad ->\n    if str_ind = end_ind then unexpected_end_of_format end_ind;\n    match str.[str_ind] with\n    | '.' ->\n      parse_precision pct_ind (str_ind + 1) end_ind minus plus hash space ign\n        pad\n    | symb ->\n      parse_conversion pct_ind (str_ind + 1) end_ind plus hash space ign pad\n        No_precision pad symb\n\n  (* Read the digital or '*' precision. *)\n  and parse_precision : type x e f .\n      int -> int -> int -> bool -> bool -> bool -> bool -> bool ->\n        (x, _) padding -> (_, _, e, f) fmt_ebb =\n  fun pct_ind str_ind end_ind minus plus hash space ign pad ->\n    if str_ind = end_ind then unexpected_end_of_format end_ind;\n    let parse_literal minus str_ind =\n      let new_ind, prec = parse_positive str_ind end_ind 0 in\n      parse_after_precision pct_ind new_ind end_ind minus plus hash space ign\n        pad (Lit_precision prec) in\n    match str.[str_ind] with\n    | '0' .. '9' -> parse_literal minus str_ind\n    | ('+' | '-') as symb when legacy_behavior ->\n      (* Legacy mode would accept and ignore '+' or '-' before the\n         integer describing the desired precision; not that this\n         cannot happen for padding width, as '+' and '-' already have\n         a semantics there.\n\n         That said, the idea (supported by this tweak) that width and\n         precision literals are \"integer literals\" in the OCaml sense is\n         still blatantly wrong, as 123_456 or 0xFF are rejected. *)\n      parse_literal (minus || symb = '-') (str_ind + 1)\n    | '*' ->\n      parse_after_precision pct_ind (str_ind + 1) end_ind minus plus hash space\n        ign pad Arg_precision\n    | _ ->\n      if legacy_behavior then\n        (* note that legacy implementation did not ignore '.' without\n           a number (as it does for padding indications), but\n           interprets it as '.0' *)\n        parse_after_precision pct_ind str_ind end_ind minus plus hash space ign\n          pad (Lit_precision 0)\n      else\n        invalid_format_without (str_ind - 1) '.' \"precision\"\n\n  (* Try to read the conversion. *)\n  and parse_after_precision : type x y z t e f .\n      int -> int -> int -> bool -> bool -> bool -> bool -> bool ->\n        (x, y) padding -> (z, t) precision -> (_, _, e, f) fmt_ebb =\n  fun pct_ind str_ind end_ind minus plus hash space ign pad prec ->\n    if str_ind = end_ind then unexpected_end_of_format end_ind;\n    let parse_conv (type u) (type v) (padprec : (u, v) padding) =\n      parse_conversion pct_ind (str_ind + 1) end_ind plus hash space ign pad\n        prec padprec str.[str_ind] in\n    (* in legacy mode, some formats (%s and %S) accept a weird mix of\n       padding and precision, which is merged as a single padding\n       information. For example, in %.10s the precision is implicitly\n       understood as padding %10s, but the left-padding component may\n       be specified either as a left padding or a negative precision:\n       %-.3s and %.-3s are equivalent to %-3s *)\n    match pad with\n    | No_padding -> (\n      match minus, prec with\n        | _, No_precision -> parse_conv No_padding\n        | false, Lit_precision n -> parse_conv (Lit_padding (Right, n))\n        | true, Lit_precision n -> parse_conv (Lit_padding (Left, n))\n        | false, Arg_precision -> parse_conv (Arg_padding Right)\n        | true, Arg_precision -> parse_conv (Arg_padding Left)\n    )\n    | pad -> parse_conv pad\n\n  (* Case analysis on conversion. *)\n  and parse_conversion : type x y z t u v e f .\n      int -> int -> int -> bool -> bool -> bool -> bool -> (x, y) padding ->\n        (z, t) precision -> (u, v) padding -> char -> (_, _, e, f) fmt_ebb =\n  fun pct_ind str_ind end_ind plus hash space ign pad prec padprec symb ->\n    (* Flags used to check option usages/compatibilities. *)\n    let plus_used  = ref false and hash_used = ref false\n    and space_used = ref false and ign_used   = ref false\n    and pad_used   = ref false and prec_used  = ref false in\n\n    (* Access to options, update flags. *)\n    let get_plus    () = plus_used  := true; plus\n    and get_hash   () = hash_used := true; hash\n    and get_space   () = space_used := true; space\n    and get_ign     () = ign_used   := true; ign\n    and get_pad     () = pad_used   := true; pad\n    and get_prec    () = prec_used  := true; prec\n    and get_padprec () = pad_used   := true; padprec in\n\n    let get_int_pad () =\n      (* %5.3d is accepted and meaningful: pad to length 5 with\n         spaces, but first pad with zeros upto length 3 (0-padding\n         is the interpretation of \"precision\" for integer formats).\n\n         %05.3d is redundant: pad to length 5 *with zeros*, but\n         first pad with zeros... To add insult to the injury, the\n         legacy implementation ignores the 0-padding indication and\n         does the 5 padding with spaces instead. We reuse this\n         interpretation for compatiblity, but statically reject this\n         format when the legacy mode is disabled, to protect strict\n         users from this corner case. *)\n       match get_pad (), get_prec () with\n         | pad, No_precision -> pad\n         | No_padding, _     -> No_padding\n         | Lit_padding (Zeros, n), _ ->\n           if legacy_behavior then Lit_padding (Right, n)\n           else incompatible_flag pct_ind str_ind '0' \"precision\"\n         | Arg_padding Zeros, _ ->\n           if legacy_behavior then Arg_padding Right\n           else incompatible_flag pct_ind str_ind '0' \"precision\"\n         | Lit_padding _ as pad, _ -> pad\n         | Arg_padding _ as pad, _ -> pad in\n\n    (* Check that padty <> Zeros. *)\n    let check_no_0 symb (type a) (type b) (pad : (a, b) padding) =\n      match pad with\n      | No_padding -> pad\n      | Lit_padding ((Left | Right), _) -> pad\n      | Arg_padding (Left | Right) -> pad\n      | Lit_padding (Zeros, width) ->\n        if legacy_behavior then Lit_padding (Right, width)\n        else incompatible_flag pct_ind str_ind symb \"0\"\n      | Arg_padding Zeros ->\n        if legacy_behavior then Arg_padding Right\n        else incompatible_flag pct_ind str_ind symb \"0\"\n    in\n\n    (* Get padding as a pad_option (see \"%_\", \"%{\", \"%(\" and \"%[\").\n       (no need for legacy mode tweaking, those were rejected by the\n       legacy parser as well) *)\n    let opt_of_pad c (type a) (type b) (pad : (a, b) padding) = match pad with\n      | No_padding -> None\n      | Lit_padding (Right, width) -> Some width\n      | Lit_padding (Zeros, width) ->\n        if legacy_behavior then Some width\n        else incompatible_flag pct_ind str_ind c \"'0'\"\n      | Lit_padding (Left, width) ->\n        if legacy_behavior then Some width\n        else incompatible_flag pct_ind str_ind c \"'-'\"\n      | Arg_padding _ -> incompatible_flag pct_ind str_ind c \"'*'\"\n    in\n    let get_pad_opt c = opt_of_pad c (get_pad ()) in\n    let get_padprec_opt c = opt_of_pad c (get_padprec ()) in\n\n    (* Get precision as a prec_option (see \"%_f\").\n       (no need for legacy mode tweaking, those were rejected by the\n       legacy parser as well) *)\n    let get_prec_opt () = match get_prec () with\n      | No_precision       -> None\n      | Lit_precision ndec -> Some ndec\n      | Arg_precision      -> incompatible_flag pct_ind str_ind '_' \"'*'\"\n    in\n\n    let fmt_result = match symb with\n    | ',' ->\n      parse str_ind end_ind\n    | 'c' ->\n      let char_format fmt_rest = (* %c *)\n        if get_ign ()\n        then Fmt_EBB (Ignored_param (Ignored_char, fmt_rest))\n        else Fmt_EBB (Char fmt_rest)\n      in\n      let scan_format fmt_rest = (* %0c *)\n        if get_ign ()\n        then Fmt_EBB (Ignored_param (Ignored_scan_next_char, fmt_rest))\n        else Fmt_EBB (Scan_next_char fmt_rest)\n      in\n      let Fmt_EBB fmt_rest = parse str_ind end_ind in\n      begin match get_pad_opt 'c' with\n        | None -> char_format fmt_rest\n        | Some 0 -> scan_format fmt_rest\n        | Some _n ->\n           if not legacy_behavior\n           then invalid_nonnull_char_width str_ind\n           else (* legacy ignores %c widths *) char_format fmt_rest\n      end\n    | 'C' ->\n      let Fmt_EBB fmt_rest = parse str_ind end_ind in\n      if get_ign () then Fmt_EBB (Ignored_param (Ignored_caml_char,fmt_rest))\n      else Fmt_EBB (Caml_char fmt_rest)\n    | 's' ->\n      let pad = check_no_0 symb (get_padprec ()) in\n      let Fmt_EBB fmt_rest = parse str_ind end_ind in\n      if get_ign () then\n        let ignored = Ignored_string (get_padprec_opt '_') in\n        Fmt_EBB (Ignored_param (ignored, fmt_rest))\n      else\n        let Padding_fmt_EBB (pad', fmt_rest') =\n          make_padding_fmt_ebb pad fmt_rest in\n        Fmt_EBB (String (pad', fmt_rest'))\n    | 'S' ->\n      let pad = check_no_0 symb (get_padprec ()) in\n      let Fmt_EBB fmt_rest = parse str_ind end_ind in\n      if get_ign () then\n        let ignored = Ignored_caml_string (get_padprec_opt '_') in\n        Fmt_EBB (Ignored_param (ignored, fmt_rest))\n      else\n        let Padding_fmt_EBB (pad', fmt_rest') =\n          make_padding_fmt_ebb pad fmt_rest in\n        Fmt_EBB (Caml_string (pad', fmt_rest'))\n    | 'd' | 'i' | 'x' | 'X' | 'o' | 'u' ->\n      let iconv = compute_int_conv pct_ind str_ind (get_plus ()) (get_hash ())\n        (get_space ()) symb in\n      let Fmt_EBB fmt_rest = parse str_ind end_ind in\n      if get_ign () then\n        let ignored = Ignored_int (iconv, get_pad_opt '_') in\n        Fmt_EBB (Ignored_param (ignored, fmt_rest))\n      else\n        let Padprec_fmt_EBB (pad', prec', fmt_rest') =\n          make_padprec_fmt_ebb (get_int_pad ()) (get_prec ()) fmt_rest in\n        Fmt_EBB (Int (iconv, pad', prec', fmt_rest'))\n    | 'N' ->\n      let Fmt_EBB fmt_rest = parse str_ind end_ind in\n      let counter = Token_counter in\n      if get_ign () then\n        let ignored = Ignored_scan_get_counter counter in\n        Fmt_EBB (Ignored_param (ignored, fmt_rest))\n      else\n        Fmt_EBB (Scan_get_counter (counter, fmt_rest))\n    | 'l' | 'n' | 'L' when str_ind=end_ind || not (is_int_base str.[str_ind]) ->\n      let Fmt_EBB fmt_rest = parse str_ind end_ind in\n      let counter = counter_of_char symb in\n      if get_ign () then\n        let ignored = Ignored_scan_get_counter counter in\n        Fmt_EBB (Ignored_param (ignored, fmt_rest))\n      else\n        Fmt_EBB (Scan_get_counter (counter, fmt_rest))\n    | 'l' ->\n      let iconv =\n        compute_int_conv pct_ind (str_ind + 1) (get_plus ()) (get_hash ())\n          (get_space ()) str.[str_ind] in\n      let Fmt_EBB fmt_rest = parse (str_ind + 1) end_ind in\n      if get_ign () then\n        let ignored = Ignored_int32 (iconv, get_pad_opt '_') in\n        Fmt_EBB (Ignored_param (ignored, fmt_rest))\n      else\n        let Padprec_fmt_EBB (pad', prec', fmt_rest') =\n          make_padprec_fmt_ebb (get_int_pad ()) (get_prec ()) fmt_rest in\n        Fmt_EBB (Int32 (iconv, pad', prec', fmt_rest'))\n    | 'n' ->\n      let iconv =\n        compute_int_conv pct_ind (str_ind + 1) (get_plus ())\n          (get_hash ()) (get_space ()) str.[str_ind] in\n      let Fmt_EBB fmt_rest = parse (str_ind + 1) end_ind in\n      if get_ign () then\n        let ignored = Ignored_nativeint (iconv, get_pad_opt '_') in\n        Fmt_EBB (Ignored_param (ignored, fmt_rest))\n      else\n        let Padprec_fmt_EBB (pad', prec', fmt_rest') =\n          make_padprec_fmt_ebb (get_int_pad ()) (get_prec ()) fmt_rest in\n        Fmt_EBB (Nativeint (iconv, pad', prec', fmt_rest'))\n    | 'L' ->\n      let iconv =\n        compute_int_conv pct_ind (str_ind + 1) (get_plus ()) (get_hash ())\n          (get_space ()) str.[str_ind] in\n      let Fmt_EBB fmt_rest = parse (str_ind + 1) end_ind in\n      if get_ign () then\n        let ignored = Ignored_int64 (iconv, get_pad_opt '_') in\n        Fmt_EBB (Ignored_param (ignored, fmt_rest))\n      else\n        let Padprec_fmt_EBB (pad', prec', fmt_rest') =\n          make_padprec_fmt_ebb (get_int_pad ()) (get_prec ()) fmt_rest in\n        Fmt_EBB (Int64 (iconv, pad', prec', fmt_rest'))\n    | 'f' | 'e' | 'E' | 'g' | 'G' | 'F' | 'h' | 'H' ->\n      let fconv = compute_float_conv pct_ind str_ind (get_plus ())\n        (get_space ()) symb in\n      let Fmt_EBB fmt_rest = parse str_ind end_ind in\n      if get_ign () then\n        let ignored = Ignored_float (get_pad_opt '_', get_prec_opt ()) in\n        Fmt_EBB (Ignored_param (ignored, fmt_rest))\n      else\n        let Padprec_fmt_EBB (pad', prec', fmt_rest') =\n          make_padprec_fmt_ebb (get_pad ()) (get_prec ()) fmt_rest in\n        Fmt_EBB (Float (fconv, pad', prec', fmt_rest'))\n    | 'b' | 'B' ->\n      let Fmt_EBB fmt_rest = parse str_ind end_ind in\n      if get_ign () then Fmt_EBB (Ignored_param (Ignored_bool, fmt_rest))\n      else Fmt_EBB (Bool fmt_rest)\n    | 'a' ->\n      let Fmt_EBB fmt_rest = parse str_ind end_ind in\n      Fmt_EBB (Alpha fmt_rest)\n    | 't' ->\n      let Fmt_EBB fmt_rest = parse str_ind end_ind in\n      Fmt_EBB (Theta fmt_rest)\n    | 'r' ->\n      let Fmt_EBB fmt_rest = parse str_ind end_ind in\n      if get_ign () then Fmt_EBB (Ignored_param (Ignored_reader, fmt_rest))\n      else Fmt_EBB (Reader fmt_rest)\n    | '!' ->\n      let Fmt_EBB fmt_rest = parse str_ind end_ind in\n      Fmt_EBB (Flush fmt_rest)\n    | ('%' | '@') as c ->\n      let Fmt_EBB fmt_rest = parse str_ind end_ind in\n      Fmt_EBB (Char_literal (c, fmt_rest))\n    | '{' ->\n      let sub_end = search_subformat_end str_ind end_ind '}' in\n      let Fmt_EBB sub_fmt = parse str_ind sub_end in\n      let Fmt_EBB fmt_rest = parse (sub_end + 2) end_ind in\n      let sub_fmtty = fmtty_of_fmt sub_fmt in\n      if get_ign () then\n        let ignored = Ignored_format_arg (get_pad_opt '_', sub_fmtty) in\n        Fmt_EBB (Ignored_param (ignored, fmt_rest))\n      else\n        Fmt_EBB (Format_arg (get_pad_opt '{', sub_fmtty, fmt_rest))\n    | '(' ->\n      let sub_end = search_subformat_end str_ind end_ind ')' in\n      let Fmt_EBB fmt_rest = parse (sub_end + 2) end_ind in\n      let Fmt_EBB sub_fmt = parse str_ind sub_end in\n      let sub_fmtty = fmtty_of_fmt sub_fmt in\n      if get_ign () then\n        let ignored = Ignored_format_subst (get_pad_opt '_', sub_fmtty) in\n        Fmt_EBB (Ignored_param (ignored, fmt_rest))\n      else\n        Fmt_EBB (Format_subst (get_pad_opt '(', sub_fmtty, fmt_rest))\n    | '[' ->\n      let next_ind, char_set = parse_char_set str_ind end_ind in\n      let Fmt_EBB fmt_rest = parse next_ind end_ind in\n      if get_ign () then\n        let ignored = Ignored_scan_char_set (get_pad_opt '_', char_set) in\n        Fmt_EBB (Ignored_param (ignored, fmt_rest))\n      else\n        Fmt_EBB (Scan_char_set (get_pad_opt '[', char_set, fmt_rest))\n    | '-' | '+' | '#' | ' ' | '_' ->\n      failwith_message\n        \"invalid format %S: at character number %d, \\\n         flag %C is only allowed after the '%%', before padding and precision\"\n        str pct_ind symb\n    | _ ->\n      failwith_message\n        \"invalid format %S: at character number %d, \\\n         invalid conversion \\\"%%%c\\\"\" str (str_ind - 1) symb\n    in\n    (* Check for unused options, and reject them as incompatible.\n\n       Such checks need to be disabled in legacy mode, as the legacy\n       parser silently ignored incompatible flags. *)\n    if not legacy_behavior then begin\n    if not !plus_used && plus then\n      incompatible_flag pct_ind str_ind symb \"'+'\";\n    if not !hash_used && hash then\n      incompatible_flag pct_ind str_ind symb \"'#'\";\n    if not !space_used && space then\n      incompatible_flag pct_ind str_ind symb \"' '\";\n    if not !pad_used  && Padding_EBB pad <> Padding_EBB No_padding then\n      incompatible_flag pct_ind str_ind symb \"`padding'\";\n    if not !prec_used && Precision_EBB prec <> Precision_EBB No_precision then\n      incompatible_flag pct_ind str_ind (if ign then '_' else symb)\n        \"`precision'\";\n    if ign && plus then incompatible_flag pct_ind str_ind '_' \"'+'\";\n    end;\n    (* this last test must not be disabled in legacy mode,\n       as ignoring it would typically result in a different typing\n       than what the legacy parser used *)\n    if not !ign_used && ign then\n      begin match symb with\n        (* argument-less formats can safely be ignored in legacy mode *)\n        | ('@' | '%' | '!' | ',') when legacy_behavior -> ()\n        | _ ->\n          incompatible_flag pct_ind str_ind symb \"'_'\"\n      end;\n    fmt_result\n\n  (* Parse formatting informations (after '@'). *)\n  and parse_after_at : type e f . int -> int -> (_, _, e, f) fmt_ebb =\n  fun str_ind end_ind ->\n    if str_ind = end_ind then Fmt_EBB (Char_literal ('@', End_of_format))\n    else\n      match str.[str_ind] with\n      | '[' ->\n        parse_tag false (str_ind + 1) end_ind\n      | ']' ->\n        let Fmt_EBB fmt_rest = parse (str_ind + 1) end_ind in\n        Fmt_EBB (Formatting_lit (Close_box, fmt_rest))\n      | '{' ->\n        parse_tag true (str_ind + 1) end_ind\n      | '}' ->\n        let Fmt_EBB fmt_rest = parse (str_ind + 1) end_ind in\n        Fmt_EBB (Formatting_lit (Close_tag, fmt_rest))\n      | ',' ->\n        let Fmt_EBB fmt_rest = parse (str_ind + 1) end_ind in\n        Fmt_EBB (Formatting_lit (Break (\"@,\", 0, 0), fmt_rest))\n      | ' ' ->\n        let Fmt_EBB fmt_rest = parse (str_ind + 1) end_ind in\n        Fmt_EBB (Formatting_lit (Break (\"@ \", 1, 0), fmt_rest))\n      | ';' ->\n        parse_good_break (str_ind + 1) end_ind\n      | '?' ->\n        let Fmt_EBB fmt_rest = parse (str_ind + 1) end_ind in\n        Fmt_EBB (Formatting_lit (FFlush, fmt_rest))\n      | '\\n' ->\n        let Fmt_EBB fmt_rest = parse (str_ind + 1) end_ind in\n        Fmt_EBB (Formatting_lit (Force_newline, fmt_rest))\n      | '.' ->\n        let Fmt_EBB fmt_rest = parse (str_ind + 1) end_ind in\n        Fmt_EBB (Formatting_lit (Flush_newline, fmt_rest))\n      | '<' ->\n        parse_magic_size (str_ind + 1) end_ind\n      | '@' ->\n        let Fmt_EBB fmt_rest = parse (str_ind + 1) end_ind in\n        Fmt_EBB (Formatting_lit (Escaped_at, fmt_rest))\n      | '%' when str_ind + 1 < end_ind && str.[str_ind + 1] = '%' ->\n        let Fmt_EBB fmt_rest = parse (str_ind + 2) end_ind in\n        Fmt_EBB (Formatting_lit (Escaped_percent, fmt_rest))\n      | '%' ->\n        let Fmt_EBB fmt_rest = parse str_ind end_ind in\n        Fmt_EBB (Char_literal ('@', fmt_rest))\n      | c ->\n        let Fmt_EBB fmt_rest = parse (str_ind + 1) end_ind in\n        Fmt_EBB (Formatting_lit (Scan_indic c, fmt_rest))\n\n  and check_open_box : type a b c d e f . (a, b, c, d, e, f) fmt -> unit =\n  fun fmt -> match fmt with\n    | String_literal (str, End_of_format) -> (\n      try ignore (open_box_of_string str) with Failure _ ->\n        ((* Emit warning: invalid open box *))\n    )\n    | _ -> ()\n\n  (* Try to read the optionnal <name> after \"@{\" or \"@[\". *)\n  and parse_tag : type e f . bool -> int -> int -> (_, _, e, f) fmt_ebb =\n  fun is_open_tag str_ind end_ind ->\n    try\n      if str_ind = end_ind then raise Not_found;\n      match str.[str_ind] with\n      | '<' ->\n        let ind = String.index_from str (str_ind + 1) '>' in\n        if ind >= end_ind then raise Not_found;\n        let sub_str = String.sub str str_ind (ind - str_ind + 1) in\n        let Fmt_EBB fmt_rest = parse (ind + 1) end_ind in\n        let Fmt_EBB sub_fmt = parse str_ind (ind + 1) in\n        let sub_format = Format (sub_fmt, sub_str) in\n        let formatting = if is_open_tag then Open_tag sub_format else (\n          check_open_box sub_fmt;\n          Open_box sub_format) in\n        Fmt_EBB (Formatting_gen (formatting, fmt_rest))\n      | _ ->\n        raise Not_found\n    with Not_found ->\n      let Fmt_EBB fmt_rest = parse str_ind end_ind in\n      let sub_format = Format (End_of_format, \"\") in\n      let formatting =\n        if is_open_tag then Open_tag sub_format else Open_box sub_format in\n      Fmt_EBB (Formatting_gen (formatting, fmt_rest))\n\n  (* Try to read the optionnal <width offset> after \"@;\". *)\n  and parse_good_break : type e f . int -> int -> (_, _, e, f) fmt_ebb =\n  fun str_ind end_ind ->\n    let next_ind, formatting_lit =\n      try\n        if str_ind = end_ind || str.[str_ind] <> '<' then raise Not_found;\n        let str_ind_1 = parse_spaces (str_ind + 1) end_ind in\n        match str.[str_ind_1] with\n        | '0' .. '9' | '-' -> (\n          let str_ind_2, width = parse_integer str_ind_1 end_ind in\n            let str_ind_3 = parse_spaces str_ind_2 end_ind in\n            match str.[str_ind_3] with\n              | '>' ->\n                let s = String.sub str (str_ind-2) (str_ind_3-str_ind+3) in\n                str_ind_3 + 1, Break (s, width, 0)\n              | '0' .. '9' | '-' ->\n                let str_ind_4, offset = parse_integer str_ind_3 end_ind in\n                let str_ind_5 = parse_spaces str_ind_4 end_ind in\n                if str.[str_ind_5] <> '>' then raise Not_found;\n                let s = String.sub str (str_ind-2) (str_ind_5-str_ind+3) in\n                str_ind_5 + 1, Break (s, width, offset)\n              | _ -> raise Not_found\n        )\n        | _ -> raise Not_found\n      with Not_found | Failure _ ->\n        str_ind, Break (\"@;\", 1, 0)\n    in\n    let Fmt_EBB fmt_rest = parse next_ind end_ind in\n    Fmt_EBB (Formatting_lit (formatting_lit, fmt_rest))\n\n  (* Parse the size in a <n>. *)\n  and parse_magic_size : type e f . int -> int -> (_, _, e, f) fmt_ebb =\n  fun str_ind end_ind ->\n    match\n      try\n        let str_ind_1 = parse_spaces str_ind end_ind in\n        match str.[str_ind_1] with\n        | '0' .. '9' | '-' ->\n          let str_ind_2, size = parse_integer str_ind_1 end_ind in\n          let str_ind_3 = parse_spaces str_ind_2 end_ind in\n          if str.[str_ind_3] <> '>' then raise Not_found;\n          let s = String.sub str (str_ind - 2) (str_ind_3 - str_ind + 3) in\n          Some (str_ind_3 + 1, Magic_size (s, size))\n        | _ -> None\n      with Not_found | Failure _ ->\n        None\n    with\n    | Some (next_ind, formatting_lit) ->\n      let Fmt_EBB fmt_rest = parse next_ind end_ind in\n      Fmt_EBB (Formatting_lit (formatting_lit, fmt_rest))\n    | None ->\n      let Fmt_EBB fmt_rest = parse str_ind end_ind in\n      Fmt_EBB (Formatting_lit (Scan_indic '<', fmt_rest))\n\n  (* Parse and construct a char set. *)\n  and parse_char_set str_ind end_ind =\n    if str_ind = end_ind then unexpected_end_of_format end_ind;\n\n    let char_set = create_char_set () in\n    let add_char c =\n      add_in_char_set char_set c;\n    in\n    let add_range c c' =\n      for i = int_of_char c to int_of_char c' do\n        add_in_char_set char_set (char_of_int i);\n      done;\n    in\n\n    let fail_single_percent str_ind =\n      failwith_message\n        \"invalid format %S: '%%' alone is not accepted in character sets, \\\n         use %%%% instead at position %d.\" str str_ind;\n    in\n\n    (* Parse the first character of a char set. *)\n    let rec parse_char_set_start str_ind end_ind =\n      if str_ind = end_ind then unexpected_end_of_format end_ind;\n      let c = str.[str_ind] in\n      parse_char_set_after_char (str_ind + 1) end_ind c;\n\n    (* Parse the content of a char set until the first ']'. *)\n    and parse_char_set_content str_ind end_ind =\n      if str_ind = end_ind then unexpected_end_of_format end_ind;\n      match str.[str_ind] with\n      | ']' ->\n        str_ind + 1\n      | '-' ->\n        add_char '-';\n        parse_char_set_content (str_ind + 1) end_ind;\n      | c ->\n        parse_char_set_after_char (str_ind + 1) end_ind c;\n\n    (* Test for range in char set. *)\n    and parse_char_set_after_char str_ind end_ind c =\n      if str_ind = end_ind then unexpected_end_of_format end_ind;\n      match str.[str_ind] with\n      | ']' ->\n        add_char c;\n        str_ind + 1\n      | '-' ->\n        parse_char_set_after_minus (str_ind + 1) end_ind c\n      | ('%' | '@') as c' when c = '%' ->\n        add_char c';\n        parse_char_set_content (str_ind + 1) end_ind\n      | c' ->\n        if c = '%' then fail_single_percent str_ind;\n        (* note that '@' alone is accepted, as done by the legacy\n           implementation; the documentation specifically requires %@\n           so we could warn on that *)\n        add_char c;\n        parse_char_set_after_char (str_ind + 1) end_ind c'\n\n    (* Manage range in char set (except if the '-' the last char before ']') *)\n    and parse_char_set_after_minus str_ind end_ind c =\n      if str_ind = end_ind then unexpected_end_of_format end_ind;\n      match str.[str_ind] with\n      | ']' ->\n        add_char c;\n        add_char '-';\n        str_ind + 1\n      | '%' ->\n        if str_ind + 1 = end_ind then unexpected_end_of_format end_ind;\n        begin match str.[str_ind + 1] with\n          | ('%' | '@') as c' ->\n            add_range c c';\n            parse_char_set_content (str_ind + 2) end_ind\n          | _ -> fail_single_percent str_ind\n        end\n      | c' ->\n        add_range c c';\n        parse_char_set_content (str_ind + 1) end_ind\n    in\n    let str_ind, reverse =\n      if str_ind = end_ind then unexpected_end_of_format end_ind;\n      match str.[str_ind] with\n        | '^' -> str_ind + 1, true\n        | _ -> str_ind, false in\n    let next_ind = parse_char_set_start str_ind end_ind in\n    let char_set = freeze_char_set char_set in\n    next_ind, (if reverse then rev_char_set char_set else char_set)\n\n  (* Consume all next spaces, raise an Failure if end_ind is reached. *)\n  and parse_spaces str_ind end_ind =\n    if str_ind = end_ind then unexpected_end_of_format end_ind;\n    if str.[str_ind] = ' ' then parse_spaces (str_ind + 1) end_ind else str_ind\n\n  (* Read a positive integer from the string, raise a Failure if end_ind is\n     reached. *)\n  and parse_positive str_ind end_ind acc =\n    if str_ind = end_ind then unexpected_end_of_format end_ind;\n    match str.[str_ind] with\n    | '0' .. '9' as c ->\n      let new_acc = acc * 10 + (int_of_char c - int_of_char '0') in\n      if new_acc > Sys.max_string_length then\n        failwith_message\n          \"invalid format %S: integer %d is greater than the limit %d\"\n          str new_acc Sys.max_string_length\n      else\n        parse_positive (str_ind + 1) end_ind new_acc\n    | _ -> str_ind, acc\n\n  (* Read a positive or negative integer from the string, raise a Failure\n     if end_ind is reached. *)\n  and parse_integer str_ind end_ind =\n    if str_ind = end_ind then unexpected_end_of_format end_ind;\n    match str.[str_ind] with\n    | '0' .. '9' -> parse_positive str_ind end_ind 0\n    | '-' -> (\n      if str_ind + 1 = end_ind then unexpected_end_of_format end_ind;\n      match str.[str_ind + 1] with\n      | '0' .. '9' ->\n        let next_ind, n = parse_positive (str_ind + 1) end_ind 0 in\n        next_ind, -n\n      | c ->\n        expected_character (str_ind + 1) \"digit\" c\n    )\n    | _ -> assert false\n\n  (* Add a literal to a format from a literal character sub-sequence. *)\n  and add_literal : type a d e f .\n      int -> int -> (a, _, _, d, e, f) fmt ->\n      (_, _, e, f) fmt_ebb =\n  fun lit_start str_ind fmt -> match str_ind - lit_start with\n    | 0    -> Fmt_EBB fmt\n    | 1    -> Fmt_EBB (Char_literal (str.[lit_start], fmt))\n    | size -> Fmt_EBB (String_literal (String.sub str lit_start size, fmt))\n\n  (* Search the end of the current sub-format\n     (i.e. the corresponding \"%}\" or \"%)\") *)\n  and search_subformat_end str_ind end_ind c =\n    if str_ind = end_ind then\n      failwith_message\n        \"invalid format %S: unclosed sub-format, \\\n         expected \\\"%%%c\\\" at character number %d\" str c end_ind;\n    match str.[str_ind] with\n    | '%' ->\n      if str_ind + 1 = end_ind then unexpected_end_of_format end_ind;\n      if str.[str_ind + 1] = c then (* End of format found *) str_ind else\n        begin match str.[str_ind + 1] with\n        | '_' ->\n          (* Search for \"%_(\" or \"%_{\". *)\n          if str_ind + 2 = end_ind then unexpected_end_of_format end_ind;\n          begin match str.[str_ind + 2] with\n          | '{' ->\n            let sub_end = search_subformat_end (str_ind + 3) end_ind '}' in\n            search_subformat_end (sub_end + 2) end_ind c\n          | '(' ->\n            let sub_end = search_subformat_end (str_ind + 3) end_ind ')' in\n            search_subformat_end (sub_end + 2) end_ind c\n          | _ -> search_subformat_end (str_ind + 3) end_ind c\n          end\n        | '{' ->\n          (* %{...%} sub-format found. *)\n          let sub_end = search_subformat_end (str_ind + 2) end_ind '}' in\n          search_subformat_end (sub_end + 2) end_ind c\n        | '(' ->\n          (* %(...%) sub-format found. *)\n          let sub_end = search_subformat_end (str_ind + 2) end_ind ')' in\n          search_subformat_end (sub_end + 2) end_ind c\n        | '}' ->\n          (* Error: %(...%}. *)\n          expected_character (str_ind + 1) \"character ')'\" '}';\n        | ')' ->\n          (* Error: %{...%). *)\n          expected_character (str_ind + 1) \"character '}'\" ')';\n        | _ ->\n          search_subformat_end (str_ind + 2) end_ind c\n        end\n    | _ -> search_subformat_end (str_ind + 1) end_ind c\n\n  (* Check if symb is a valid int conversion after \"%l\", \"%n\" or \"%L\" *)\n  and is_int_base symb = match symb with\n    | 'd' | 'i' | 'x' | 'X' | 'o' | 'u' -> true\n    | _ -> false\n\n  (* Convert a char (l, n or L) to its associated counter. *)\n  and counter_of_char symb = match symb with\n    | 'l' -> Line_counter  | 'n' -> Char_counter\n    | 'L' -> Token_counter | _ -> assert false\n\n  (* Convert (plus, symb) to its associated int_conv. *)\n  and compute_int_conv pct_ind str_ind plus hash space symb =\n    match plus, hash, space, symb with\n    | false, false, false, 'd' -> Int_d  | false, false, false, 'i' -> Int_i\n    | false, false,  true, 'd' -> Int_sd | false, false,  true, 'i' -> Int_si\n    |  true, false, false, 'd' -> Int_pd |  true, false, false, 'i' -> Int_pi\n    | false, false, false, 'x' -> Int_x  | false, false, false, 'X' -> Int_X\n    | false,  true, false, 'x' -> Int_Cx | false,  true, false, 'X' -> Int_CX\n    | false, false, false, 'o' -> Int_o\n    | false,  true, false, 'o' -> Int_Co\n    | false, false, false, 'u' -> Int_u\n    | _, true, _, 'x' when legacy_behavior -> Int_Cx\n    | _, true, _, 'X' when legacy_behavior -> Int_CX\n    | _, true, _, 'o' when legacy_behavior -> Int_Co\n    | _, true, _, ('d' | 'i' | 'u') ->\n      if legacy_behavior then (* ignore *)\n        compute_int_conv pct_ind str_ind plus false space symb\n      else incompatible_flag pct_ind str_ind symb \"'#'\"\n    | true, _, true, _ ->\n      if legacy_behavior then\n        (* plus and space: legacy implementation prefers plus *)\n        compute_int_conv pct_ind str_ind plus hash false symb\n      else incompatible_flag pct_ind str_ind ' ' \"'+'\"\n    | false, _, true, _    ->\n      if legacy_behavior then (* ignore *)\n        compute_int_conv pct_ind str_ind plus hash false symb\n      else incompatible_flag pct_ind str_ind symb \"' '\"\n    | true, _, false, _    ->\n      if legacy_behavior then (* ignore *)\n        compute_int_conv pct_ind str_ind false hash space symb\n      else incompatible_flag pct_ind str_ind symb \"'+'\"\n    | false, _, false, _ -> assert false\n\n  (* Convert (plus, symb) to its associated float_conv. *)\n  and compute_float_conv pct_ind str_ind plus space symb =\n  match plus, space, symb with\n    | false, false, 'f' -> Float_f  | false, false, 'e' -> Float_e\n    | false,  true, 'f' -> Float_sf | false,  true, 'e' -> Float_se\n    |  true, false, 'f' -> Float_pf |  true, false, 'e' -> Float_pe\n    | false, false, 'E' -> Float_E  | false, false, 'g' -> Float_g\n    | false,  true, 'E' -> Float_sE | false,  true, 'g' -> Float_sg\n    |  true, false, 'E' -> Float_pE |  true, false, 'g' -> Float_pg\n    | false, false, 'G' -> Float_G\n    | false,  true, 'G' -> Float_sG\n    |  true, false, 'G' -> Float_pG\n    | false, false, 'h' -> Float_h\n    | false,  true, 'h' -> Float_sh\n    |  true, false, 'h' -> Float_ph\n    | false, false, 'H' -> Float_H\n    | false,  true, 'H' -> Float_sH\n    |  true, false, 'H' -> Float_pH\n    | false, false, 'F' -> Float_F\n    |  true,  true, _ ->\n      if legacy_behavior then\n        (* plus and space: legacy implementation prefers plus *)\n        compute_float_conv pct_ind str_ind plus false symb\n      else incompatible_flag pct_ind str_ind ' ' \"'+'\"\n    | false,  true, _ ->\n      if legacy_behavior then (* ignore *)\n        compute_float_conv pct_ind str_ind plus false symb\n      else incompatible_flag pct_ind str_ind symb \"' '\"\n    |  true, false, _ ->\n      if legacy_behavior then (* ignore *)\n        compute_float_conv pct_ind str_ind false space symb\n      else incompatible_flag pct_ind str_ind symb \"'+'\"\n    | false, false, _ -> assert false\n\n  (* Raise a Failure with a friendly error message about incompatible options.*)\n  and incompatible_flag : type a . int -> int -> char -> string -> a =\n    fun pct_ind str_ind symb option ->\n      let subfmt = String.sub str pct_ind (str_ind - pct_ind) in\n      failwith_message\n        \"invalid format %S: at character number %d, \\\n         %s is incompatible with '%c' in sub-format %S\"\n        str pct_ind option symb subfmt;\n\n  in parse 0 (String.length str)\n\n(******************************************************************************)\n                  (* Guarded string to format conversions *)\n\n(* Convert a string to a format according to an fmtty. *)\n(* Raise a Failure with an error message in case of type mismatch. *)\nlet format_of_string_fmtty str fmtty =\n  let Fmt_EBB fmt = fmt_ebb_of_string str in\n  try Format (type_format fmt fmtty, str)\n  with Type_mismatch ->\n    failwith_message\n      \"bad input: format type mismatch between %S and %S\"\n      str (string_of_fmtty fmtty)\n\n(* Convert a string to a format compatible with an other format. *)\n(* Raise a Failure with an error message in case of type mismatch. *)\nlet format_of_string_format str (Format (fmt', str')) =\n  let Fmt_EBB fmt = fmt_ebb_of_string str in\n  try Format (type_format fmt (fmtty_of_fmt fmt'), str)\n  with Type_mismatch ->\n    failwith_message\n      \"bad input: format type mismatch between %S and %S\" str str'\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*   Xavier Leroy and Pierre Weis, projet Cristal, INRIA Rocquencourt     *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\nopen CamlinternalFormatBasics\nopen CamlinternalFormat\n\nlet kfprintf k o (Format (fmt, _)) =\n  make_printf (fun o acc -> output_acc o acc; k o) o End_of_acc fmt\nlet kbprintf k b (Format (fmt, _)) =\n  make_printf (fun b acc -> bufput_acc b acc; k b) b End_of_acc fmt\nlet ikfprintf k oc (Format (fmt, _)) =\n  make_iprintf k oc fmt\n\nlet fprintf oc fmt = kfprintf ignore oc fmt\nlet bprintf b fmt = kbprintf ignore b fmt\nlet ifprintf oc fmt = ikfprintf ignore oc fmt\nlet printf fmt = fprintf stdout fmt\nlet eprintf fmt = fprintf stderr fmt\n\nlet ksprintf k (Format (fmt, _)) =\n  let k' () acc =\n    let buf = Buffer.create 64 in\n    strput_acc buf acc;\n    k (Buffer.contents buf) in\n  make_printf k' () End_of_acc fmt\n\nlet sprintf fmt = ksprintf (fun s -> s) fmt\n\nlet kprintf = ksprintf\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Xavier Leroy, projet Cristal, INRIA Rocquencourt           *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* Hash tables *)\n\nexternal seeded_hash_param :\n  int -> int -> int -> 'a -> int = \"caml_hash\" [@@noalloc]\nexternal old_hash_param :\n  int -> int -> 'a -> int = \"caml_hash_univ_param\" [@@noalloc]\n\nlet hash x = seeded_hash_param 10 100 0 x\nlet hash_param n1 n2 x = seeded_hash_param n1 n2 0 x\nlet seeded_hash seed x = seeded_hash_param 10 100 seed x\n\n(* We do dynamic hashing, and resize the table and rehash the elements\n   when buckets become too long. *)\n\ntype ('a, 'b) t =\n  { mutable size: int;                        (* number of entries *)\n    mutable data: ('a, 'b) bucketlist array;  (* the buckets *)\n    mutable seed: int;                        (* for randomization *)\n    mutable initial_size: int;                (* initial array size *)\n  }\n\nand ('a, 'b) bucketlist =\n    Empty\n  | Cons of { mutable key: 'a;\n              mutable data: 'b;\n              mutable next: ('a, 'b) bucketlist }\n\n(* The sign of initial_size encodes the fact that a traversal is\n   ongoing or not.\n\n   This disables the efficient in place implementation of resizing.\n*)\n\nlet ongoing_traversal h =\n  Obj.size (Obj.repr h) < 4 (* compatibility with old hash tables *)\n  || h.initial_size < 0\n\nlet flip_ongoing_traversal h =\n  h.initial_size <- - h.initial_size\n\n(* To pick random seeds if requested *)\n\nlet randomized_default =\n  let params =\n    try Sys.getenv \"OCAMLRUNPARAM\" with Not_found ->\n    try Sys.getenv \"CAMLRUNPARAM\" with Not_found -> \"\" in\n  String.contains params 'R'\n\nlet randomized = ref randomized_default\n\nlet randomize () = randomized := true\nlet is_randomized () = !randomized\n\nlet prng = lazy (Random.State.make_self_init())\n\n(* Creating a fresh, empty table *)\n\nlet rec power_2_above x n =\n  if x >= n then x\n  else if x * 2 > Sys.max_array_length then x\n  else power_2_above (x * 2) n\n\nlet create ?(random = !randomized) initial_size =\n  let s = power_2_above 16 initial_size in\n  let seed = if random then Random.State.bits (Lazy.force prng) else 0 in\n  { initial_size = s; size = 0; seed = seed; data = Array.make s Empty }\n\nlet clear h =\n  h.size <- 0;\n  let len = Array.length h.data in\n  for i = 0 to len - 1 do\n    h.data.(i) <- Empty\n  done\n\nlet reset h =\n  let len = Array.length h.data in\n  if Obj.size (Obj.repr h) < 4 (* compatibility with old hash tables *)\n    || len = abs h.initial_size then\n    clear h\n  else begin\n    h.size <- 0;\n    h.data <- Array.make (abs h.initial_size) Empty\n  end\n\nlet copy_bucketlist = function\n  | Empty -> Empty\n  | Cons {key; data; next} ->\n      let rec loop prec = function\n        | Empty -> ()\n        | Cons {key; data; next} ->\n            let r = Cons {key; data; next} in\n            begin match prec with\n            | Empty -> assert false\n            | Cons prec ->  prec.next <- r\n            end;\n            loop r next\n      in\n      let r = Cons {key; data; next} in\n      loop r next;\n      r\n\nlet copy h = { h with data = Array.map copy_bucketlist h.data }\n\nlet length h = h.size\n\nlet resize indexfun h =\n  let odata = h.data in\n  let osize = Array.length odata in\n  let nsize = osize * 2 in\n  if nsize < Sys.max_array_length then begin\n    let ndata = Array.make nsize Empty in\n    let ndata_tail = Array.make nsize Empty in\n    let inplace = not (ongoing_traversal h) in\n    h.data <- ndata;          (* so that indexfun sees the new bucket count *)\n    let rec insert_bucket = function\n      | Empty -> ()\n      | Cons {key; data; next} as cell ->\n          let cell =\n            if inplace then cell\n            else Cons {key; data; next = Empty}\n          in\n          let nidx = indexfun h key in\n          begin match ndata_tail.(nidx) with\n          | Empty -> ndata.(nidx) <- cell;\n          | Cons tail -> tail.next <- cell;\n          end;\n          ndata_tail.(nidx) <- cell;\n          insert_bucket next\n    in\n    for i = 0 to osize - 1 do\n      insert_bucket odata.(i)\n    done;\n    if inplace then\n      for i = 0 to nsize - 1 do\n        match ndata_tail.(i) with\n        | Empty -> ()\n        | Cons tail -> tail.next <- Empty\n      done;\n  end\n\nlet key_index h key =\n  (* compatibility with old hash tables *)\n  if Obj.size (Obj.repr h) >= 3\n  then (seeded_hash_param 10 100 h.seed key) land (Array.length h.data - 1)\n  else (old_hash_param 10 100 key) mod (Array.length h.data)\n\nlet add h key data =\n  let i = key_index h key in\n  let bucket = Cons{key; data; next=h.data.(i)} in\n  h.data.(i) <- bucket;\n  h.size <- h.size + 1;\n  if h.size > Array.length h.data lsl 1 then resize key_index h\n\nlet rec remove_bucket h i key prec = function\n  | Empty ->\n      ()\n  | (Cons {key=k; next}) as c ->\n      if compare k key = 0\n      then begin\n        h.size <- h.size - 1;\n        match prec with\n        | Empty -> h.data.(i) <- next\n        | Cons c -> c.next <- next\n      end\n      else remove_bucket h i key c next\n\nlet remove h key =\n  let i = key_index h key in\n  remove_bucket h i key Empty h.data.(i)\n\nlet rec find_rec key = function\n  | Empty ->\n      raise Not_found\n  | Cons{key=k; data; next} ->\n      if compare key k = 0 then data else find_rec key next\n\nlet find h key =\n  match h.data.(key_index h key) with\n  | Empty -> raise Not_found\n  | Cons{key=k1; data=d1; next=next1} ->\n      if compare key k1 = 0 then d1 else\n      match next1 with\n      | Empty -> raise Not_found\n      | Cons{key=k2; data=d2; next=next2} ->\n          if compare key k2 = 0 then d2 else\n          match next2 with\n          | Empty -> raise Not_found\n          | Cons{key=k3; data=d3; next=next3} ->\n              if compare key k3 = 0 then d3 else find_rec key next3\n\nlet find_all h key =\n  let rec find_in_bucket = function\n  | Empty ->\n      []\n  | Cons{key=k; data; next} ->\n      if compare k key = 0\n      then data :: find_in_bucket next\n      else find_in_bucket next in\n  find_in_bucket h.data.(key_index h key)\n\nlet rec replace_bucket key data = function\n  | Empty ->\n      true\n  | Cons ({key=k; next} as slot) ->\n      if compare k key = 0\n      then (slot.key <- key; slot.data <- data; false)\n      else replace_bucket key data next\n\nlet replace h key data =\n  let i = key_index h key in\n  let l = h.data.(i) in\n  if replace_bucket key data l then begin\n    h.data.(i) <- Cons{key; data; next=l};\n    h.size <- h.size + 1;\n    if h.size > Array.length h.data lsl 1 then resize key_index h\n  end\n\nlet mem h key =\n  let rec mem_in_bucket = function\n  | Empty ->\n      false\n  | Cons{key=k; next} ->\n      compare k key = 0 || mem_in_bucket next in\n  mem_in_bucket h.data.(key_index h key)\n\nlet iter f h =\n  let rec do_bucket = function\n    | Empty ->\n        ()\n    | Cons{key; data; next} ->\n        f key data; do_bucket next in\n  let old_trav = ongoing_traversal h in\n  if not old_trav then flip_ongoing_traversal h;\n  try\n    let d = h.data in\n    for i = 0 to Array.length d - 1 do\n      do_bucket d.(i)\n    done;\n    if not old_trav then flip_ongoing_traversal h;\n  with exn when not old_trav ->\n    flip_ongoing_traversal h;\n    raise exn\n\nlet rec filter_map_inplace_bucket f h i prec = function\n  | Empty ->\n      begin match prec with\n      | Empty -> h.data.(i) <- Empty\n      | Cons c -> c.next <- Empty\n      end\n  | (Cons ({key; data; next} as c)) as slot ->\n      begin match f key data with\n      | None ->\n          h.size <- h.size - 1;\n          filter_map_inplace_bucket f h i prec next\n      | Some data ->\n          begin match prec with\n          | Empty -> h.data.(i) <- slot\n          | Cons c -> c.next <- slot\n          end;\n          c.data <- data;\n          filter_map_inplace_bucket f h i slot next\n      end\n\nlet filter_map_inplace f h =\n  let d = h.data in\n  let old_trav = ongoing_traversal h in\n  if not old_trav then flip_ongoing_traversal h;\n  try\n    for i = 0 to Array.length d - 1 do\n      filter_map_inplace_bucket f h i Empty h.data.(i)\n    done\n  with exn when not old_trav ->\n    flip_ongoing_traversal h;\n    raise exn\n\nlet fold f h init =\n  let rec do_bucket b accu =\n    match b with\n      Empty ->\n        accu\n    | Cons{key; data; next} ->\n        do_bucket next (f key data accu) in\n  let old_trav = ongoing_traversal h in\n  if not old_trav then flip_ongoing_traversal h;\n  try\n    let d = h.data in\n    let accu = ref init in\n    for i = 0 to Array.length d - 1 do\n      accu := do_bucket d.(i) !accu\n    done;\n    if not old_trav then flip_ongoing_traversal h;\n    !accu\n  with exn when not old_trav ->\n    flip_ongoing_traversal h;\n    raise exn\n\ntype statistics = {\n  num_bindings: int;\n  num_buckets: int;\n  max_bucket_length: int;\n  bucket_histogram: int array\n}\n\nlet rec bucket_length accu = function\n  | Empty -> accu\n  | Cons{next} -> bucket_length (accu + 1) next\n\nlet stats h =\n  let mbl =\n    Array.fold_left (fun m b -> max m (bucket_length 0 b)) 0 h.data in\n  let histo = Array.make (mbl + 1) 0 in\n  Array.iter\n    (fun b ->\n      let l = bucket_length 0 b in\n      histo.(l) <- histo.(l) + 1)\n    h.data;\n  { num_bindings = h.size;\n    num_buckets = Array.length h.data;\n    max_bucket_length = mbl;\n    bucket_histogram = histo }\n\n(* Functorial interface *)\n\nmodule type HashedType =\n  sig\n    type t\n    val equal: t -> t -> bool\n    val hash: t -> int\n  end\n\nmodule type SeededHashedType =\n  sig\n    type t\n    val equal: t -> t -> bool\n    val hash: int -> t -> int\n  end\n\nmodule type S =\n  sig\n    type key\n    type 'a t\n    val create: int -> 'a t\n    val clear : 'a t -> unit\n    val reset : 'a t -> unit\n    val copy: 'a t -> 'a t\n    val add: 'a t -> key -> 'a -> unit\n    val remove: 'a t -> key -> unit\n    val find: 'a t -> key -> 'a\n    val find_all: 'a t -> key -> 'a list\n    val replace : 'a t -> key -> 'a -> unit\n    val mem : 'a t -> key -> bool\n    val iter: (key -> 'a -> unit) -> 'a t -> unit\n    val filter_map_inplace: (key -> 'a -> 'a option) -> 'a t -> unit\n    val fold: (key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b\n    val length: 'a t -> int\n    val stats: 'a t -> statistics\n  end\n\nmodule type SeededS =\n  sig\n    type key\n    type 'a t\n    val create : ?random:bool -> int -> 'a t\n    val clear : 'a t -> unit\n    val reset : 'a t -> unit\n    val copy : 'a t -> 'a t\n    val add : 'a t -> key -> 'a -> unit\n    val remove : 'a t -> key -> unit\n    val find : 'a t -> key -> 'a\n    val find_all : 'a t -> key -> 'a list\n    val replace : 'a t -> key -> 'a -> unit\n    val mem : 'a t -> key -> bool\n    val iter : (key -> 'a -> unit) -> 'a t -> unit\n    val filter_map_inplace: (key -> 'a -> 'a option) -> 'a t -> unit\n    val fold : (key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b\n    val length : 'a t -> int\n    val stats: 'a t -> statistics\n  end\n\nmodule MakeSeeded(H: SeededHashedType): (SeededS with type key = H.t) =\n  struct\n    type key = H.t\n    type 'a hashtbl = (key, 'a) t\n    type 'a t = 'a hashtbl\n    let create = create\n    let clear = clear\n    let reset = reset\n    let copy = copy\n\n    let key_index h key =\n      (H.hash h.seed key) land (Array.length h.data - 1)\n\n    let add h key data =\n      let i = key_index h key in\n      let bucket = Cons{key; data; next=h.data.(i)} in\n      h.data.(i) <- bucket;\n      h.size <- h.size + 1;\n      if h.size > Array.length h.data lsl 1 then resize key_index h\n\n    let rec remove_bucket h i key prec = function\n      | Empty ->\n          ()\n      | (Cons {key=k; next}) as c ->\n          if H.equal k key\n          then begin\n            h.size <- h.size - 1;\n            match prec with\n            | Empty -> h.data.(i) <- next\n            | Cons c -> c.next <- next\n          end\n          else remove_bucket h i key c next\n\n    let remove h key =\n      let i = key_index h key in\n      remove_bucket h i key Empty h.data.(i)\n\n    let rec find_rec key = function\n      | Empty ->\n          raise Not_found\n      | Cons{key=k; data; next} ->\n          if H.equal key k then data else find_rec key next\n\n    let find h key =\n      match h.data.(key_index h key) with\n      | Empty -> raise Not_found\n      | Cons{key=k1; data=d1; next=next1} ->\n          if H.equal key k1 then d1 else\n          match next1 with\n          | Empty -> raise Not_found\n          | Cons{key=k2; data=d2; next=next2} ->\n              if H.equal key k2 then d2 else\n              match next2 with\n              | Empty -> raise Not_found\n              | Cons{key=k3; data=d3; next=next3} ->\n                  if H.equal key k3 then d3 else find_rec key next3\n\n    let find_all h key =\n      let rec find_in_bucket = function\n      | Empty ->\n          []\n      | Cons{key=k; data=d; next} ->\n          if H.equal k key\n          then d :: find_in_bucket next\n          else find_in_bucket next in\n      find_in_bucket h.data.(key_index h key)\n\n    let rec replace_bucket key data = function\n      | Empty ->\n          true\n      | Cons ({key=k; next} as slot) ->\n          if H.equal k key\n          then (slot.key <- key; slot.data <- data; false)\n          else replace_bucket key data next\n\n    let replace h key data =\n      let i = key_index h key in\n      let l = h.data.(i) in\n      if replace_bucket key data l then begin\n        h.data.(i) <- Cons{key; data; next=l};\n        h.size <- h.size + 1;\n        if h.size > Array.length h.data lsl 1 then resize key_index h\n      end\n\n    let mem h key =\n      let rec mem_in_bucket = function\n      | Empty ->\n          false\n      | Cons{key=k; next} ->\n          H.equal k key || mem_in_bucket next in\n      mem_in_bucket h.data.(key_index h key)\n\n    let iter = iter\n    let filter_map_inplace = filter_map_inplace\n    let fold = fold\n    let length = length\n    let stats = stats\n  end\n\nmodule Make(H: HashedType): (S with type key = H.t) =\n  struct\n    include MakeSeeded(struct\n        type t = H.t\n        let equal = H.equal\n        let hash (_seed: int) x = H.hash x\n      end)\n    let create sz = create ~random:false sz\n  end\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*               Damien Doligez, projet Para, INRIA Rocquencourt          *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* Pseudo-random number generator\n   This is a lagged-Fibonacci F(55, 24, +) with a modified addition\n   function to enhance the mixing of bits.\n   If we use normal addition, the low-order bit fails tests 1 and 7\n   of the Diehard test suite, and bits 1 and 2 also fail test 7.\n   If we use multiplication as suggested by Marsaglia, it doesn't fare\n   much better.\n   By mixing the bits of one of the numbers before addition (XOR the\n   5 high-order bits into the low-order bits), we get a generator that\n   passes all the Diehard tests.\n*)\n\nexternal random_seed: unit -> int array = \"caml_sys_random_seed\"\n\nmodule State = struct\n\n  type t = { st : int array; mutable idx : int }\n\n  let new_state () = { st = Array.make 55 0; idx = 0 }\n  let assign st1 st2 =\n    Array.blit st2.st 0 st1.st 0 55;\n    st1.idx <- st2.idx\n\n\n  let full_init s seed =\n    let combine accu x = Digest.string (accu ^ string_of_int x) in\n    let extract d =\n      Char.code d.[0] + (Char.code d.[1] lsl 8) + (Char.code d.[2] lsl 16)\n      + (Char.code d.[3] lsl 24)\n    in\n    let seed = if Array.length seed = 0 then [| 0 |] else seed in\n    let l = Array.length seed in\n    for i = 0 to 54 do\n      s.st.(i) <- i;\n    done;\n    let accu = ref \"x\" in\n    for i = 0 to 54 + max 55 l do\n      let j = i mod 55 in\n      let k = i mod l in\n      accu := combine !accu seed.(k);\n      s.st.(j) <- (s.st.(j) lxor extract !accu) land 0x3FFFFFFF;  (* PR#5575 *)\n    done;\n    s.idx <- 0\n\n\n  let make seed =\n    let result = new_state () in\n    full_init result seed;\n    result\n\n\n  let make_self_init () = make (random_seed ())\n\n  let copy s =\n    let result = new_state () in\n    assign result s;\n    result\n\n\n  (* Returns 30 random bits as an integer 0 <= x < 1073741824 *)\n  let bits s =\n    s.idx <- (s.idx + 1) mod 55;\n    let curval = s.st.(s.idx) in\n    let newval = s.st.((s.idx + 24) mod 55)\n                 + (curval lxor ((curval lsr 25) land 0x1F)) in\n    let newval30 = newval land 0x3FFFFFFF in  (* PR#5575 *)\n    s.st.(s.idx) <- newval30;\n    newval30\n\n\n  let rec intaux s n =\n    let r = bits s in\n    let v = r mod n in\n    if r - v > 0x3FFFFFFF - n + 1 then intaux s n else v\n\n  let int s bound =\n    if bound > 0x3FFFFFFF || bound <= 0\n    then invalid_arg \"Random.int\"\n    else intaux s bound\n\n\n  let rec int32aux s n =\n    let b1 = Int32.of_int (bits s) in\n    let b2 = Int32.shift_left (Int32.of_int (bits s land 1)) 30 in\n    let r = Int32.logor b1 b2 in\n    let v = Int32.rem r n in\n    if Int32.sub r v > Int32.add (Int32.sub Int32.max_int n) 1l\n    then int32aux s n\n    else v\n\n  let int32 s bound =\n    if bound <= 0l\n    then invalid_arg \"Random.int32\"\n    else int32aux s bound\n\n\n  let rec int64aux s n =\n    let b1 = Int64.of_int (bits s) in\n    let b2 = Int64.shift_left (Int64.of_int (bits s)) 30 in\n    let b3 = Int64.shift_left (Int64.of_int (bits s land 7)) 60 in\n    let r = Int64.logor b1 (Int64.logor b2 b3) in\n    let v = Int64.rem r n in\n    if Int64.sub r v > Int64.add (Int64.sub Int64.max_int n) 1L\n    then int64aux s n\n    else v\n\n  let int64 s bound =\n    if bound <= 0L\n    then invalid_arg \"Random.int64\"\n    else int64aux s bound\n\n\n  let nativeint =\n    if Nativeint.size = 32\n    then fun s bound -> Nativeint.of_int32 (int32 s (Nativeint.to_int32 bound))\n    else fun s bound -> Int64.to_nativeint (int64 s (Int64.of_nativeint bound))\n\n\n  (* Returns a float 0 <= x <= 1 with at most 60 bits of precision. *)\n  let rawfloat s =\n    let scale = 1073741824.0  (* 2^30 *)\n    and r1 = Pervasives.float (bits s)\n    and r2 = Pervasives.float (bits s)\n    in (r1 /. scale +. r2) /. scale\n\n\n  let float s bound = rawfloat s *. bound\n\n  let bool s = (bits s land 1 = 0)\n\nend\n\n(* This is the state you get with [init 27182818] and then applying\n   the \"land 0x3FFFFFFF\" filter to them.  See #5575, #5793, #5977. *)\nlet default = {\n  State.st = [|\n      0x3ae2522b; 0x1d8d4634; 0x15b4fad0; 0x18b14ace; 0x12f8a3c4; 0x3b086c47;\n      0x16d467d6; 0x101d91c7; 0x321df177; 0x0176c193; 0x1ff72bf1; 0x1e889109;\n      0x0b464b18; 0x2b86b97c; 0x0891da48; 0x03137463; 0x085ac5a1; 0x15d61f2f;\n      0x3bced359; 0x29c1c132; 0x3a86766e; 0x366d8c86; 0x1f5b6222; 0x3ce1b59f;\n      0x2ebf78e1; 0x27cd1b86; 0x258f3dc3; 0x389a8194; 0x02e4c44c; 0x18c43f7d;\n      0x0f6e534f; 0x1e7df359; 0x055d0b7e; 0x10e84e7e; 0x126198e4; 0x0e7722cb;\n      0x1cbede28; 0x3391b964; 0x3d40e92a; 0x0c59933d; 0x0b8cd0b7; 0x24efff1c;\n      0x2803fdaa; 0x08ebc72e; 0x0f522e32; 0x05398edc; 0x2144a04c; 0x0aef3cbd;\n      0x01ad4719; 0x35b93cd6; 0x2a559d4f; 0x1e6fd768; 0x26e27f36; 0x186f18c3;\n      0x2fbf967a;\n    |];\n  State.idx = 0;\n}\n\nlet bits () = State.bits default\nlet int bound = State.int default bound\nlet int32 bound = State.int32 default bound\nlet nativeint bound = State.nativeint default bound\nlet int64 bound = State.int64 default bound\nlet float scale = State.float default scale\nlet bool () = State.bool default\n\nlet full_init seed = State.full_init default seed\nlet init seed = State.full_init default [| seed |]\nlet self_init () = full_init (random_seed())\n\n(* Manipulating the current state. *)\n\nlet get_state () = State.copy default\nlet set_state s = State.assign default s\n\n(********************\n\n(* Test functions.  Not included in the library.\n   The [chisquare] function should be called with n > 10r.\n   It returns a triple (low, actual, high).\n   If low <= actual <= high, the [g] function passed the test,\n   otherwise it failed.\n\n  Some results:\n\ninit 27182818; chisquare int 100000 1000\ninit 27182818; chisquare int 100000 100\ninit 27182818; chisquare int 100000 5000\ninit 27182818; chisquare int 1000000 1000\ninit 27182818; chisquare int 100000 1024\ninit 299792643; chisquare int 100000 1024\ninit 14142136; chisquare int 100000 1024\ninit 27182818; init_diff 1024; chisquare diff 100000 1024\ninit 27182818; init_diff 100; chisquare diff 100000 100\ninit 27182818; init_diff2 1024; chisquare diff2 100000 1024\ninit 27182818; init_diff2 100; chisquare diff2 100000 100\ninit 14142136; init_diff2 100; chisquare diff2 100000 100\ninit 299792643; init_diff2 100; chisquare diff2 100000 100\n- : float * float * float = (936.754446796632465, 997.5, 1063.24555320336754)\n# - : float * float * float = (80., 89.7400000000052387, 120.)\n# - : float * float * float = (4858.57864376269, 5045.5, 5141.42135623731)\n# - : float * float * float =\n(936.754446796632465, 944.805999999982305, 1063.24555320336754)\n# - : float * float * float = (960., 1019.19744000000355, 1088.)\n# - : float * float * float = (960., 1059.31776000000536, 1088.)\n# - : float * float * float = (960., 1039.98463999999512, 1088.)\n# - : float * float * float = (960., 1054.38207999999577, 1088.)\n# - : float * float * float = (80., 90.096000000005, 120.)\n# - : float * float * float = (960., 1076.78720000000612, 1088.)\n# - : float * float * float = (80., 85.1760000000067521, 120.)\n# - : float * float * float = (80., 85.2160000000003492, 120.)\n# - : float * float * float = (80., 80.6220000000030268, 120.)\n\n*)\n\n(* Return the sum of the squares of v[i0,i1[ *)\nlet rec sumsq v i0 i1 =\n  if i0 >= i1 then 0.0\n  else if i1 = i0 + 1 then Pervasives.float v.(i0) *. Pervasives.float v.(i0)\n  else sumsq v i0 ((i0+i1)/2) +. sumsq v ((i0+i1)/2) i1\n\n\nlet chisquare g n r =\n  if n <= 10 * r then invalid_arg \"chisquare\";\n  let f = Array.make r 0 in\n  for i = 1 to n do\n    let t = g r in\n    f.(t) <- f.(t) + 1\n  done;\n  let t = sumsq f 0 r\n  and r = Pervasives.float r\n  and n = Pervasives.float n in\n  let sr = 2.0 *. sqrt r in\n  (r -. sr,   (r *. t /. n) -. n,   r +. sr)\n\n\n(* This is to test for linear dependencies between successive random numbers.\n*)\nlet st = ref 0\nlet init_diff r = st := int r\nlet diff r =\n  let x1 = !st\n  and x2 = int r\n  in\n  st := x2;\n  if x1 >= x2 then\n    x1 - x2\n  else\n    r + x1 - x2\n\n\nlet st1 = ref 0\nand st2 = ref 0\n\n\n(* This is to test for quadratic dependencies between successive random\n   numbers.\n*)\nlet init_diff2 r = st1 := int r; st2 := int r\nlet diff2 r =\n  let x1 = !st1\n  and x2 = !st2\n  and x3 = int r\n  in\n  st1 := x2;\n  st2 := x3;\n  (x3 - x2 - x2 + x1 + 2*r) mod r\n\n\n********************)\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Pierre Weis, projet Cristal, INRIA Rocquencourt            *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* A pretty-printing facility and definition of formatters for 'parallel'\n   (i.e. unrelated or independent) pretty-printing on multiple out channels. *)\n\n(*\n   The pretty-printing engine internal data structures.\n*)\n\n(* A devoted type for sizes to avoid confusion\n   between sizes and mere integers. *)\ntype size\n\nexternal size_of_int : int -> size = \"%identity\"\n\nexternal int_of_size : size -> int = \"%identity\"\n\n\n(* The pretty-printing boxes definition:\n   a pretty-printing box is either\n   - hbox: horizontal (no split in the line)\n   - vbox: vertical (the line is splitted at every break hint)\n   - hvbox: horizontal/vertical\n     (the box behaves as an horizontal box if it fits on\n      the current line, otherwise the box behaves as a vertical box)\n   - hovbox: horizontal or vertical\n     (the box is compacting material, printing as much material on every\n     lines)\n   - box: horizontal or vertical with box enhanced structure\n     (the box behaves as an horizontal or vertical box but break hints split\n      the line if splitting would move to the left)\n*)\ntype box_type = CamlinternalFormatBasics.block_type =\n  | Pp_hbox | Pp_vbox | Pp_hvbox | Pp_hovbox | Pp_box | Pp_fits\n\n\n(* The pretty-printing tokens definition:\n   are either text to print or pretty printing\n   elements that drive indentation and line splitting. *)\ntype pp_token =\n  | Pp_text of string          (* normal text *)\n  | Pp_break of int * int      (* complete break *)\n  | Pp_tbreak of int * int     (* go to next tabulation *)\n  | Pp_stab                    (* set a tabulation *)\n  | Pp_begin of int * box_type (* beginning of a box *)\n  | Pp_end                     (* end of a box *)\n  | Pp_tbegin of tbox          (* beginning of a tabulation box *)\n  | Pp_tend                    (* end of a tabulation box *)\n  | Pp_newline                 (* to force a newline inside a box *)\n  | Pp_if_newline              (* to do something only if this very\n                                  line has been broken *)\n  | Pp_open_tag of tag         (* opening a tag name *)\n  | Pp_close_tag               (* closing the most recently opened tag *)\n\nand tag = string\n\nand tbox = Pp_tbox of int list ref  (* Tabulation box *)\n\n\n(* The pretty-printer queue definition:\n   pretty-printing material is not written in the output as soon as emitted;\n   instead, the material is simply recorded in the pretty-printer queue,\n   until the enclosing box has a known computed size and proper splitting\n   decisions can be made.\n\n   To define the pretty-printer queue, we first define polymorphic queues,\n   then pretty-printer queue elements.\n*)\n\n(* The pretty-printer queue: polymorphic queue definition. *)\ntype 'a queue_elem =\n  | Nil\n  | Cons of {\n      head : 'a;\n      mutable tail : 'a queue_elem;\n    }\n\n\ntype 'a queue = {\n  mutable insert : 'a queue_elem;\n  mutable body : 'a queue_elem;\n}\n\n\n(* The pretty-printer queue: queue element definition.\n   The pretty-printer queue contains formatting elements to be printed.\n   Each formatting element is a tuple (size, token, length), where\n   - length is the declared length of the token,\n   - size is effective size of the token when it is printed\n     (size is set when the size of the box is known, so that size of break\n      hints are definitive). *)\ntype pp_queue_elem = {\n  mutable elem_size : size;\n  token : pp_token;\n  length : int;\n}\n\n\n(* The pretty-printer queue definition. *)\ntype pp_queue = pp_queue_elem queue\n\n(* The pretty-printer scanning stack. *)\n\n(* The pretty-printer scanning stack: scanning element definition.\n   Each element is (left_total, queue element) where left_total\n   is the value of pp_left_total when the element has been enqueued. *)\ntype pp_scan_elem = Scan_elem of int * pp_queue_elem\n\n(* The pretty-printer scanning stack definition. *)\ntype pp_scan_stack = pp_scan_elem list\n\n(* The pretty-printer formatting stack:\n   the formatting stack contains the description of all the currently active\n   boxes; the pretty-printer formatting stack is used to split the lines\n   while printing tokens. *)\n\n(* The pretty-printer formatting stack: formatting stack element definition.\n   Each stack element describes a pretty-printing box. *)\ntype pp_format_elem = Format_elem of box_type * int\n\n(* The pretty-printer formatting stack definition. *)\ntype pp_format_stack = pp_format_elem list\n\n(* The pretty-printer semantics tag stack definition. *)\ntype pp_tag_stack = tag list\n\n(* The formatter definition.\n   Each formatter value is a pretty-printer instance with all its\n   machinery. *)\ntype formatter = {\n  (* The various stacks. *)\n  mutable pp_scan_stack : pp_scan_stack;\n  mutable pp_format_stack : pp_format_stack;\n  mutable pp_tbox_stack : tbox list;\n  mutable pp_tag_stack : pp_tag_stack;\n  mutable pp_mark_stack : pp_tag_stack;\n  (* Value of right margin. *)\n  mutable pp_margin : int;\n  (* Minimal space left before margin, when opening a box. *)\n  mutable pp_min_space_left : int;\n  (* Maximum value of indentation:\n     no box can be opened further. *)\n  mutable pp_max_indent : int;\n  (* Space remaining on the current line. *)\n  mutable pp_space_left : int;\n  (* Current value of indentation. *)\n  mutable pp_current_indent : int;\n  (* True when the line has been broken by the pretty-printer. *)\n  mutable pp_is_new_line : bool;\n  (* Total width of tokens already printed. *)\n  mutable pp_left_total : int;\n  (* Total width of tokens ever put in queue. *)\n  mutable pp_right_total : int;\n  (* Current number of opened boxes. *)\n  mutable pp_curr_depth : int;\n  (* Maximum number of boxes which can be simultaneously opened. *)\n  mutable pp_max_boxes : int;\n  (* Ellipsis string. *)\n  mutable pp_ellipsis : string;\n  (* Output function. *)\n  mutable pp_out_string : string -> int -> int -> unit;\n  (* Flushing function. *)\n  mutable pp_out_flush : unit -> unit;\n  (* Output of new lines. *)\n  mutable pp_out_newline : unit -> unit;\n  (* Output of indentation spaces. *)\n  mutable pp_out_spaces : int -> unit;\n  (* Are tags printed ? *)\n  mutable pp_print_tags : bool;\n  (* Are tags marked ? *)\n  mutable pp_mark_tags : bool;\n  (* Find opening and closing markers of tags. *)\n  mutable pp_mark_open_tag : tag -> string;\n  mutable pp_mark_close_tag : tag -> string;\n  mutable pp_print_open_tag : tag -> unit;\n  mutable pp_print_close_tag : tag -> unit;\n  (* The pretty-printer queue. *)\n  mutable pp_queue : pp_queue;\n}\n\n\n(* The formatter specific tag handling functions. *)\ntype formatter_tag_functions = {\n  mark_open_tag : tag -> string;\n  mark_close_tag : tag -> string;\n  print_open_tag : tag -> unit;\n  print_close_tag : tag -> unit;\n}\n\n\n(* The formatter functions to output material. *)\ntype formatter_out_functions = {\n  out_string : string -> int -> int -> unit;\n  out_flush : unit -> unit;\n  out_newline : unit -> unit;\n  out_spaces : int -> unit;\n}\n\n\n(*\n\n  Auxiliaries and basic functions.\n\n*)\n\n(* Queues auxiliaries. *)\n\nlet make_queue () = { insert = Nil; body = Nil; }\n\nlet clear_queue q = q.insert <- Nil; q.body <- Nil\n\nlet add_queue x q =\n  let c = Cons { head = x; tail = Nil; } in\n  match q with\n  | { insert = Cons cell; body = _; } ->\n    q.insert <- c; cell.tail <- c\n  (* Invariant: when insert is Nil body should be Nil. *)\n  | { insert = Nil; body = _; } ->\n    q.insert <- c; q.body <- c\n\n\nexception Empty_queue\n\nlet peek_queue = function\n  | { body = Cons { head = x; tail = _; }; _ } -> x\n  | { body = Nil; insert = _; } -> raise Empty_queue\n\n\nlet take_queue = function\n  | { body = Cons { head = x; tail = tl; }; _ } as q ->\n    q.body <- tl;\n    if tl = Nil then q.insert <- Nil; (* Maintain the invariant. *)\n    x\n  | { body = Nil; insert = _; } -> raise Empty_queue\n\n\n(* Enter a token in the pretty-printer queue. *)\nlet pp_enqueue state ({ length = len; _} as token) =\n  state.pp_right_total <- state.pp_right_total + len;\n  add_queue token state.pp_queue\n\n\nlet pp_clear_queue state =\n  state.pp_left_total <- 1; state.pp_right_total <- 1;\n  clear_queue state.pp_queue\n\n\n(* Pp_infinity: large value for default tokens size.\n\n   Pp_infinity is documented as being greater than 1e10; to avoid\n   confusion about the word 'greater', we choose pp_infinity greater\n   than 1e10 + 1; for correct handling of tests in the algorithm,\n   pp_infinity must be even one more than 1e10 + 1; let's stand on the\n   safe side by choosing 1.e10+10.\n\n   Pp_infinity could probably be 1073741823 that is 2^30 - 1, that is\n   the minimal upper bound for integers; now that max_int is defined,\n   this limit could also be defined as max_int - 1.\n\n   However, before setting pp_infinity to something around max_int, we\n   must carefully double-check all the integer arithmetic operations\n   that involve pp_infinity, since any overflow would wreck havoc the\n   pretty-printing algorithm's invariants. Given that this arithmetic\n   correctness check is difficult and error prone and given that 1e10\n   + 1 is in practice large enough, there is no need to attempt to set\n   pp_infinity to the theoretically maximum limit. It is not worth the\n   burden ! *)\nlet pp_infinity = 1000000010\n\n(* Output functions for the formatter. *)\nlet pp_output_string state s = state.pp_out_string s 0 (String.length s)\nand pp_output_newline state = state.pp_out_newline ()\nand pp_output_spaces state n = state.pp_out_spaces n\n\n(* To format a break, indenting a new line. *)\nlet break_new_line state offset width =\n  pp_output_newline state;\n  state.pp_is_new_line <- true;\n  let indent = state.pp_margin - width + offset in\n  (* Don't indent more than pp_max_indent. *)\n  let real_indent = min state.pp_max_indent indent in\n  state.pp_current_indent <- real_indent;\n  state.pp_space_left <- state.pp_margin - state.pp_current_indent;\n  pp_output_spaces state state.pp_current_indent\n\n\n(* To force a line break inside a box: no offset is added. *)\nlet break_line state width = break_new_line state 0 width\n\n(* To format a break that fits on the current line. *)\nlet break_same_line state width =\n  state.pp_space_left <- state.pp_space_left - width;\n  pp_output_spaces state width\n\n\n(* To indent no more than pp_max_indent, if one tries to open a box\n   beyond pp_max_indent, then the box is rejected on the left\n   by simulating a break. *)\nlet pp_force_break_line state =\n  match state.pp_format_stack with\n  | Format_elem (bl_ty, width) :: _ ->\n    if width > state.pp_space_left then\n      (match bl_ty with\n       | Pp_fits -> () | Pp_hbox -> ()\n       | Pp_vbox | Pp_hvbox | Pp_hovbox | Pp_box ->\n         break_line state width)\n  | [] -> pp_output_newline state\n\n\n(* To skip a token, if the previous line has been broken. *)\nlet pp_skip_token state =\n  (* When calling pp_skip_token the queue cannot be empty. *)\n  match take_queue state.pp_queue with\n  | { elem_size = size; length = len; token = _; } ->\n    state.pp_left_total <- state.pp_left_total - len;\n    state.pp_space_left <- state.pp_space_left + int_of_size size\n\n\n(*\n\n  The main pretty printing functions.\n\n*)\n\n(* Formatting a token with a given size. *)\nlet format_pp_token state size = function\n\n  | Pp_text s ->\n    state.pp_space_left <- state.pp_space_left - size;\n    pp_output_string state s;\n    state.pp_is_new_line <- false\n\n  | Pp_begin (off, ty) ->\n    let insertion_point = state.pp_margin - state.pp_space_left in\n    if insertion_point > state.pp_max_indent then\n      (* can not open a box right there. *)\n      begin pp_force_break_line state end;\n    let offset = state.pp_space_left - off in\n    let bl_type =\n      begin match ty with\n      | Pp_vbox -> Pp_vbox\n      | Pp_hbox | Pp_hvbox | Pp_hovbox | Pp_box | Pp_fits ->\n        if size > state.pp_space_left then ty else Pp_fits\n      end in\n    state.pp_format_stack <-\n      Format_elem (bl_type, offset) :: state.pp_format_stack\n\n  | Pp_end ->\n    begin match state.pp_format_stack with\n    | _ :: ls -> state.pp_format_stack <- ls\n    | [] -> () (* No more box to close. *)\n    end\n\n  | Pp_tbegin (Pp_tbox _ as tbox) ->\n    state.pp_tbox_stack <- tbox :: state.pp_tbox_stack\n\n  | Pp_tend ->\n    begin match state.pp_tbox_stack with\n    | _ :: ls -> state.pp_tbox_stack <- ls\n    | [] -> () (* No more tabulation box to close. *)\n    end\n\n  | Pp_stab ->\n    begin match state.pp_tbox_stack with\n    | Pp_tbox tabs :: _ ->\n      let rec add_tab n = function\n        | [] -> [n]\n        | x :: l as ls -> if n < x then n :: ls else x :: add_tab n l in\n      tabs := add_tab (state.pp_margin - state.pp_space_left) !tabs\n    | [] -> () (* No opened tabulation box. *)\n    end\n\n  | Pp_tbreak (n, off) ->\n    let insertion_point = state.pp_margin - state.pp_space_left in\n    begin match state.pp_tbox_stack with\n    | Pp_tbox tabs :: _ ->\n      let rec find n = function\n        | x :: l -> if x >= n then x else find n l\n        | [] -> raise Not_found in\n      let tab =\n        match !tabs with\n        | x :: _ ->\n          begin\n            try find insertion_point !tabs with\n            | Not_found -> x\n          end\n        | _ -> insertion_point in\n      let offset = tab - insertion_point in\n      if offset >= 0\n      then break_same_line state (offset + n)\n      else break_new_line state (tab + off) state.pp_margin\n    | [] -> () (* No opened tabulation box. *)\n    end\n\n  | Pp_newline ->\n    begin match state.pp_format_stack with\n    | Format_elem (_, width) :: _ -> break_line state width\n    | [] -> pp_output_newline state (* No opened box. *)\n    end\n\n  | Pp_if_newline ->\n    if state.pp_current_indent != state.pp_margin - state.pp_space_left\n    then pp_skip_token state\n\n  | Pp_break (n, off) ->\n    begin match state.pp_format_stack with\n    | Format_elem (ty, width) :: _ ->\n      begin match ty with\n      | Pp_hovbox ->\n        if size > state.pp_space_left\n        then break_new_line state off width\n        else break_same_line state n\n      | Pp_box ->\n        (* Have the line just been broken here ? *)\n        if state.pp_is_new_line then break_same_line state n else\n        if size > state.pp_space_left\n         then break_new_line state off width else\n        (* break the line here leads to new indentation ? *)\n        if state.pp_current_indent > state.pp_margin - width + off\n        then break_new_line state off width\n        else break_same_line state n\n      | Pp_hvbox -> break_new_line state off width\n      | Pp_fits -> break_same_line state n\n      | Pp_vbox -> break_new_line state off width\n      | Pp_hbox -> break_same_line state n\n      end\n    | [] -> () (* No opened box. *)\n    end\n\n   | Pp_open_tag tag_name ->\n     let marker = state.pp_mark_open_tag tag_name in\n     pp_output_string state marker;\n     state.pp_mark_stack <- tag_name :: state.pp_mark_stack\n\n   | Pp_close_tag ->\n     begin match state.pp_mark_stack with\n     | tag_name :: tags ->\n       let marker = state.pp_mark_close_tag tag_name in\n       pp_output_string state marker;\n       state.pp_mark_stack <- tags\n     | [] -> () (* No more tag to close. *)\n     end\n\n\n(* Print if token size is known else printing is delayed.\n   Size is known when not negative.\n   Printing is delayed when the text waiting in the queue requires\n   more room to format than exists on the current line.\n\n   Note: [advance_loop] must be tail recursive to prevent stack overflows. *)\nlet rec advance_loop state =\n  match peek_queue state.pp_queue with\n  | {elem_size = size; token = tok; length = len} ->\n    let size = int_of_size size in\n    if not\n         (size < 0 &&\n          (state.pp_right_total - state.pp_left_total < state.pp_space_left))\n    then begin\n      ignore (take_queue state.pp_queue);\n      format_pp_token state (if size < 0 then pp_infinity else size) tok;\n      state.pp_left_total <- len + state.pp_left_total;\n      advance_loop state\n    end\n\n\nlet advance_left state =\n  try advance_loop state with\n  | Empty_queue -> ()\n\n\n(* To enqueue a token : try to advance. *)\nlet enqueue_advance state tok = pp_enqueue state tok; advance_left state\n\n(* Building pretty-printer queue elements. *)\nlet make_queue_elem size tok len =\n  { elem_size = size; token = tok; length = len; }\n\n\n(* To enqueue strings. *)\nlet enqueue_string_as state size s =\n  let len = int_of_size size in\n  enqueue_advance state (make_queue_elem size (Pp_text s) len)\n\n\nlet enqueue_string state s =\n  let len = String.length s in\n  enqueue_string_as state (size_of_int len) s\n\n\n(* Routines for scan stack\n   determine size of boxes. *)\n\n(* The scan_stack is never empty. *)\nlet scan_stack_bottom =\n  let q_elem = make_queue_elem (size_of_int (-1)) (Pp_text \"\") 0 in\n  [Scan_elem (-1, q_elem)]\n\n\n(* Clearing the pretty-printer scanning stack. *)\nlet clear_scan_stack state = state.pp_scan_stack <- scan_stack_bottom\n\n(* Setting the size of boxes on scan stack:\n   if ty = true then size of break is set else size of box is set;\n   in each case pp_scan_stack is popped.\n\n   Note:\n   Pattern matching on scan stack is exhaustive, since scan_stack is never\n   empty.\n   Pattern matching on token in scan stack is also exhaustive,\n   since scan_push is used on breaks and opening of boxes. *)\nlet set_size state ty =\n  match state.pp_scan_stack with\n  | Scan_elem\n      (left_tot,\n       ({ elem_size = size; token = tok; length = _; } as queue_elem)) :: t ->\n    let size = int_of_size size in\n    (* test if scan stack contains any data that is not obsolete. *)\n    if left_tot < state.pp_left_total then clear_scan_stack state else\n      begin match tok with\n      | Pp_break (_, _) | Pp_tbreak (_, _) ->\n        if ty then\n        begin\n          queue_elem.elem_size <- size_of_int (state.pp_right_total + size);\n          state.pp_scan_stack <- t\n        end\n      | Pp_begin (_, _) ->\n        if not ty then\n        begin\n          queue_elem.elem_size <- size_of_int (state.pp_right_total + size);\n          state.pp_scan_stack <- t\n        end\n      | Pp_text _ | Pp_stab | Pp_tbegin _ | Pp_tend | Pp_end\n      | Pp_newline | Pp_if_newline\n      | Pp_open_tag _ | Pp_close_tag ->\n        () (* scan_push is only used for breaks and boxes. *)\n      end\n  | [] -> () (* scan_stack is never empty. *)\n\n\n(* Push a token on pretty-printer scanning stack.\n   If b is true set_size is called. *)\nlet scan_push state b tok =\n  pp_enqueue state tok;\n  if b then set_size state true;\n  state.pp_scan_stack <-\n    Scan_elem (state.pp_right_total, tok) :: state.pp_scan_stack\n\n\n(* To open a new box :\n   the user may set the depth bound pp_max_boxes\n   any text nested deeper is printed as the ellipsis string. *)\nlet pp_open_box_gen state indent br_ty =\n  state.pp_curr_depth <- state.pp_curr_depth + 1;\n  if state.pp_curr_depth < state.pp_max_boxes then\n    let elem =\n      make_queue_elem\n        (size_of_int (- state.pp_right_total))\n        (Pp_begin (indent, br_ty))\n        0 in\n    scan_push state false elem else\n  if state.pp_curr_depth = state.pp_max_boxes\n  then enqueue_string state state.pp_ellipsis\n\n\n(* The box which is always opened. *)\nlet pp_open_sys_box state = pp_open_box_gen state 0 Pp_hovbox\n\n(* Close a box, setting sizes of its sub boxes. *)\nlet pp_close_box state () =\n  if state.pp_curr_depth > 1 then\n  begin\n    if state.pp_curr_depth < state.pp_max_boxes then\n    begin\n      pp_enqueue state\n        { elem_size = size_of_int 0; token = Pp_end; length = 0; };\n      set_size state true; set_size state false\n    end;\n    state.pp_curr_depth <- state.pp_curr_depth - 1;\n  end\n\n\n(* Open a tag, pushing it on the tag stack. *)\nlet pp_open_tag state tag_name =\n  if state.pp_print_tags then\n  begin\n    state.pp_tag_stack <- tag_name :: state.pp_tag_stack;\n    state.pp_print_open_tag tag_name\n  end;\n  if state.pp_mark_tags then\n    pp_enqueue state {\n      elem_size = size_of_int 0;\n      token = Pp_open_tag tag_name;\n      length = 0;\n    }\n\n\n(* Close a tag, popping it from the tag stack. *)\nlet pp_close_tag state () =\n  if state.pp_mark_tags then\n    pp_enqueue state {\n      elem_size = size_of_int 0;\n      token = Pp_close_tag;\n      length = 0;\n    };\n  if state.pp_print_tags then\n  begin\n    match state.pp_tag_stack with\n    | tag_name :: tags ->\n      state.pp_print_close_tag tag_name;\n      state.pp_tag_stack <- tags\n    | _ -> () (* No more tag to close. *)\n  end\n\n\nlet pp_set_print_tags state b = state.pp_print_tags <- b\nlet pp_set_mark_tags state b = state.pp_mark_tags <- b\nlet pp_get_print_tags state () = state.pp_print_tags\nlet pp_get_mark_tags state () = state.pp_mark_tags\nlet pp_set_tags state b =\n  pp_set_print_tags state b; pp_set_mark_tags state b\n\n\n(* Handling tag handling functions: get/set functions. *)\nlet pp_get_formatter_tag_functions state () = {\n  mark_open_tag = state.pp_mark_open_tag;\n  mark_close_tag = state.pp_mark_close_tag;\n  print_open_tag = state.pp_print_open_tag;\n  print_close_tag = state.pp_print_close_tag;\n}\n\n\nlet pp_set_formatter_tag_functions state {\n     mark_open_tag = mot;\n     mark_close_tag = mct;\n     print_open_tag = pot;\n     print_close_tag = pct;\n  } =\n  state.pp_mark_open_tag <- mot;\n  state.pp_mark_close_tag <- mct;\n  state.pp_print_open_tag <- pot;\n  state.pp_print_close_tag <- pct\n\n\n(* Initialize pretty-printer. *)\nlet pp_rinit state =\n  pp_clear_queue state;\n  clear_scan_stack state;\n  state.pp_format_stack <- [];\n  state.pp_tbox_stack <- [];\n  state.pp_tag_stack <- [];\n  state.pp_mark_stack <- [];\n  state.pp_current_indent <- 0;\n  state.pp_curr_depth <- 0;\n  state.pp_space_left <- state.pp_margin;\n  pp_open_sys_box state\n\n\n(* Flushing pretty-printer queue. *)\nlet pp_flush_queue state b =\n  while state.pp_curr_depth > 1 do\n    pp_close_box state ()\n  done;\n  state.pp_right_total <- pp_infinity;\n  advance_left state;\n  if b then pp_output_newline state;\n  pp_rinit state\n\n\n(*\n\n  Procedures to format values and use boxes.\n\n*)\n\n(* To format a string. *)\nlet pp_print_as_size state size s =\n  if state.pp_curr_depth < state.pp_max_boxes\n  then enqueue_string_as state size s\n\n\nlet pp_print_as state isize s =\n  pp_print_as_size state (size_of_int isize) s\n\n\nlet pp_print_string state s =\n  pp_print_as state (String.length s) s\n\n\n(* To format an integer. *)\nlet pp_print_int state i = pp_print_string state (string_of_int i)\n\n(* To format a float. *)\nlet pp_print_float state f = pp_print_string state (string_of_float f)\n\n(* To format a boolean. *)\nlet pp_print_bool state b = pp_print_string state (string_of_bool b)\n\n(* To format a char. *)\nlet pp_print_char state c =\n  pp_print_as state 1 (String.make 1 c)\n\n\n(* Opening boxes. *)\nlet pp_open_hbox state () = pp_open_box_gen state 0 Pp_hbox\nand pp_open_vbox state indent = pp_open_box_gen state indent Pp_vbox\n\nand pp_open_hvbox state indent = pp_open_box_gen state indent Pp_hvbox\nand pp_open_hovbox state indent = pp_open_box_gen state indent Pp_hovbox\nand pp_open_box state indent = pp_open_box_gen state indent Pp_box\n\n\n(* Printing all queued text.\n   [print_newline] prints a new line after flushing the queue.\n   [print_flush] on flush the queue without adding a newline. *)\nlet pp_print_newline state () =\n  pp_flush_queue state true; state.pp_out_flush ()\nand pp_print_flush state () =\n  pp_flush_queue state false; state.pp_out_flush ()\n\n\n(* To get a newline when one does not want to close the current box. *)\nlet pp_force_newline state () =\n  if state.pp_curr_depth < state.pp_max_boxes then\n    enqueue_advance state (make_queue_elem (size_of_int 0) Pp_newline 0)\n\n\n(* To format something, only in case the line has just been broken. *)\nlet pp_print_if_newline state () =\n  if state.pp_curr_depth < state.pp_max_boxes then\n    enqueue_advance state (make_queue_elem (size_of_int 0) Pp_if_newline 0)\n\n\n(* Printing break hints:\n   A break hint indicates where a box may be broken.\n   If line is broken then offset is added to the indentation of the current\n   box else (the value of) width blanks are printed. *)\nlet pp_print_break state width offset =\n  if state.pp_curr_depth < state.pp_max_boxes then\n    let elem =\n      make_queue_elem\n        (size_of_int (- state.pp_right_total))\n        (Pp_break (width, offset))\n        width in\n    scan_push state true elem\n\n\n(* Print a space :\n   a space is a break hint that prints a single space if the break does not\n   split the line;\n   a cut is a break hint that prints nothing if the break does not split the\n   line. *)\nlet pp_print_space state () = pp_print_break state 1 0\nand pp_print_cut state () = pp_print_break state 0 0\n\n\n(* Tabulation boxes. *)\nlet pp_open_tbox state () =\n  state.pp_curr_depth <- state.pp_curr_depth + 1;\n  if state.pp_curr_depth < state.pp_max_boxes then\n    let elem =\n      make_queue_elem (size_of_int 0) (Pp_tbegin (Pp_tbox (ref []))) 0 in\n    enqueue_advance state elem\n\n\n(* Close a tabulation box. *)\nlet pp_close_tbox state () =\n  if state.pp_curr_depth > 1 then\n  begin\n   if state.pp_curr_depth < state.pp_max_boxes then\n     let elem = make_queue_elem (size_of_int 0) Pp_tend 0 in\n     enqueue_advance state elem;\n     state.pp_curr_depth <- state.pp_curr_depth - 1\n  end\n\n\n(* Print a tabulation break. *)\nlet pp_print_tbreak state width offset =\n  if state.pp_curr_depth < state.pp_max_boxes then\n    let elem =\n      make_queue_elem\n        (size_of_int (- state.pp_right_total))\n        (Pp_tbreak (width, offset))\n        width in\n    scan_push state true elem\n\n\nlet pp_print_tab state () = pp_print_tbreak state 0 0\n\nlet pp_set_tab state () =\n  if state.pp_curr_depth < state.pp_max_boxes then\n    let elem =\n      make_queue_elem (size_of_int 0) Pp_stab 0 in\n    enqueue_advance state elem\n\n\n(*\n\n  Procedures to control the pretty-printers\n\n*)\n\n(* Set_max_boxes. *)\nlet pp_set_max_boxes state n = if n > 1 then state.pp_max_boxes <- n\n\n(* To know the current maximum number of boxes allowed. *)\nlet pp_get_max_boxes state () = state.pp_max_boxes\n\nlet pp_over_max_boxes state () = state.pp_curr_depth = state.pp_max_boxes\n\n(* Ellipsis. *)\nlet pp_set_ellipsis_text state s = state.pp_ellipsis <- s\nand pp_get_ellipsis_text state () = state.pp_ellipsis\n\n\n(* To set the margin of pretty-printer. *)\nlet pp_limit n =\n  if n < pp_infinity then n else pred pp_infinity\n\n\n(* Internal pretty-printer functions. *)\nlet pp_set_min_space_left state n =\n  if n >= 1 then\n    let n = pp_limit n in\n    state.pp_min_space_left <- n;\n    state.pp_max_indent <- state.pp_margin - state.pp_min_space_left;\n    pp_rinit state\n\n\n(* Initially, we have :\n   pp_max_indent = pp_margin - pp_min_space_left, and\n   pp_space_left = pp_margin. *)\nlet pp_set_max_indent state n =\n  pp_set_min_space_left state (state.pp_margin - n)\n\n\nlet pp_get_max_indent state () = state.pp_max_indent\n\nlet pp_set_margin state n =\n  if n >= 1 then\n    let n = pp_limit n in\n    state.pp_margin <- n;\n    let new_max_indent =\n      (* Try to maintain max_indent to its actual value. *)\n      if state.pp_max_indent <= state.pp_margin\n      then state.pp_max_indent else\n      (* If possible maintain pp_min_space_left to its actual value,\n         if this leads to a too small max_indent, take half of the\n         new margin, if it is greater than 1. *)\n       max (max (state.pp_margin - state.pp_min_space_left)\n                (state.pp_margin / 2)) 1 in\n    (* Rebuild invariants. *)\n    pp_set_max_indent state new_max_indent\n\n\nlet pp_get_margin state () = state.pp_margin\n\n(* Setting a formatter basic output functions. *)\nlet pp_set_formatter_out_functions state {\n      out_string = f;\n      out_flush = g;\n      out_newline = h;\n      out_spaces = i;\n    } =\n  state.pp_out_string <- f;\n  state.pp_out_flush <- g;\n  state.pp_out_newline <- h;\n  state.pp_out_spaces <- i\n\n\nlet pp_get_formatter_out_functions state () = {\n  out_string = state.pp_out_string;\n  out_flush = state.pp_out_flush;\n  out_newline = state.pp_out_newline;\n  out_spaces = state.pp_out_spaces;\n}\n\n\n(* Setting a formatter basic string output and flush functions. *)\nlet pp_set_formatter_output_functions state f g =\n  state.pp_out_string <- f; state.pp_out_flush <- g\n\nlet pp_get_formatter_output_functions state () =\n  (state.pp_out_string, state.pp_out_flush)\n\n\nlet pp_flush_formatter state =\n  pp_flush_queue state false\n\n(* The default function to output new lines. *)\nlet display_newline state () = state.pp_out_string \"\\n\" 0  1\n\n(* The default function to output spaces. *)\nlet blank_line = String.make 80 ' '\nlet rec display_blanks state n =\n  if n > 0 then\n  if n <= 80 then state.pp_out_string blank_line 0 n else\n  begin\n    state.pp_out_string blank_line 0 80;\n    display_blanks state (n - 80)\n  end\n\n\n(* Setting a formatter basic output functions as printing to a given\n   [Pervasive.out_channel] value. *)\nlet pp_set_formatter_out_channel state os =\n  state.pp_out_string <- output_substring os;\n  state.pp_out_flush <- (fun () -> flush os);\n  state.pp_out_newline <- display_newline state;\n  state.pp_out_spaces <- display_blanks state\n\n\n(*\n\n  Defining specific formatters\n\n*)\n\nlet default_pp_mark_open_tag s = \"<\" ^ s ^ \">\"\nlet default_pp_mark_close_tag s = \"</\" ^ s ^ \">\"\n\nlet default_pp_print_open_tag = ignore\nlet default_pp_print_close_tag = ignore\n\n(* Bulding a formatter given its basic output functions.\n   Other fields get reasonable default values. *)\nlet pp_make_formatter f g h i =\n  (* The initial state of the formatter contains a dummy box. *)\n  let pp_queue = make_queue () in\n  let sys_tok =\n    make_queue_elem (size_of_int (-1)) (Pp_begin (0, Pp_hovbox)) 0 in\n  add_queue sys_tok pp_queue;\n  let sys_scan_stack =\n    Scan_elem (1, sys_tok) :: scan_stack_bottom in\n  let pp_margin = 78\n  and pp_min_space_left = 10 in\n  {\n    pp_scan_stack = sys_scan_stack;\n    pp_format_stack = [];\n    pp_tbox_stack = [];\n    pp_tag_stack = [];\n    pp_mark_stack = [];\n    pp_margin = pp_margin;\n    pp_min_space_left = pp_min_space_left;\n    pp_max_indent = pp_margin - pp_min_space_left;\n    pp_space_left = pp_margin;\n    pp_current_indent = 0;\n    pp_is_new_line = true;\n    pp_left_total = 1;\n    pp_right_total = 1;\n    pp_curr_depth = 1;\n    pp_max_boxes = max_int;\n    pp_ellipsis = \".\";\n    pp_out_string = f;\n    pp_out_flush = g;\n    pp_out_newline = h;\n    pp_out_spaces = i;\n    pp_print_tags = false;\n    pp_mark_tags = false;\n    pp_mark_open_tag = default_pp_mark_open_tag;\n    pp_mark_close_tag = default_pp_mark_close_tag;\n    pp_print_open_tag = default_pp_print_open_tag;\n    pp_print_close_tag = default_pp_print_close_tag;\n    pp_queue = pp_queue;\n  }\n\n\n(* Make a formatter with default functions to output spaces and new lines. *)\nlet make_formatter output flush =\n  let ppf = pp_make_formatter output flush ignore ignore in\n  ppf.pp_out_newline <- display_newline ppf;\n  ppf.pp_out_spaces <- display_blanks ppf;\n  ppf\n\n\n(* Make a formatter writing to a given [Pervasive.out_channel] value. *)\nlet formatter_of_out_channel oc =\n  make_formatter (output_substring oc) (fun () -> flush oc)\n\n\n(* Make a formatter writing to a given [Buffer.t] value. *)\nlet formatter_of_buffer b =\n  make_formatter (Buffer.add_substring b) ignore\n\n\n(* Allocating buffer for pretty-printing purposes.\n   Default buffer size is pp_buffer_size or 512.\n*)\nlet pp_buffer_size = 512\nlet pp_make_buffer () = Buffer.create pp_buffer_size\n\n(* The standard (shared) buffer. *)\nlet stdbuf = pp_make_buffer ()\n\n(* Predefined formatters standard formatter to print\n   to [Pervasives.stdout], [Pervasives.stderr], and {!stdbuf}. *)\nlet std_formatter = formatter_of_out_channel Pervasives.stdout\nand err_formatter = formatter_of_out_channel Pervasives.stderr\nand str_formatter = formatter_of_buffer stdbuf\n\n\n(* [flush_buffer_formatter buf ppf] flushes formatter [ppf],\n   then return the contents of buffer [buff] thst is reset.\n   Formatter [ppf] is supposed to print to buffer [buf], otherwise this\n   function is not really useful. *)\nlet flush_buffer_formatter buf ppf =\n  pp_flush_queue ppf false;\n  let s = Buffer.contents buf in\n  Buffer.reset buf;\n  s\n\n\n(* Flush [str_formatter] and get the contents of [stdbuf]. *)\nlet flush_str_formatter () = flush_buffer_formatter stdbuf str_formatter\n\n(*\n\n  Basic functions on the 'standard' formatter\n  (the formatter that prints to [Pervasives.stdout]).\n\n*)\n\nlet open_hbox = pp_open_hbox std_formatter\nand open_vbox = pp_open_vbox std_formatter\nand open_hvbox = pp_open_hvbox std_formatter\nand open_hovbox = pp_open_hovbox std_formatter\nand open_box = pp_open_box std_formatter\nand close_box = pp_close_box std_formatter\nand open_tag = pp_open_tag std_formatter\nand close_tag = pp_close_tag std_formatter\nand print_as = pp_print_as std_formatter\nand print_string = pp_print_string std_formatter\nand print_int = pp_print_int std_formatter\nand print_float = pp_print_float std_formatter\nand print_char = pp_print_char std_formatter\nand print_bool = pp_print_bool std_formatter\nand print_break = pp_print_break std_formatter\nand print_cut = pp_print_cut std_formatter\nand print_space = pp_print_space std_formatter\nand force_newline = pp_force_newline std_formatter\nand print_flush = pp_print_flush std_formatter\nand print_newline = pp_print_newline std_formatter\nand print_if_newline = pp_print_if_newline std_formatter\n\nand open_tbox = pp_open_tbox std_formatter\nand close_tbox = pp_close_tbox std_formatter\nand print_tbreak = pp_print_tbreak std_formatter\n\nand set_tab = pp_set_tab std_formatter\nand print_tab = pp_print_tab std_formatter\n\nand set_margin = pp_set_margin std_formatter\nand get_margin = pp_get_margin std_formatter\n\nand set_max_indent = pp_set_max_indent std_formatter\nand get_max_indent = pp_get_max_indent std_formatter\n\nand set_max_boxes = pp_set_max_boxes std_formatter\nand get_max_boxes = pp_get_max_boxes std_formatter\nand over_max_boxes = pp_over_max_boxes std_formatter\n\nand set_ellipsis_text = pp_set_ellipsis_text std_formatter\nand get_ellipsis_text = pp_get_ellipsis_text std_formatter\n\nand set_formatter_out_channel =\n  pp_set_formatter_out_channel std_formatter\n\nand set_formatter_out_functions =\n  pp_set_formatter_out_functions std_formatter\nand get_formatter_out_functions =\n  pp_get_formatter_out_functions std_formatter\n\nand set_formatter_output_functions =\n  pp_set_formatter_output_functions std_formatter\nand get_formatter_output_functions =\n  pp_get_formatter_output_functions std_formatter\n\nand set_formatter_tag_functions =\n  pp_set_formatter_tag_functions std_formatter\nand get_formatter_tag_functions =\n  pp_get_formatter_tag_functions std_formatter\nand set_print_tags =\n  pp_set_print_tags std_formatter\nand get_print_tags =\n  pp_get_print_tags std_formatter\nand set_mark_tags =\n  pp_set_mark_tags std_formatter\nand get_mark_tags =\n  pp_get_mark_tags std_formatter\nand set_tags =\n  pp_set_tags std_formatter\n\n\n(* Convenience functions *)\n\n(* To format a list *)\nlet rec pp_print_list ?(pp_sep = pp_print_cut) pp_v ppf = function\n  | [] -> ()\n  | [v] -> pp_v ppf v\n  | v :: vs ->\n    pp_v ppf v;\n    pp_sep ppf ();\n    pp_print_list ~pp_sep pp_v ppf vs\n\n(* To format free-flowing text *)\nlet pp_print_text ppf s =\n  let len = String.length s in\n  let left = ref 0 in\n  let right = ref 0 in\n  let flush () =\n    pp_print_string ppf (String.sub s !left (!right - !left));\n    incr right; left := !right;\n  in\n  while (!right <> len) do\n    match s.[!right] with\n      | '\\n' ->\n        flush ();\n        pp_force_newline ppf ()\n      | ' ' ->\n        flush (); pp_print_space ppf ()\n      (* there is no specific support for '\\t'\n         as it is unclear what a right semantics would be *)\n      | _ -> incr right\n  done;\n  if !left <> len then flush ()\n\n (**************************************************************)\n\nlet compute_tag output tag_acc =\n  let buf = Buffer.create 16 in\n  let ppf = formatter_of_buffer buf in\n  output ppf tag_acc;\n  pp_print_flush ppf ();\n  let len = Buffer.length buf in\n  if len < 2 then Buffer.contents buf\n  else Buffer.sub buf 1 (len - 2)\n\n (**************************************************************\n\n  Defining continuations to be passed as arguments of\n  CamlinternalFormat.make_printf.\n\n  **************************************************************)\n\nopen CamlinternalFormatBasics\nopen CamlinternalFormat\n\n(* Interpret a formatting entity on a formatter. *)\nlet output_formatting_lit ppf fmting_lit = match fmting_lit with\n  | Close_box                 -> pp_close_box ppf ()\n  | Close_tag                 -> pp_close_tag ppf ()\n  | Break (_, width, offset)  -> pp_print_break ppf width offset\n  | FFlush                    -> pp_print_flush ppf ()\n  | Force_newline             -> pp_force_newline ppf ()\n  | Flush_newline             -> pp_print_newline ppf ()\n  | Magic_size (_, _)         -> ()\n  | Escaped_at                -> pp_print_char ppf '@'\n  | Escaped_percent           -> pp_print_char ppf '%'\n  | Scan_indic c              -> pp_print_char ppf '@'; pp_print_char ppf c\n\n(* Recursively output an \"accumulator\" containing a reversed list of\n   printing entities (string, char, flus, ...) in an output_stream. *)\n(* Differ from Printf.output_acc by the interpretation of formatting. *)\n(* Used as a continuation of CamlinternalFormat.make_printf. *)\nlet rec output_acc ppf acc = match acc with\n  | Acc_string_literal (Acc_formatting_lit (p, Magic_size (_, size)), s)\n  | Acc_data_string (Acc_formatting_lit (p, Magic_size (_, size)), s) ->\n    output_acc ppf p;\n    pp_print_as_size ppf (size_of_int size) s;\n  | Acc_char_literal (Acc_formatting_lit (p, Magic_size (_, size)), c)\n  | Acc_data_char (Acc_formatting_lit (p, Magic_size (_, size)), c) ->\n    output_acc ppf p;\n    pp_print_as_size ppf (size_of_int size) (String.make 1 c);\n  | Acc_formatting_lit (p, f) ->\n    output_acc ppf p;\n    output_formatting_lit ppf f;\n  | Acc_formatting_gen (p, Acc_open_tag acc') ->\n    output_acc ppf p;\n    pp_open_tag ppf (compute_tag output_acc acc')\n  | Acc_formatting_gen (p, Acc_open_box acc') ->\n    output_acc ppf p;\n    let (indent, bty) = open_box_of_string (compute_tag output_acc acc') in\n    pp_open_box_gen ppf indent bty\n  | Acc_string_literal (p, s)\n  | Acc_data_string (p, s)   -> output_acc ppf p; pp_print_string ppf s;\n  | Acc_char_literal (p, c)\n  | Acc_data_char (p, c)     -> output_acc ppf p; pp_print_char ppf c;\n  | Acc_delay (p, f)         -> output_acc ppf p; f ppf;\n  | Acc_flush p              -> output_acc ppf p; pp_print_flush ppf ();\n  | Acc_invalid_arg (p, msg) -> output_acc ppf p; invalid_arg msg;\n  | End_of_acc               -> ()\n\n(* Recursively output an \"accumulator\" containing a reversed list of\n   printing entities (string, char, flus, ...) in a buffer. *)\n(* Differ from Printf.bufput_acc by the interpretation of formatting. *)\n(* Used as a continuation of CamlinternalFormat.make_printf. *)\nlet rec strput_acc ppf acc = match acc with\n  | Acc_string_literal (Acc_formatting_lit (p, Magic_size (_, size)), s)\n  | Acc_data_string (Acc_formatting_lit (p, Magic_size (_, size)), s) ->\n    strput_acc ppf p;\n    pp_print_as_size ppf (size_of_int size) s;\n  | Acc_char_literal (Acc_formatting_lit (p, Magic_size (_, size)), c)\n  | Acc_data_char (Acc_formatting_lit (p, Magic_size (_, size)), c) ->\n    strput_acc ppf p;\n    pp_print_as_size ppf (size_of_int size) (String.make 1 c);\n  | Acc_delay (Acc_formatting_lit (p, Magic_size (_, size)), f) ->\n    strput_acc ppf p;\n    pp_print_as_size ppf (size_of_int size) (f ());\n  | Acc_formatting_lit (p, f) ->\n    strput_acc ppf p;\n    output_formatting_lit ppf f;\n  | Acc_formatting_gen (p, Acc_open_tag acc') ->\n    strput_acc ppf p;\n    pp_open_tag ppf (compute_tag strput_acc acc')\n  | Acc_formatting_gen (p, Acc_open_box acc') ->\n    strput_acc ppf p;\n    let (indent, bty) = open_box_of_string (compute_tag strput_acc acc') in\n    pp_open_box_gen ppf indent bty\n  | Acc_string_literal (p, s)\n  | Acc_data_string (p, s)   -> strput_acc ppf p; pp_print_string ppf s;\n  | Acc_char_literal (p, c)\n  | Acc_data_char (p, c)     -> strput_acc ppf p; pp_print_char ppf c;\n  | Acc_delay (p, f)         -> strput_acc ppf p; pp_print_string ppf (f ());\n  | Acc_flush p              -> strput_acc ppf p; pp_print_flush ppf ();\n  | Acc_invalid_arg (p, msg) -> strput_acc ppf p; invalid_arg msg;\n  | End_of_acc               -> ()\n\n(*\n\n  Defining [fprintf] and various flavors of [fprintf].\n\n*)\n\nlet kfprintf k ppf (Format (fmt, _)) =\n  make_printf\n    (fun ppf acc -> output_acc ppf acc; k ppf)\n    ppf End_of_acc fmt\n\nand ikfprintf k ppf (Format (fmt, _)) =\n  make_iprintf k ppf fmt\n\nlet fprintf ppf = kfprintf ignore ppf\nlet ifprintf ppf = ikfprintf ignore ppf\nlet printf fmt = fprintf std_formatter fmt\nlet eprintf fmt = fprintf err_formatter fmt\n\nlet ksprintf k (Format (fmt, _)) =\n  let b = pp_make_buffer () in\n  let ppf = formatter_of_buffer b in\n  let k () acc =\n    strput_acc ppf acc;\n    k (flush_buffer_formatter b ppf) in\n  make_printf k () End_of_acc fmt\n\n\nlet sprintf fmt = ksprintf (fun s -> s) fmt\n\nlet kasprintf k (Format (fmt, _)) =\n  let b = pp_make_buffer () in\n  let ppf = formatter_of_buffer b in\n  let k ppf acc =\n    output_acc ppf acc;\n    k (flush_buffer_formatter b ppf) in\n  make_printf k ppf End_of_acc fmt\n\n\nlet asprintf fmt = kasprintf (fun s -> s) fmt\n\n(* Output everything left in the pretty printer queue at end of execution. *)\nlet () = at_exit print_flush\n\n\n(*\n\n  Deprecated stuff.\n\n*)\n\n(* Deprecated : subsumed by pp_set_formatter_out_functions *)\nlet pp_set_all_formatter_output_functions state\n    ~out:f ~flush:g ~newline:h ~spaces:i =\n  pp_set_formatter_output_functions state f g;\n  state.pp_out_newline <- h;\n  state.pp_out_spaces <- i\n\n\n(* Deprecated : subsumed by pp_get_formatter_out_functions *)\nlet pp_get_all_formatter_output_functions state () =\n  (state.pp_out_string, state.pp_out_flush,\n   state.pp_out_newline, state.pp_out_spaces)\n\n\n(* Deprecated : subsumed by set_formatter_out_functions *)\nlet set_all_formatter_output_functions =\n  pp_set_all_formatter_output_functions std_formatter\n\n\n(* Deprecated : subsumed by get_formatter_out_functions *)\nlet get_all_formatter_output_functions =\n  pp_get_all_formatter_output_functions std_formatter\n\n\n(* Deprecated : error prone function, do not use it.\n   Define a formatter of your own writing to the buffer,\n   as in\n   let ppf = formatter_of_buffer b\n   then use {!fprintf ppf} as useual. *)\nlet bprintf b (Format (fmt, _) : ('a, formatter, unit) format) =\n  let k ppf acc = output_acc ppf acc; pp_flush_queue ppf false in\n  make_printf k (formatter_of_buffer b) End_of_acc fmt\n\n\n(* Deprecated : alias for ksprintf. *)\nlet kprintf = ksprintf\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Xavier Leroy, projet Cristal, INRIA Rocquencourt           *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* Registering OCaml values with the C runtime for later callbacks *)\n\nexternal register_named_value : string -> Obj.t -> unit\n                              = \"caml_register_named_value\"\n\nlet register name v =\n  register_named_value name (Obj.repr v)\n\nlet register_exception name (exn : exn) =\n  let exn = Obj.repr exn in\n  let slot = if Obj.tag exn = Obj.object_tag then exn else Obj.field exn 0 in\n  register_named_value name slot\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*          Jerome Vouillon, projet Cristal, INRIA Rocquencourt           *)\n(*                                                                        *)\n(*   Copyright 2002 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\nopen Obj\n\n(**** Object representation ****)\n\nexternal set_id: 'a -> 'a = \"caml_set_oo_id\" [@@noalloc]\n\n(**** Object copy ****)\n\nlet copy o =\n  let o = (Obj.obj (Obj.dup (Obj.repr o))) in\n  set_id o\n\n(**** Compression options ****)\n(* Parameters *)\ntype params = {\n    mutable compact_table : bool;\n    mutable copy_parent : bool;\n    mutable clean_when_copying : bool;\n    mutable retry_count : int;\n    mutable bucket_small_size : int\n  }\n\nlet params = {\n  compact_table = true;\n  copy_parent = true;\n  clean_when_copying = true;\n  retry_count = 3;\n  bucket_small_size = 16\n}\n\n(**** Parameters ****)\n\nlet initial_object_size = 2\n\n(**** Items ****)\n\ntype item = DummyA | DummyB | DummyC of int\nlet _ = [DummyA; DummyB; DummyC 0] (* to avoid warnings *)\n\nlet dummy_item = (magic () : item)\n\n(**** Types ****)\n\ntype tag\ntype label = int\ntype closure = item\ntype t = DummyA | DummyB | DummyC of int\nlet _ = [DummyA; DummyB; DummyC 0] (* to avoid warnings *)\n\ntype obj = t array\nexternal ret : (obj -> 'a) -> closure = \"%identity\"\n\n(**** Labels ****)\n\nlet public_method_label s : tag =\n  let accu = ref 0 in\n  for i = 0 to String.length s - 1 do\n    accu := 223 * !accu + Char.code s.[i]\n  done;\n  (* reduce to 31 bits *)\n  accu := !accu land (1 lsl 31 - 1);\n  (* make it signed for 64 bits architectures *)\n  let tag = if !accu > 0x3FFFFFFF then !accu - (1 lsl 31) else !accu in\n  (* Printf.eprintf \"%s = %d\\n\" s tag; flush stderr; *)\n  magic tag\n\n(**** Sparse array ****)\n\nmodule Vars =\n  Map.Make(struct type t = string let compare (x:t) y = compare x y end)\ntype vars = int Vars.t\n\nmodule Meths =\n  Map.Make(struct type t = string let compare (x:t) y = compare x y end)\ntype meths = label Meths.t\nmodule Labs =\n  Map.Make(struct type t = label let compare (x:t) y = compare x y end)\ntype labs = bool Labs.t\n\n(* The compiler assumes that the first field of this structure is [size]. *)\ntype table =\n { mutable size: int;\n   mutable methods: closure array;\n   mutable methods_by_name: meths;\n   mutable methods_by_label: labs;\n   mutable previous_states:\n     (meths * labs * (label * item) list * vars *\n      label list * string list) list;\n   mutable hidden_meths: (label * item) list;\n   mutable vars: vars;\n   mutable initializers: (obj -> unit) list }\n\nlet dummy_table =\n  { methods = [| dummy_item |];\n    methods_by_name = Meths.empty;\n    methods_by_label = Labs.empty;\n    previous_states = [];\n    hidden_meths = [];\n    vars = Vars.empty;\n    initializers = [];\n    size = 0 }\n\nlet table_count = ref 0\n\n(* dummy_met should be a pointer, so use an atom *)\nlet dummy_met : item = obj (Obj.new_block 0 0)\n(* if debugging is needed, this could be a good idea: *)\n(* let dummy_met () = failwith \"Undefined method\" *)\n\nlet rec fit_size n =\n  if n <= 2 then n else\n  fit_size ((n+1)/2) * 2\n\nlet new_table pub_labels =\n  incr table_count;\n  let len = Array.length pub_labels in\n  let methods = Array.make (len*2+2) dummy_met in\n  methods.(0) <- magic len;\n  methods.(1) <- magic (fit_size len * Sys.word_size / 8 - 1);\n  for i = 0 to len - 1 do methods.(i*2+3) <- magic pub_labels.(i) done;\n  { methods = methods;\n    methods_by_name = Meths.empty;\n    methods_by_label = Labs.empty;\n    previous_states = [];\n    hidden_meths = [];\n    vars = Vars.empty;\n    initializers = [];\n    size = initial_object_size }\n\nlet resize array new_size =\n  let old_size = Array.length array.methods in\n  if new_size > old_size then begin\n    let new_buck = Array.make new_size dummy_met in\n    Array.blit array.methods 0 new_buck 0 old_size;\n    array.methods <- new_buck\n end\n\nlet put array label element =\n  resize array (label + 1);\n  array.methods.(label) <- element\n\n(**** Classes ****)\n\nlet method_count = ref 0\nlet inst_var_count = ref 0\n\n(* type t *)\ntype meth = item\n\nlet new_method table =\n  let index = Array.length table.methods in\n  resize table (index + 1);\n  index\n\nlet get_method_label table name =\n  try\n    Meths.find name table.methods_by_name\n  with Not_found ->\n    let label = new_method table in\n    table.methods_by_name <- Meths.add name label table.methods_by_name;\n    table.methods_by_label <- Labs.add label true table.methods_by_label;\n    label\n\nlet get_method_labels table names =\n  Array.map (get_method_label table) names\n\nlet set_method table label element =\n  incr method_count;\n  if Labs.find label table.methods_by_label then\n    put table label element\n  else\n    table.hidden_meths <- (label, element) :: table.hidden_meths\n\nlet get_method table label =\n  try List.assoc label table.hidden_meths\n  with Not_found -> table.methods.(label)\n\nlet to_list arr =\n  if arr == magic 0 then [] else Array.to_list arr\n\nlet narrow table vars virt_meths concr_meths =\n  let vars = to_list vars\n  and virt_meths = to_list virt_meths\n  and concr_meths = to_list concr_meths in\n  let virt_meth_labs = List.map (get_method_label table) virt_meths in\n  let concr_meth_labs = List.map (get_method_label table) concr_meths in\n  table.previous_states <-\n     (table.methods_by_name, table.methods_by_label, table.hidden_meths,\n      table.vars, virt_meth_labs, vars)\n     :: table.previous_states;\n  table.vars <-\n    Vars.fold\n      (fun lab info tvars ->\n        if List.mem lab vars then Vars.add lab info tvars else tvars)\n      table.vars Vars.empty;\n  let by_name = ref Meths.empty in\n  let by_label = ref Labs.empty in\n  List.iter2\n    (fun met label ->\n       by_name := Meths.add met label !by_name;\n       by_label :=\n          Labs.add label\n            (try Labs.find label table.methods_by_label with Not_found -> true)\n            !by_label)\n    concr_meths concr_meth_labs;\n  List.iter2\n    (fun met label ->\n       by_name := Meths.add met label !by_name;\n       by_label := Labs.add label false !by_label)\n    virt_meths virt_meth_labs;\n  table.methods_by_name <- !by_name;\n  table.methods_by_label <- !by_label;\n  table.hidden_meths <-\n     List.fold_right\n       (fun ((lab, _) as met) hm ->\n          if List.mem lab virt_meth_labs then hm else met::hm)\n       table.hidden_meths\n       []\n\nlet widen table =\n  let (by_name, by_label, saved_hidden_meths, saved_vars, virt_meths, vars) =\n    List.hd table.previous_states\n  in\n  table.previous_states <- List.tl table.previous_states;\n  table.vars <-\n     List.fold_left\n       (fun s v -> Vars.add v (Vars.find v table.vars) s)\n       saved_vars vars;\n  table.methods_by_name <- by_name;\n  table.methods_by_label <- by_label;\n  table.hidden_meths <-\n     List.fold_right\n       (fun ((lab, _) as met) hm ->\n          if List.mem lab virt_meths then hm else met::hm)\n       table.hidden_meths\n       saved_hidden_meths\n\nlet new_slot table =\n  let index = table.size in\n  table.size <- index + 1;\n  index\n\nlet new_variable table name =\n  try Vars.find name table.vars\n  with Not_found ->\n    let index = new_slot table in\n    if name <> \"\" then table.vars <- Vars.add name index table.vars;\n    index\n\nlet to_array arr =\n  if arr = Obj.magic 0 then [||] else arr\n\nlet new_methods_variables table meths vals =\n  let meths = to_array meths in\n  let nmeths = Array.length meths and nvals = Array.length vals in\n  let res = Array.make (nmeths + nvals) 0 in\n  for i = 0 to nmeths - 1 do\n    res.(i) <- get_method_label table meths.(i)\n  done;\n  for i = 0 to nvals - 1 do\n    res.(i+nmeths) <- new_variable table vals.(i)\n  done;\n  res\n\nlet get_variable table name =\n  try Vars.find name table.vars with Not_found -> assert false\n\nlet get_variables table names =\n  Array.map (get_variable table) names\n\nlet add_initializer table f =\n  table.initializers <- f::table.initializers\n\n(*\nmodule Keys =\n  Map.Make(struct type t = tag array let compare (x:t) y = compare x y end)\nlet key_map = ref Keys.empty\nlet get_key tags : item =\n  try magic (Keys.find tags !key_map : tag array)\n  with Not_found ->\n    key_map := Keys.add tags tags !key_map;\n    magic tags\n*)\n\nlet create_table public_methods =\n  if public_methods == magic 0 then new_table [||] else\n  (* [public_methods] must be in ascending order for bytecode *)\n  let tags = Array.map public_method_label public_methods in\n  let table = new_table tags in\n  Array.iteri\n    (fun i met ->\n      let lab = i*2+2 in\n      table.methods_by_name  <- Meths.add met lab table.methods_by_name;\n      table.methods_by_label <- Labs.add lab true table.methods_by_label)\n    public_methods;\n  table\n\nlet init_class table =\n  inst_var_count := !inst_var_count + table.size - 1;\n  table.initializers <- List.rev table.initializers;\n  resize table (3 + magic table.methods.(1) * 16 / Sys.word_size)\n\nlet inherits cla vals virt_meths concr_meths (_, super, _, env) top =\n  narrow cla vals virt_meths concr_meths;\n  let init =\n    if top then super cla env else Obj.repr (super cla) in\n  widen cla;\n  Array.concat\n    [[| repr init |];\n     magic (Array.map (get_variable cla) (to_array vals) : int array);\n     Array.map\n       (fun nm -> repr (get_method cla (get_method_label cla nm) : closure))\n       (to_array concr_meths) ]\n\nlet make_class pub_meths class_init =\n  let table = create_table pub_meths in\n  let env_init = class_init table in\n  init_class table;\n  (env_init (Obj.repr 0), class_init, env_init, Obj.repr 0)\n\ntype init_table = { mutable env_init: t; mutable class_init: table -> t }\n\nlet make_class_store pub_meths class_init init_table =\n  let table = create_table pub_meths in\n  let env_init = class_init table in\n  init_class table;\n  init_table.class_init <- class_init;\n  init_table.env_init <- env_init\n\nlet dummy_class loc =\n  let undef = fun _ -> raise (Undefined_recursive_module loc) in\n  (Obj.magic undef, undef, undef, Obj.repr 0)\n\n(**** Objects ****)\n\nlet create_object table =\n  (* XXX Appel de [obj_block] | Call to [obj_block]  *)\n  let obj = Obj.new_block Obj.object_tag table.size in\n  (* XXX Appel de [caml_modify] | Call to [caml_modify] *)\n  Obj.set_field obj 0 (Obj.repr table.methods);\n  Obj.obj (set_id obj)\n\nlet create_object_opt obj_0 table =\n  if (Obj.magic obj_0 : bool) then obj_0 else begin\n    (* XXX Appel de [obj_block] | Call to [obj_block]  *)\n    let obj = Obj.new_block Obj.object_tag table.size in\n    (* XXX Appel de [caml_modify] | Call to [caml_modify] *)\n    Obj.set_field obj 0 (Obj.repr table.methods);\n    Obj.obj (set_id obj)\n  end\n\nlet rec iter_f obj =\n  function\n    []   -> ()\n  | f::l -> f obj; iter_f obj l\n\nlet run_initializers obj table =\n  let inits = table.initializers in\n  if inits <> [] then\n    iter_f obj inits\n\nlet run_initializers_opt obj_0 obj table =\n  if (Obj.magic obj_0 : bool) then obj else begin\n    let inits = table.initializers in\n    if inits <> [] then iter_f obj inits;\n    obj\n  end\n\nlet create_object_and_run_initializers obj_0 table =\n  if (Obj.magic obj_0 : bool) then obj_0 else begin\n    let obj = create_object table in\n    run_initializers obj table;\n    obj\n  end\n\n(* Equivalent primitive below\nlet sendself obj lab =\n  (magic obj : (obj -> t) array array).(0).(lab) obj\n*)\nexternal send : obj -> tag -> 'a = \"%send\"\nexternal sendcache : obj -> tag -> t -> int -> 'a = \"%sendcache\"\nexternal sendself : obj -> label -> 'a = \"%sendself\"\nexternal get_public_method : obj -> tag -> closure\n    = \"caml_get_public_method\" [@@noalloc]\n\n(**** table collection access ****)\n\ntype tables =\n  | Empty\n  | Cons of {key : closure; mutable data: tables; mutable next: tables}\n\nlet set_data tables v = match tables with\n  | Empty -> assert false\n  | Cons tables -> tables.data <- v\nlet set_next tables v = match tables with\n  | Empty -> assert false\n  | Cons tables -> tables.next <- v\nlet get_key = function\n  | Empty -> assert false\n  | Cons tables -> tables.key\nlet get_data = function\n  | Empty -> assert false\n  | Cons tables -> tables.data\nlet get_next = function\n  | Empty -> assert false\n  | Cons tables -> tables.next\n\nlet build_path n keys tables =\n  let res = Cons {key = Obj.magic 0; data = Empty; next = Empty} in\n  let r = ref res in\n  for i = 0 to n do\n    r := Cons {key = keys.(i); data = !r; next = Empty}\n  done;\n  set_data tables !r;\n  res\n\nlet rec lookup_keys i keys tables =\n  if i < 0 then tables else\n  let key = keys.(i) in\n  let rec lookup_key (tables:tables) =\n    if get_key tables == key then\n      match get_data tables with\n      | Empty -> assert false\n      | Cons _ as tables_data ->\n          lookup_keys (i-1) keys tables_data\n    else\n      match get_next tables with\n      | Cons _ as next -> lookup_key next\n      | Empty ->\n          let next : tables = Cons {key; data = Empty; next = Empty} in\n          set_next tables next;\n          build_path (i-1) keys next\n  in\n  lookup_key tables\n\nlet lookup_tables root keys =\n  match get_data root with\n  | Cons _ as root_data ->\n    lookup_keys (Array.length keys - 1) keys root_data\n  | Empty ->\n    build_path (Array.length keys - 1) keys root\n\n(**** builtin methods ****)\n\nlet get_const x = ret (fun _obj -> x)\nlet get_var n   = ret (fun obj -> Array.unsafe_get obj n)\nlet get_env e n =\n  ret (fun obj ->\n    Array.unsafe_get (Obj.magic (Array.unsafe_get obj e) : obj) n)\nlet get_meth n  = ret (fun obj -> sendself obj n)\nlet set_var n   = ret (fun obj x -> Array.unsafe_set obj n x)\nlet app_const f x = ret (fun _obj -> f x)\nlet app_var f n   = ret (fun obj -> f (Array.unsafe_get obj n))\nlet app_env f e n =\n  ret (fun obj ->\n    f (Array.unsafe_get (Obj.magic (Array.unsafe_get obj e) : obj) n))\nlet app_meth f n  = ret (fun obj -> f (sendself obj n))\nlet app_const_const f x y = ret (fun _obj -> f x y)\nlet app_const_var f x n   = ret (fun obj -> f x (Array.unsafe_get obj n))\nlet app_const_meth f x n = ret (fun obj -> f x (sendself obj n))\nlet app_var_const f n x = ret (fun obj -> f (Array.unsafe_get obj n) x)\nlet app_meth_const f n x = ret (fun obj -> f (sendself obj n) x)\nlet app_const_env f x e n =\n  ret (fun obj ->\n    f x (Array.unsafe_get (Obj.magic (Array.unsafe_get obj e) : obj) n))\nlet app_env_const f e n x =\n  ret (fun obj ->\n    f (Array.unsafe_get (Obj.magic (Array.unsafe_get obj e) : obj) n) x)\nlet meth_app_const n x = ret (fun obj -> (sendself obj n : _ -> _) x)\nlet meth_app_var n m =\n  ret (fun obj -> (sendself obj n : _ -> _) (Array.unsafe_get obj m))\nlet meth_app_env n e m =\n  ret (fun obj -> (sendself obj n : _ -> _)\n      (Array.unsafe_get (Obj.magic (Array.unsafe_get obj e) : obj) m))\nlet meth_app_meth n m =\n  ret (fun obj -> (sendself obj n : _ -> _) (sendself obj m))\nlet send_const m x c =\n  ret (fun obj -> sendcache x m (Array.unsafe_get obj 0) c)\nlet send_var m n c =\n  ret (fun obj ->\n    sendcache (Obj.magic (Array.unsafe_get obj n) : obj) m\n      (Array.unsafe_get obj 0) c)\nlet send_env m e n c =\n  ret (fun obj ->\n    sendcache\n      (Obj.magic (Array.unsafe_get\n                    (Obj.magic (Array.unsafe_get obj e) : obj) n) : obj)\n      m (Array.unsafe_get obj 0) c)\nlet send_meth m n c =\n  ret (fun obj ->\n    sendcache (sendself obj n) m (Array.unsafe_get obj 0) c)\nlet new_cache table =\n  let n = new_method table in\n  let n =\n    if n mod 2 = 0 || n > 2 + magic table.methods.(1) * 16 / Sys.word_size\n    then n else new_method table\n  in\n  table.methods.(n) <- Obj.magic 0;\n  n\n\ntype impl =\n    GetConst\n  | GetVar\n  | GetEnv\n  | GetMeth\n  | SetVar\n  | AppConst\n  | AppVar\n  | AppEnv\n  | AppMeth\n  | AppConstConst\n  | AppConstVar\n  | AppConstEnv\n  | AppConstMeth\n  | AppVarConst\n  | AppEnvConst\n  | AppMethConst\n  | MethAppConst\n  | MethAppVar\n  | MethAppEnv\n  | MethAppMeth\n  | SendConst\n  | SendVar\n  | SendEnv\n  | SendMeth\n  | Closure of closure\n\nlet method_impl table i arr =\n  let next () = incr i; magic arr.(!i) in\n  match next() with\n    GetConst -> let x : t = next() in get_const x\n  | GetVar   -> let n = next() in get_var n\n  | GetEnv   -> let e = next() in let n = next() in get_env e n\n  | GetMeth  -> let n = next() in get_meth n\n  | SetVar   -> let n = next() in set_var n\n  | AppConst -> let f = next() in let x = next() in app_const f x\n  | AppVar   -> let f = next() in let n = next () in app_var f n\n  | AppEnv   ->\n      let f = next() in  let e = next() in let n = next() in\n      app_env f e n\n  | AppMeth  -> let f = next() in let n = next () in app_meth f n\n  | AppConstConst ->\n      let f = next() in let x = next() in let y = next() in\n      app_const_const f x y\n  | AppConstVar ->\n      let f = next() in let x = next() in let n = next() in\n      app_const_var f x n\n  | AppConstEnv ->\n      let f = next() in let x = next() in let e = next () in let n = next() in\n      app_const_env f x e n\n  | AppConstMeth ->\n      let f = next() in let x = next() in let n = next() in\n      app_const_meth f x n\n  | AppVarConst ->\n      let f = next() in let n = next() in let x = next() in\n      app_var_const f n x\n  | AppEnvConst ->\n      let f = next() in let e = next () in let n = next() in let x = next() in\n      app_env_const f e n x\n  | AppMethConst ->\n      let f = next() in let n = next() in let x = next() in\n      app_meth_const f n x\n  | MethAppConst ->\n      let n = next() in let x = next() in meth_app_const n x\n  | MethAppVar ->\n      let n = next() in let m = next() in meth_app_var n m\n  | MethAppEnv ->\n      let n = next() in let e = next() in let m = next() in\n      meth_app_env n e m\n  | MethAppMeth ->\n      let n = next() in let m = next() in meth_app_meth n m\n  | SendConst ->\n      let m = next() in let x = next() in send_const m x (new_cache table)\n  | SendVar ->\n      let m = next() in let n = next () in send_var m n (new_cache table)\n  | SendEnv ->\n      let m = next() in let e = next() in let n = next() in\n      send_env m e n (new_cache table)\n  | SendMeth ->\n      let m = next() in let n = next () in send_meth m n (new_cache table)\n  | Closure _ as clo -> magic clo\n\nlet set_methods table methods =\n  let len = Array.length methods in let i = ref 0 in\n  while !i < len do\n    let label = methods.(!i) in let clo = method_impl table i methods in\n    set_method table label clo;\n    incr i\n  done\n\n(**** Statistics ****)\n\ntype stats =\n  { classes: int; methods: int; inst_vars: int; }\n\nlet stats () =\n  { classes = !table_count;\n    methods = !method_count; inst_vars = !inst_var_count; }\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*         Francois Pottier, projet Cristal, INRIA Rocquencourt           *)\n(*                  Jeremie Dimino, Jane Street Europe                    *)\n(*                                                                        *)\n(*   Copyright 2002 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\nexception Empty\n\ntype 'a cell =\n  | Nil\n  | Cons of { content: 'a; mutable next: 'a cell }\n\ntype 'a t = {\n  mutable length: int;\n  mutable first: 'a cell;\n  mutable last: 'a cell\n}\n\nlet create () = {\n  length = 0;\n  first = Nil;\n  last = Nil\n}\n\nlet clear q =\n  q.length <- 0;\n  q.first <- Nil;\n  q.last <- Nil\n\nlet add x q =\n  let cell = Cons {\n    content = x;\n    next = Nil\n  } in\n  match q.last with\n  | Nil ->\n    q.length <- 1;\n    q.first <- cell;\n    q.last <- cell\n  | Cons last ->\n    q.length <- q.length + 1;\n    last.next <- cell;\n    q.last <- cell\n\nlet push =\n  add\n\nlet peek q =\n  match q.first with\n  | Nil -> raise Empty\n  | Cons { content } -> content\n\nlet top =\n  peek\n\nlet take q =\n  match q.first with\n  | Nil -> raise Empty\n  | Cons { content; next = Nil } ->\n    clear q;\n    content\n  | Cons { content; next } ->\n    q.length <- q.length - 1;\n    q.first <- next;\n    content\n\nlet pop =\n  take\n\nlet copy =\n  let rec copy q_res prev cell =\n    match cell with\n    | Nil -> q_res.last <- prev; q_res\n    | Cons { content; next } ->\n      let res = Cons { content; next = Nil } in\n      begin match prev with\n      | Nil -> q_res.first <- res\n      | Cons p -> p.next <- res\n      end;\n      copy q_res res next\n  in\n  fun q -> copy { length = q.length; first = Nil; last = Nil } Nil q.first\n\nlet is_empty q =\n  q.length = 0\n\nlet length q =\n  q.length\n\nlet iter =\n  let rec iter f cell =\n    match cell with\n    | Nil -> ()\n    | Cons { content; next } ->\n      f content;\n      iter f next\n  in\n  fun f q -> iter f q.first\n\nlet fold =\n  let rec fold f accu cell =\n    match cell with\n    | Nil -> accu\n    | Cons { content; next } ->\n      let accu = f accu content in\n      fold f accu next\n  in\n  fun f accu q -> fold f accu q.first\n\nlet transfer q1 q2 =\n  if q1.length > 0 then\n    match q2.last with\n    | Nil ->\n      q2.length <- q1.length;\n      q2.first <- q1.first;\n      q2.last <- q1.last;\n      clear q1\n    | Cons last ->\n      q2.length <- q2.length + q1.length;\n      last.next <- q1.first;\n      q2.last <- q1.last;\n      clear q1\n","module Hashtbl = struct\n  include Hashtbl\n\n  let sexp_of_t = Conv.sexp_of_hashtbl\n  let t_of_sexp = Conv.hashtbl_of_sexp\nend\n\nmodule Lazy = struct\n  include Lazy\n\n  let t_of_sexp = Conv.lazy_t_of_sexp\n  let sexp_of_t = Conv.sexp_of_lazy_t\nend\n\nmodule Sexp_macro = Macro\n\nlet sexp_of_unit = Conv.sexp_of_unit\nlet unit_of_sexp = Conv.unit_of_sexp\n\nlet sexp_of_bool = Conv.sexp_of_bool\nlet bool_of_sexp = Conv.bool_of_sexp\n\nlet sexp_of_string = Conv.sexp_of_string\nlet string_of_sexp = Conv.string_of_sexp\n\nlet sexp_of_char = Conv.sexp_of_char\nlet char_of_sexp = Conv.char_of_sexp\n\nlet sexp_of_int = Conv.sexp_of_int\nlet int_of_sexp = Conv.int_of_sexp\n\nlet sexp_of_float = Conv.sexp_of_float\nlet float_of_sexp = Conv.float_of_sexp\n\nlet sexp_of_int32 = Conv.sexp_of_int32\nlet int32_of_sexp = Conv.int32_of_sexp\n\nlet sexp_of_int64 = Conv.sexp_of_int64\nlet int64_of_sexp = Conv.int64_of_sexp\n\nlet sexp_of_nativeint = Conv.sexp_of_nativeint\nlet nativeint_of_sexp = Conv.nativeint_of_sexp\n\nlet sexp_of_ref = Conv.sexp_of_ref\nlet ref_of_sexp = Conv.ref_of_sexp\n\nlet sexp_of_lazy_t = Conv.sexp_of_lazy_t\nlet lazy_t_of_sexp = Conv.lazy_t_of_sexp\n\nlet sexp_of_option = Conv.sexp_of_option\nlet option_of_sexp = Conv.option_of_sexp\n\nlet sexp_of_list = Conv.sexp_of_list\nlet list_of_sexp = Conv.list_of_sexp\n\nlet sexp_of_array = Conv.sexp_of_array\nlet array_of_sexp = Conv.array_of_sexp\n\nlet sexp_of_exn = Conv.sexp_of_exn\n","(* Conv_error: Module for Handling Errors during Automated S-expression\n   Conversions *)\n\nopen StdLabels\nopen Printf\nopen Sexp_conv\n\n(* Errors concerning tuples *)\n\nlet tuple_of_size_n_expected loc n sexp =\n  of_sexp_error (sprintf \"%s_of_sexp: tuple of size %d expected\" loc n) sexp\n\n\n(* Errors concerning sum types *)\n\nlet stag_no_args loc sexp =\n  of_sexp_error (loc ^ \"_of_sexp: sum tag does not take arguments\") sexp\n\nlet stag_incorrect_n_args loc tag sexp =\n  let msg =\n    sprintf \"%s_of_sexp: sum tag %S has incorrect number of arguments\" loc tag\n  in\n  of_sexp_error msg sexp\n\nlet stag_takes_args loc sexp =\n  of_sexp_error (loc ^ \"_of_sexp: sum tag must be a structured value\") sexp\n\nlet nested_list_invalid_sum loc sexp =\n  of_sexp_error (loc ^ \"_of_sexp: a nested list is an invalid sum\") sexp\n\nlet empty_list_invalid_sum loc sexp =\n  of_sexp_error (loc ^ \"_of_sexp: the empty list is an invalid sum\") sexp\n\nlet unexpected_stag loc sexp =\n  of_sexp_error (loc ^ \"_of_sexp: unexpected sum tag\") sexp\n\n\n(* Errors concerning records *)\n\nlet record_only_pairs_expected loc sexp =\n  let msg =\n    loc ^\n    \"_of_sexp: record conversion: only pairs expected, \\\n     their first element must be an atom\" in\n  of_sexp_error msg sexp\n\nlet record_superfluous_fields ~what ~loc rev_fld_names sexp =\n  let fld_names_str = String.concat (List.rev rev_fld_names) ~sep:\" \" in\n  let msg = sprintf \"%s_of_sexp: %s: %s\" loc what fld_names_str in\n  of_sexp_error msg sexp\n\nlet record_duplicate_fields loc rev_fld_names sexp =\n  record_superfluous_fields ~what:\"duplicate fields\" ~loc rev_fld_names sexp\n\nlet record_extra_fields loc rev_fld_names sexp =\n  record_superfluous_fields ~what:\"extra fields\" ~loc rev_fld_names sexp\n\nlet rec record_get_undefined_loop fields = function\n  | [] -> String.concat (List.rev fields) ~sep:\" \"\n  | (true, field) :: rest -> record_get_undefined_loop (field :: fields) rest\n  | _ :: rest -> record_get_undefined_loop fields rest\n\nlet record_undefined_elements loc sexp lst =\n  let undefined = record_get_undefined_loop [] lst in\n  let msg =\n    sprintf \"%s_of_sexp: the following record elements were undefined: %s\"\n      loc undefined\n  in\n  of_sexp_error msg sexp\n\nlet record_list_instead_atom loc sexp =\n  let msg = loc ^ \"_of_sexp: list instead of atom for record expected\" in\n  of_sexp_error msg sexp\n\nlet record_poly_field_value loc sexp =\n  let msg =\n    loc ^\n    \"_of_sexp: cannot convert values of types resulting from polymorphic \\\n     record fields\"\n  in\n  of_sexp_error msg sexp\n\n\n(* Errors concerning polymorphic variants *)\n\nexception No_variant_match\n\nlet no_variant_match () =\n  raise No_variant_match\n\nlet no_matching_variant_found loc sexp =\n  of_sexp_error (loc ^ \"_of_sexp: no matching variant found\") sexp\n\nlet ptag_no_args loc sexp =\n  of_sexp_error (\n    loc ^ \"_of_sexp: polymorphic variant does not take arguments\") sexp\n\nlet ptag_incorrect_n_args loc cnstr sexp =\n  let msg =\n    sprintf\n      \"%s_of_sexp: polymorphic variant tag %S has incorrect number of arguments\"\n      loc cnstr\n  in\n  of_sexp_error msg sexp\n\nlet ptag_takes_args loc sexp =\n  of_sexp_error (loc ^ \"_of_sexp: polymorphic variant tag takes an argument\")\n    sexp\n\nlet nested_list_invalid_poly_var loc sexp =\n  of_sexp_error (\n    loc ^ \"_of_sexp: a nested list is an invalid polymorphic variant\") sexp\n\nlet empty_list_invalid_poly_var loc sexp =\n  of_sexp_error (\n    loc ^ \"_of_sexp: the empty list is an invalid polymorphic variant\") sexp\n\nlet silly_type loc sexp =\n  of_sexp_error (loc ^ \"_of_sexp: trying to convert a silly type\") sexp\n\nlet empty_type loc sexp =\n  of_sexp_error (loc ^ \"_of_sexp: trying to convert an empty type\") sexp\n","// Js_of_ocaml runtime support\n// http://www.ocsigen.org/js_of_ocaml/\n// Copyright (C) 2010 Jérôme Vouillon\n// Laboratoire PPS - CNRS Université Paris Diderot\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, with linking exception;\n// either version 2.1 of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n\n//Provides: caml_md5_chan\n//Requires: caml_md5_string, caml_string_of_array,caml_ml_string_length, caml_ml_channels\n//Requires: caml_raise_end_of_file, caml_create_string  \nfunction caml_md5_chan(chanid,len){\n  var chan = caml_ml_channels[chanid];\n  var chan_len = chan.file.length();\n  if(len<0) len = chan_len - chan.offset;\n  if(chan.offset + len >= chan_len) caml_raise_end_of_file;\n  var buf = caml_create_string(len);\n  chan.file.read(chan.offset,buf,0,len);\n  return caml_md5_string(buf,0,len);\n}\n\n//Provides: caml_md5_string\n//Requires: caml_string_of_array, caml_convert_string_to_bytes\nvar caml_md5_string =\nfunction () {\n  function add (x, y) { return (x + y) | 0; }\n  function xx(q,a,b,x,s,t) {\n    a = add(add(a, q), add(x, t));\n    return add((a << s) | (a >>> (32 - s)), b);\n  }\n  function ff(a,b,c,d,x,s,t) {\n    return xx((b & c) | ((~b) & d), a, b, x, s, t);\n  }\n  function gg(a,b,c,d,x,s,t) {\n    return xx((b & d) | (c & (~d)), a, b, x, s, t);\n  }\n  function hh(a,b,c,d,x,s,t) { return xx(b ^ c ^ d, a, b, x, s, t); }\n  function ii(a,b,c,d,x,s,t) { return xx(c ^ (b | (~d)), a, b, x, s, t); }\n\n  function md5(buffer, length) {\n    var i = length;\n    buffer[i >> 2] |= 0x80 << (8 * (i & 3));\n    for (i = (i & ~0x3) + 8;(i & 0x3F) < 60 ;i += 4)\n      buffer[(i >> 2) - 1] = 0;\n    buffer[(i >> 2) -1] = length << 3;\n    buffer[i >> 2] = (length >> 29) & 0x1FFFFFFF;\n\n    var w = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476];\n\n    for(i = 0; i < buffer.length; i += 16) {\n      var a = w[0], b = w[1], c = w[2], d = w[3];\n\n      a = ff(a, b, c, d, buffer[i+ 0], 7, 0xD76AA478);\n      d = ff(d, a, b, c, buffer[i+ 1], 12, 0xE8C7B756);\n      c = ff(c, d, a, b, buffer[i+ 2], 17, 0x242070DB);\n      b = ff(b, c, d, a, buffer[i+ 3], 22, 0xC1BDCEEE);\n      a = ff(a, b, c, d, buffer[i+ 4], 7, 0xF57C0FAF);\n      d = ff(d, a, b, c, buffer[i+ 5], 12, 0x4787C62A);\n      c = ff(c, d, a, b, buffer[i+ 6], 17, 0xA8304613);\n      b = ff(b, c, d, a, buffer[i+ 7], 22, 0xFD469501);\n      a = ff(a, b, c, d, buffer[i+ 8], 7, 0x698098D8);\n      d = ff(d, a, b, c, buffer[i+ 9], 12, 0x8B44F7AF);\n      c = ff(c, d, a, b, buffer[i+10], 17, 0xFFFF5BB1);\n      b = ff(b, c, d, a, buffer[i+11], 22, 0x895CD7BE);\n      a = ff(a, b, c, d, buffer[i+12], 7, 0x6B901122);\n      d = ff(d, a, b, c, buffer[i+13], 12, 0xFD987193);\n      c = ff(c, d, a, b, buffer[i+14], 17, 0xA679438E);\n      b = ff(b, c, d, a, buffer[i+15], 22, 0x49B40821);\n\n      a = gg(a, b, c, d, buffer[i+ 1], 5, 0xF61E2562);\n      d = gg(d, a, b, c, buffer[i+ 6], 9, 0xC040B340);\n      c = gg(c, d, a, b, buffer[i+11], 14, 0x265E5A51);\n      b = gg(b, c, d, a, buffer[i+ 0], 20, 0xE9B6C7AA);\n      a = gg(a, b, c, d, buffer[i+ 5], 5, 0xD62F105D);\n      d = gg(d, a, b, c, buffer[i+10], 9, 0x02441453);\n      c = gg(c, d, a, b, buffer[i+15], 14, 0xD8A1E681);\n      b = gg(b, c, d, a, buffer[i+ 4], 20, 0xE7D3FBC8);\n      a = gg(a, b, c, d, buffer[i+ 9], 5, 0x21E1CDE6);\n      d = gg(d, a, b, c, buffer[i+14], 9, 0xC33707D6);\n      c = gg(c, d, a, b, buffer[i+ 3], 14, 0xF4D50D87);\n      b = gg(b, c, d, a, buffer[i+ 8], 20, 0x455A14ED);\n      a = gg(a, b, c, d, buffer[i+13], 5, 0xA9E3E905);\n      d = gg(d, a, b, c, buffer[i+ 2], 9, 0xFCEFA3F8);\n      c = gg(c, d, a, b, buffer[i+ 7], 14, 0x676F02D9);\n      b = gg(b, c, d, a, buffer[i+12], 20, 0x8D2A4C8A);\n\n      a = hh(a, b, c, d, buffer[i+ 5], 4, 0xFFFA3942);\n      d = hh(d, a, b, c, buffer[i+ 8], 11, 0x8771F681);\n      c = hh(c, d, a, b, buffer[i+11], 16, 0x6D9D6122);\n      b = hh(b, c, d, a, buffer[i+14], 23, 0xFDE5380C);\n      a = hh(a, b, c, d, buffer[i+ 1], 4, 0xA4BEEA44);\n      d = hh(d, a, b, c, buffer[i+ 4], 11, 0x4BDECFA9);\n      c = hh(c, d, a, b, buffer[i+ 7], 16, 0xF6BB4B60);\n      b = hh(b, c, d, a, buffer[i+10], 23, 0xBEBFBC70);\n      a = hh(a, b, c, d, buffer[i+13], 4, 0x289B7EC6);\n      d = hh(d, a, b, c, buffer[i+ 0], 11, 0xEAA127FA);\n      c = hh(c, d, a, b, buffer[i+ 3], 16, 0xD4EF3085);\n      b = hh(b, c, d, a, buffer[i+ 6], 23, 0x04881D05);\n      a = hh(a, b, c, d, buffer[i+ 9], 4, 0xD9D4D039);\n      d = hh(d, a, b, c, buffer[i+12], 11, 0xE6DB99E5);\n      c = hh(c, d, a, b, buffer[i+15], 16, 0x1FA27CF8);\n      b = hh(b, c, d, a, buffer[i+ 2], 23, 0xC4AC5665);\n\n      a = ii(a, b, c, d, buffer[i+ 0], 6, 0xF4292244);\n      d = ii(d, a, b, c, buffer[i+ 7], 10, 0x432AFF97);\n      c = ii(c, d, a, b, buffer[i+14], 15, 0xAB9423A7);\n      b = ii(b, c, d, a, buffer[i+ 5], 21, 0xFC93A039);\n      a = ii(a, b, c, d, buffer[i+12], 6, 0x655B59C3);\n      d = ii(d, a, b, c, buffer[i+ 3], 10, 0x8F0CCC92);\n      c = ii(c, d, a, b, buffer[i+10], 15, 0xFFEFF47D);\n      b = ii(b, c, d, a, buffer[i+ 1], 21, 0x85845DD1);\n      a = ii(a, b, c, d, buffer[i+ 8], 6, 0x6FA87E4F);\n      d = ii(d, a, b, c, buffer[i+15], 10, 0xFE2CE6E0);\n      c = ii(c, d, a, b, buffer[i+ 6], 15, 0xA3014314);\n      b = ii(b, c, d, a, buffer[i+13], 21, 0x4E0811A1);\n      a = ii(a, b, c, d, buffer[i+ 4], 6, 0xF7537E82);\n      d = ii(d, a, b, c, buffer[i+11], 10, 0xBD3AF235);\n      c = ii(c, d, a, b, buffer[i+ 2], 15, 0x2AD7D2BB);\n      b = ii(b, c, d, a, buffer[i+ 9], 21, 0xEB86D391);\n\n      w[0] = add(a, w[0]);\n      w[1] = add(b, w[1]);\n      w[2] = add(c, w[2]);\n      w[3] = add(d, w[3]);\n    }\n\n    var t = new Array(16);\n    for (var i = 0; i < 4; i++)\n      for (var j = 0; j < 4; j++)\n        t[i * 4 + j] = (w[i] >> (8 * j)) & 0xFF;\n    return t;\n  }\n\n  return function (s, ofs, len) {\n    // FIX: maybe we should perform the computation by chunk of 64 bytes\n    // as in http://www.myersdaily.org/joseph/javascript/md5.js\n    var buf = [];\n    switch (s.t & 6) {\n    default:\n      caml_convert_string_to_bytes(s);\n    case 0: /* BYTES */\n      var b = s.c;\n      for (var i = 0; i < len; i+=4) {\n        var j = i + ofs;\n        buf[i>>2] =\n          b.charCodeAt(j) | (b.charCodeAt(j+1) << 8) |\n          (b.charCodeAt(j+2) << 16) | (b.charCodeAt(j+3) << 24);\n      }\n      for (; i < len; i++) buf[i>>2] |= b.charCodeAt(i + ofs) << (8 * (i & 3));\n      break;\n    case 4: /* ARRAY */\n      var a = s.c;\n      for (var i = 0; i < len; i+=4) {\n        var j = i + ofs;\n        buf[i>>2] = a[j] | (a[j+1] << 8) | (a[j+2] << 16) | (a[j+3] << 24);\n      }\n      for (; i < len; i++) buf[i>>2] |= a[i + ofs] << (8 * (i & 3));\n    }\n    return caml_string_of_array(md5(buf, len));\n  }\n} ();\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Xavier Leroy, projet Cristal, INRIA Rocquencourt           *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* Message digest (MD5) *)\n\ntype t = string\n\nlet compare = String.compare\nlet equal = String.equal\n\nexternal unsafe_string: string -> int -> int -> t = \"caml_md5_string\"\nexternal channel: in_channel -> int -> t = \"caml_md5_chan\"\n\nlet string str =\n  unsafe_string str 0 (String.length str)\n\nlet bytes b = string (Bytes.unsafe_to_string b)\n\nlet substring str ofs len =\n  if ofs < 0 || len < 0 || ofs > String.length str - len\n  then invalid_arg \"Digest.substring\"\n  else unsafe_string str ofs len\n\nlet subbytes b ofs len = substring (Bytes.unsafe_to_string b) ofs len\n\nlet file filename =\n  let ic = open_in_bin filename in\n  match channel ic (-1) with\n    | d -> close_in ic; d\n    | exception e -> close_in ic; raise e\n\nlet output chan digest =\n  output_string chan digest\n\nlet input chan = really_input_string chan 16\n\nlet char_hex n =\n  Char.unsafe_chr (n + if n < 10 then Char.code '0' else (Char.code 'a' - 10))\n\nlet to_hex d =\n  let result = Bytes.create 32 in\n  for i = 0 to 15 do\n    let x = Char.code d.[i] in\n    Bytes.unsafe_set result (i*2) (char_hex (x lsr 4));\n    Bytes.unsafe_set result (i*2+1) (char_hex (x land 0x0f));\n  done;\n  Bytes.unsafe_to_string result\n\nlet from_hex s =\n  if String.length s <> 32 then raise (Invalid_argument \"Digest.from_hex\");\n  let digit c =\n    match c with\n    | '0'..'9' -> Char.code c - Char.code '0'\n    | 'A'..'F' -> Char.code c - Char.code 'A' + 10\n    | 'a'..'f' -> Char.code c - Char.code 'a' + 10\n    | _ -> raise (Invalid_argument \"Digest.from_hex\")\n  in\n  let byte i = digit s.[i] lsl 4 + digit s.[i+1] in\n  let result = Bytes.create 16 in\n  for i = 0 to 15 do\n    Bytes.set result i (Char.chr (byte (2 * i)));\n  done;\n  Bytes.unsafe_to_string result\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Pierre Weis, projet Cristal, INRIA Rocquencourt            *)\n(*                                                                        *)\n(*   Copyright 2002 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\nopen CamlinternalFormatBasics\nopen CamlinternalFormat\n\n(* alias to avoid warning for ambiguity between\n   Pervasives.format6\n   and CamlinternalFormatBasics.format6\n\n   (the former is in fact an alias for the latter,\n    but the ambiguity warning doesn't care)\n*)\ntype ('a, 'b, 'c, 'd, 'e, 'f) format6 =\n  ('a, 'b, 'c, 'd, 'e, 'f) Pervasives.format6\n\n\n(* The run-time library for scanners. *)\n\n(* Scanning buffers. *)\nmodule type SCANNING = sig\n\n  type in_channel\n\n  type scanbuf = in_channel\n\n  type file_name = string\n\n  val stdin : in_channel\n  (* The scanning buffer reading from [Pervasives.stdin].\n     [stdib] is equivalent to [Scanning.from_channel Pervasives.stdin]. *)\n\n  val stdib : in_channel\n  (* An alias for [Scanf.stdin], the scanning buffer reading from\n     [Pervasives.stdin]. *)\n\n  val next_char : scanbuf -> char\n  (* [Scanning.next_char ib] advance the scanning buffer for\n     one character.\n     If no more character can be read, sets a end of file condition and\n     returns '\\000'. *)\n\n  val invalidate_current_char : scanbuf -> unit\n  (* [Scanning.invalidate_current_char ib] mark the current_char as already\n     scanned. *)\n\n  val peek_char : scanbuf -> char\n  (* [Scanning.peek_char ib] returns the current char available in\n     the buffer or reads one if necessary (when the current character is\n     already scanned).\n     If no character can be read, sets an end of file condition and\n     returns '\\000'. *)\n\n  val checked_peek_char : scanbuf -> char\n  (* Same as [Scanning.peek_char] above but always returns a valid char or\n     fails: instead of returning a null char when the reading method of the\n     input buffer has reached an end of file, the function raises exception\n     [End_of_file]. *)\n\n  val store_char : int -> scanbuf -> char -> int\n  (* [Scanning.store_char lim ib c] adds [c] to the token buffer\n     of the scanning buffer [ib]. It also advances the scanning buffer for\n     one character and returns [lim - 1], indicating the new limit for the\n     length of the current token. *)\n\n  val skip_char : int -> scanbuf -> int\n  (* [Scanning.skip_char lim ib] ignores the current character. *)\n\n  val ignore_char : int -> scanbuf -> int\n  (* [Scanning.ignore_char ib lim] ignores the current character and\n     decrements the limit. *)\n\n  val token : scanbuf -> string\n  (* [Scanning.token ib] returns the string stored into the token\n     buffer of the scanning buffer: it returns the token matched by the\n     format. *)\n\n  val reset_token : scanbuf -> unit\n  (* [Scanning.reset_token ib] resets the token buffer of\n     the given scanning buffer. *)\n\n  val char_count : scanbuf -> int\n  (* [Scanning.char_count ib] returns the number of characters\n     read so far from the given buffer. *)\n\n  val line_count : scanbuf -> int\n  (* [Scanning.line_count ib] returns the number of new line\n     characters read so far from the given buffer. *)\n\n  val token_count : scanbuf -> int\n  (* [Scanning.token_count ib] returns the number of tokens read\n     so far from [ib]. *)\n\n  val eof : scanbuf -> bool\n  (* [Scanning.eof ib] returns the end of input condition\n     of the given buffer. *)\n\n  val end_of_input : scanbuf -> bool\n  (* [Scanning.end_of_input ib] tests the end of input condition\n     of the given buffer (if no char has ever been read, an attempt to\n     read one is performed). *)\n\n  val beginning_of_input : scanbuf -> bool\n  (* [Scanning.beginning_of_input ib] tests the beginning of input\n     condition of the given buffer. *)\n\n  val name_of_input : scanbuf -> string\n  (* [Scanning.name_of_input ib] returns the name of the character\n     source for input buffer [ib]. *)\n\n  val open_in : file_name -> in_channel\n  val open_in_bin : file_name -> in_channel\n  val from_file : file_name -> in_channel\n  val from_file_bin : file_name -> in_channel\n  val from_string : string -> in_channel\n  val from_function : (unit -> char) -> in_channel\n  val from_channel : Pervasives.in_channel -> in_channel\n\n  val close_in : in_channel -> unit\n\n  val memo_from_channel : Pervasives.in_channel -> in_channel\n  (* Obsolete. *)\n\nend\n\n\nmodule Scanning : SCANNING = struct\n\n  (* The run-time library for scanf. *)\n\n  type file_name = string\n\n  type in_channel_name =\n    | From_channel of Pervasives.in_channel\n    | From_file of file_name * Pervasives.in_channel\n    | From_function\n    | From_string\n\n\n  type in_channel = {\n    mutable ic_eof : bool;\n    mutable ic_current_char : char;\n    mutable ic_current_char_is_valid : bool;\n    mutable ic_char_count : int;\n    mutable ic_line_count : int;\n    mutable ic_token_count : int;\n    mutable ic_get_next_char : unit -> char;\n    ic_token_buffer : Buffer.t;\n    ic_input_name : in_channel_name;\n  }\n\n\n  type scanbuf = in_channel\n\n  let null_char = '\\000'\n\n  (* Reads a new character from input buffer.\n     Next_char never fails, even in case of end of input:\n     it then simply sets the end of file condition. *)\n  let next_char ib =\n    try\n      let c = ib.ic_get_next_char () in\n      ib.ic_current_char <- c;\n      ib.ic_current_char_is_valid <- true;\n      ib.ic_char_count <- succ ib.ic_char_count;\n      if c = '\\n' then ib.ic_line_count <- succ ib.ic_line_count;\n      c with\n    | End_of_file ->\n      let c = null_char in\n      ib.ic_current_char <- c;\n      ib.ic_current_char_is_valid <- false;\n      ib.ic_eof <- true;\n      c\n\n\n  let peek_char ib =\n    if ib.ic_current_char_is_valid\n    then ib.ic_current_char\n    else next_char ib\n\n\n  (* Returns a valid current char for the input buffer. In particular\n     no irrelevant null character (as set by [next_char] in case of end\n     of input) is returned, since [End_of_file] is raised when\n     [next_char] sets the end of file condition while trying to read a\n     new character. *)\n  let checked_peek_char ib =\n    let c = peek_char ib in\n    if ib.ic_eof then raise End_of_file;\n    c\n\n\n  let end_of_input ib =\n    ignore (peek_char ib);\n    ib.ic_eof\n\n\n  let eof ib = ib.ic_eof\n\n  let beginning_of_input ib = ib.ic_char_count = 0\n\n  let name_of_input ib =\n    match ib.ic_input_name with\n    | From_channel _ic -> \"unnamed Pervasives input channel\"\n    | From_file (fname, _ic) -> fname\n    | From_function -> \"unnamed function\"\n    | From_string -> \"unnamed character string\"\n\n\n  let char_count ib =\n    if ib.ic_current_char_is_valid\n    then ib.ic_char_count - 1\n    else ib.ic_char_count\n\n\n  let line_count ib = ib.ic_line_count\n\n  let reset_token ib = Buffer.reset ib.ic_token_buffer\n\n  let invalidate_current_char ib = ib.ic_current_char_is_valid <- false\n\n  let token ib =\n    let token_buffer = ib.ic_token_buffer in\n    let tok = Buffer.contents token_buffer in\n    Buffer.clear token_buffer;\n    ib.ic_token_count <- succ ib.ic_token_count;\n    tok\n\n\n  let token_count ib = ib.ic_token_count\n\n  let skip_char width ib =\n    invalidate_current_char ib;\n    width\n\n\n  let ignore_char width ib = skip_char (width - 1) ib\n\n  let store_char width ib c =\n    Buffer.add_char ib.ic_token_buffer c;\n    ignore_char width ib\n\n\n  let default_token_buffer_size = 1024\n\n  let create iname next = {\n    ic_eof = false;\n    ic_current_char = null_char;\n    ic_current_char_is_valid = false;\n    ic_char_count = 0;\n    ic_line_count = 0;\n    ic_token_count = 0;\n    ic_get_next_char = next;\n    ic_token_buffer = Buffer.create default_token_buffer_size;\n    ic_input_name = iname;\n  }\n\n\n  let from_string s =\n    let i = ref 0 in\n    let len = String.length s in\n    let next () =\n      if !i >= len then raise End_of_file else\n      let c = s.[!i] in\n      incr i;\n      c in\n    create From_string next\n\n\n  let from_function = create From_function\n\n  (* Scanning from an input channel. *)\n\n  (* Position of the problem:\n\n     We cannot prevent the scanning mechanism to use one lookahead character,\n     if needed by the semantics of the format string specifications (e.g. a\n     trailing 'skip space' specification in the format string); in this case,\n     the mandatory lookahead character is indeed read from the input and not\n     used to return the token read. It is thus mandatory to be able to store\n     an unused lookahead character somewhere to get it as the first character\n     of the next scan.\n\n     To circumvent this problem, all the scanning functions get a low level\n     input buffer argument where they store the lookahead character when\n     needed; additionally, the input buffer is the only source of character of\n     a scanner. The [scanbuf] input buffers are defined in module {!Scanning}.\n\n     Now we understand that it is extremely important that related and\n     successive calls to scanners indeed read from the same input buffer.\n     In effect, if a scanner [scan1] is reading from [ib1] and stores an\n     unused lookahead character [c1] into its input buffer [ib1], then\n     another scanner [scan2] not reading from the same buffer [ib1] will miss\n     the character [c1], seemingly vanished in the air from the point of view\n     of [scan2].\n\n     This mechanism works perfectly to read from strings, from files, and from\n     functions, since in those cases, allocating two buffers reading from the\n     same source is unnatural.\n\n     Still, there is a difficulty in the case of scanning from an input\n     channel. In effect, when scanning from an input channel [ic], this channel\n     may not have been allocated from within this library. Hence, it may be\n     shared (two functions of the user's program may successively read from\n     [ic]). This is highly error prone since, one of the function may seek the\n     input channel, while the other function has still an unused lookahead\n     character in its input buffer. In conclusion, you should never mix direct\n     low level reading and high level scanning from the same input channel.\n\n  *)\n\n  (* Perform bufferized input to improve efficiency. *)\n  let file_buffer_size = ref 1024\n\n  (* The scanner closes the input channel at end of input. *)\n  let scan_close_at_end ic = Pervasives.close_in ic; raise End_of_file\n\n  (* The scanner does not close the input channel at end of input:\n     it just raises [End_of_file]. *)\n  let scan_raise_at_end _ic = raise End_of_file\n\n  let from_ic scan_close_ic iname ic =\n    let len = !file_buffer_size in\n    let buf = Bytes.create len in\n    let i = ref 0 in\n    let lim = ref 0 in\n    let eof = ref false in\n    let next () =\n      if !i < !lim then begin let c = Bytes.get buf !i in incr i; c end else\n      if !eof then raise End_of_file else begin\n        lim := input ic buf 0 len;\n        if !lim = 0 then begin eof := true; scan_close_ic ic end else begin\n          i := 1;\n          Bytes.get buf 0\n        end\n      end in\n    create iname next\n\n\n  let from_ic_close_at_end = from_ic scan_close_at_end\n  let from_ic_raise_at_end = from_ic scan_raise_at_end\n\n  (* The scanning buffer reading from [Pervasives.stdin].\n     One could try to define [stdib] as a scanning buffer reading a character\n     at a time (no bufferization at all), but unfortunately the top-level\n     interaction would be wrong. This is due to some kind of\n     'race condition' when reading from [Pervasives.stdin],\n     since the interactive compiler and [Scanf.scanf] will simultaneously\n     read the material they need from [Pervasives.stdin]; then, confusion\n     will result from what should be read by the top-level and what should be\n     read by [Scanf.scanf].\n     This is even more complicated by the one character lookahead that\n     [Scanf.scanf] is sometimes obliged to maintain: the lookahead character\n     will be available for the next [Scanf.scanf] entry, seemingly coming from\n     nowhere.\n     Also no [End_of_file] is raised when reading from stdin: if not enough\n     characters have been read, we simply ask to read more. *)\n  let stdin =\n    from_ic scan_raise_at_end\n      (From_file (\"-\", Pervasives.stdin)) Pervasives.stdin\n\n\n  let stdib = stdin\n\n  let open_in_file open_in fname =\n    match fname with\n    | \"-\" -> stdin\n    | fname ->\n      let ic = open_in fname in\n      from_ic_close_at_end (From_file (fname, ic)) ic\n\n\n  let open_in = open_in_file Pervasives.open_in\n  let open_in_bin = open_in_file Pervasives.open_in_bin\n\n  let from_file = open_in\n  let from_file_bin = open_in_bin\n\n  let from_channel ic =\n    from_ic_raise_at_end (From_channel ic) ic\n\n\n  let close_in ib =\n    match ib.ic_input_name with\n    | From_channel ic ->\n      Pervasives.close_in ic\n    | From_file (_fname, ic) -> Pervasives.close_in ic\n    | From_function | From_string -> ()\n\n\n  (*\n     Obsolete: a memo [from_channel] version to build a [Scanning.in_channel]\n     scanning buffer out of a [Pervasives.in_channel].\n     This function was used to try to preserve the scanning\n     semantics for the (now obsolete) function [fscanf].\n     Given that all scanner must read from a [Scanning.in_channel] scanning\n     buffer, [fscanf] must read from one!\n     More precisely, given [ic], all successive calls [fscanf ic] must read\n     from the same scanning buffer.\n     This obliged this library to allocated scanning buffers that were\n     not properly garbbage collectable, hence leading to memory leaks.\n     If you need to read from a [Pervasives.in_channel] input channel\n     [ic], simply define a [Scanning.in_channel] formatted input channel as in\n     [let ib = Scanning.from_channel ic], then use [Scanf.bscanf ib] as usual.\n  *)\n  let memo_from_ic =\n    let memo = ref [] in\n    (fun scan_close_ic ic ->\n     try List.assq ic !memo with\n     | Not_found ->\n       let ib =\n         from_ic scan_close_ic (From_channel ic) ic in\n       memo := (ic, ib) :: !memo;\n       ib)\n\n\n  (* Obsolete: see {!memo_from_ic} above. *)\n  let memo_from_channel = memo_from_ic scan_raise_at_end\n\nend\n\n\n(* Formatted input functions. *)\n\ntype ('a, 'b, 'c, 'd) scanner =\n     ('a, Scanning.in_channel, 'b, 'c, 'a -> 'd, 'd) format6 -> 'c\n\n\n(* Reporting errors. *)\nexception Scan_failure of string\n\nlet bad_input s = raise (Scan_failure s)\n\nlet bad_input_escape c =\n  bad_input (Printf.sprintf \"illegal escape character %C\" c)\n\n\nlet bad_token_length message =\n  bad_input\n    (Printf.sprintf\n       \"scanning of %s failed: \\\n        the specified length was too short for token\"\n       message)\n\n\nlet bad_end_of_input message =\n  bad_input\n    (Printf.sprintf\n       \"scanning of %s failed: \\\n        premature end of file occurred before end of token\"\n       message)\n\n\nlet bad_float () =\n  bad_input \"no dot or exponent part found in float token\"\n\n\nlet bad_hex_float () =\n  bad_input \"not a valid float in hexadecimal notation\"\n\n\nlet character_mismatch_err c ci =\n  Printf.sprintf \"looking for %C, found %C\" c ci\n\n\nlet character_mismatch c ci =\n  bad_input (character_mismatch_err c ci)\n\n\nlet rec skip_whites ib =\n  let c = Scanning.peek_char ib in\n  if not (Scanning.eof ib) then begin\n    match c with\n    | ' ' | '\\t' | '\\n' | '\\r' ->\n      Scanning.invalidate_current_char ib; skip_whites ib\n    | _ -> ()\n  end\n\n\n(* Checking that [c] is indeed in the input, then skips it.\n   In this case, the character [c] has been explicitly specified in the\n   format as being mandatory in the input; hence we should fail with\n   [End_of_file] in case of end_of_input.\n   (Remember that [Scan_failure] is raised only when (we can prove by\n   evidence) that the input does not match the format string given. We must\n   thus differentiate [End_of_file] as an error due to lack of input, and\n   [Scan_failure] which is due to provably wrong input. I am not sure this is\n   worth the burden: it is complex and somehow subliminal; should be clearer\n   to fail with Scan_failure \"Not enough input to complete scanning\"!)\n\n   That's why, waiting for a better solution, we use checked_peek_char here.\n   We are also careful to treat \"\\r\\n\" in the input as an end of line marker:\n   it always matches a '\\n' specification in the input format string. *)\nlet rec check_char ib c =\n  match c with\n  | ' ' -> skip_whites ib\n  | '\\n' -> check_newline ib\n  | c -> check_this_char ib c\n\nand check_this_char ib c =\n  let ci = Scanning.checked_peek_char ib in\n  if ci = c then Scanning.invalidate_current_char ib else\n  character_mismatch c ci\n\nand check_newline ib =\n  let ci = Scanning.checked_peek_char ib in\n  match ci with\n  | '\\n' -> Scanning.invalidate_current_char ib\n  | '\\r' -> Scanning.invalidate_current_char ib; check_this_char ib '\\n'\n  | _ -> character_mismatch '\\n' ci\n\n\n(* Extracting tokens from the output token buffer. *)\n\nlet token_char ib = (Scanning.token ib).[0]\n\nlet token_string = Scanning.token\n\nlet token_bool ib =\n  match Scanning.token ib with\n  | \"true\" -> true\n  | \"false\" -> false\n  | s -> bad_input (Printf.sprintf \"invalid boolean '%s'\" s)\n\n\n(* The type of integer conversions. *)\ntype integer_conversion =\n  | B_conversion (* Unsigned binary conversion *)\n  | D_conversion (* Signed decimal conversion *)\n  | I_conversion (* Signed integer conversion *)\n  | O_conversion (* Unsigned octal conversion *)\n  | U_conversion (* Unsigned decimal conversion *)\n  | X_conversion (* Unsigned hexadecimal conversion *)\n\n\nlet integer_conversion_of_char = function\n  | 'b' -> B_conversion\n  | 'd' -> D_conversion\n  | 'i' -> I_conversion\n  | 'o' -> O_conversion\n  | 'u' -> U_conversion\n  | 'x' | 'X' -> X_conversion\n  | _ -> assert false\n\n\n(* Extract an integer literal token.\n   Since the functions Pervasives.*int*_of_string do not accept a leading +,\n   we skip it if necessary. *)\nlet token_int_literal conv ib =\n  let tok =\n    match conv with\n    | D_conversion | I_conversion -> Scanning.token ib\n    | U_conversion -> \"0u\" ^ Scanning.token ib\n    | O_conversion -> \"0o\" ^ Scanning.token ib\n    | X_conversion -> \"0x\" ^ Scanning.token ib\n    | B_conversion -> \"0b\" ^ Scanning.token ib in\n  let l = String.length tok in\n  if l = 0 || tok.[0] <> '+' then tok else String.sub tok 1 (l - 1)\n\n\n(* All the functions that convert a string to a number raise the exception\n   Failure when the conversion is not possible.\n   This exception is then trapped in [kscanf]. *)\nlet token_int conv ib = int_of_string (token_int_literal conv ib)\n\nlet token_float ib = float_of_string (Scanning.token ib)\n\n(* To scan native ints, int32 and int64 integers.\n   We cannot access to conversions to/from strings for those types,\n   Nativeint.of_string, Int32.of_string, and Int64.of_string,\n   since those modules are not available to [Scanf].\n   However, we can bind and use the corresponding primitives that are\n   available in the runtime. *)\nexternal nativeint_of_string : string -> nativeint\n  = \"caml_nativeint_of_string\"\n\nexternal int32_of_string : string -> int32\n  = \"caml_int32_of_string\"\n\nexternal int64_of_string : string -> int64\n  = \"caml_int64_of_string\"\n\n\nlet token_nativeint conv ib = nativeint_of_string (token_int_literal conv ib)\nlet token_int32 conv ib = int32_of_string (token_int_literal conv ib)\nlet token_int64 conv ib = int64_of_string (token_int_literal conv ib)\n\n(* Scanning numbers. *)\n\n(* Digits scanning functions suppose that one character has been checked and\n   is available, since they return at end of file with the currently found\n   token selected.\n\n   Put it in another way, the digits scanning functions scan for a possibly\n   empty sequence of digits, (hence, a successful scanning from one of those\n   functions does not imply that the token is a well-formed number: to get a\n   true number, it is mandatory to check that at least one valid digit is\n   available before calling one of the digit scanning functions). *)\n\n(* The decimal case is treated especially for optimization purposes. *)\nlet rec scan_decimal_digit_star width ib =\n  if width = 0 then width else\n  let c = Scanning.peek_char ib in\n  if Scanning.eof ib then width else\n  match c with\n  | '0' .. '9' as c ->\n    let width = Scanning.store_char width ib c in\n    scan_decimal_digit_star width ib\n  | '_' ->\n    let width = Scanning.ignore_char width ib in\n    scan_decimal_digit_star width ib\n  | _ -> width\n\n\nlet scan_decimal_digit_plus width ib =\n  if width = 0 then bad_token_length \"decimal digits\" else\n  let c = Scanning.checked_peek_char ib in\n  match c with\n  | '0' .. '9' ->\n    let width = Scanning.store_char width ib c in\n    scan_decimal_digit_star width ib\n  | c ->\n    bad_input (Printf.sprintf \"character %C is not a decimal digit\" c)\n\n\n(* To scan numbers from other bases, we use a predicate argument to\n   scan digits. *)\nlet scan_digit_star digitp width ib =\n  let rec scan_digits width ib =\n    if width = 0 then width else\n    let c = Scanning.peek_char ib in\n    if Scanning.eof ib then width else\n    match c with\n    | c when digitp c ->\n      let width = Scanning.store_char width ib c in\n      scan_digits width ib\n    | '_' ->\n      let width = Scanning.ignore_char width ib in\n      scan_digits width ib\n    | _ -> width in\n  scan_digits width ib\n\n\nlet scan_digit_plus basis digitp width ib =\n  (* Ensure we have got enough width left,\n     and read at list one digit. *)\n  if width = 0 then bad_token_length \"digits\" else\n  let c = Scanning.checked_peek_char ib in\n  if digitp c then\n    let width = Scanning.store_char width ib c in\n    scan_digit_star digitp width ib\n  else\n    bad_input (Printf.sprintf \"character %C is not a valid %s digit\" c basis)\n\n\nlet is_binary_digit = function\n  | '0' .. '1' -> true\n  | _ -> false\n\n\nlet scan_binary_int = scan_digit_plus \"binary\" is_binary_digit\n\nlet is_octal_digit = function\n  | '0' .. '7' -> true\n  | _ -> false\n\n\nlet scan_octal_int = scan_digit_plus \"octal\" is_octal_digit\n\nlet is_hexa_digit = function\n  | '0' .. '9' | 'a' .. 'f' | 'A' .. 'F' -> true\n  | _ -> false\n\n\nlet scan_hexadecimal_int = scan_digit_plus \"hexadecimal\" is_hexa_digit\n\n(* Scan a decimal integer. *)\nlet scan_unsigned_decimal_int = scan_decimal_digit_plus\n\nlet scan_sign width ib =\n  let c = Scanning.checked_peek_char ib in\n  match c with\n  | '+' -> Scanning.store_char width ib c\n  | '-' -> Scanning.store_char width ib c\n  | _ -> width\n\n\nlet scan_optionally_signed_decimal_int width ib =\n  let width = scan_sign width ib in\n  scan_unsigned_decimal_int width ib\n\n\n(* Scan an unsigned integer that could be given in any (common) basis.\n   If digits are prefixed by one of 0x, 0X, 0o, or 0b, the number is\n   assumed to be written respectively in hexadecimal, hexadecimal,\n   octal, or binary. *)\nlet scan_unsigned_int width ib =\n  match Scanning.checked_peek_char ib with\n  | '0' as c ->\n    let width = Scanning.store_char width ib c in\n    if width = 0 then width else\n    let c = Scanning.peek_char ib in\n    if Scanning.eof ib then width else\n    begin match c with\n    | 'x' | 'X' -> scan_hexadecimal_int (Scanning.store_char width ib c) ib\n    | 'o' -> scan_octal_int (Scanning.store_char width ib c) ib\n    | 'b' -> scan_binary_int (Scanning.store_char width ib c) ib\n    | _ -> scan_decimal_digit_star width ib end\n  | _ -> scan_unsigned_decimal_int width ib\n\n\nlet scan_optionally_signed_int width ib =\n  let width = scan_sign width ib in\n  scan_unsigned_int width ib\n\n\nlet scan_int_conversion conv width ib =\n  match conv with\n  | B_conversion -> scan_binary_int width ib\n  | D_conversion -> scan_optionally_signed_decimal_int width ib\n  | I_conversion -> scan_optionally_signed_int width ib\n  | O_conversion -> scan_octal_int width ib\n  | U_conversion -> scan_unsigned_decimal_int width ib\n  | X_conversion -> scan_hexadecimal_int width ib\n\n\n(* Scanning floating point numbers. *)\n\n(* Fractional part is optional and can be reduced to 0 digits. *)\nlet scan_fractional_part width ib =\n  if width = 0 then width else\n  let c = Scanning.peek_char ib in\n  if Scanning.eof ib then width else\n  match c with\n  | '0' .. '9' as c ->\n    scan_decimal_digit_star (Scanning.store_char width ib c) ib\n  | _ -> width\n\n\n(* Exp part is optional and can be reduced to 0 digits. *)\nlet scan_exponent_part width ib =\n  if width = 0 then width else\n  let c = Scanning.peek_char ib in\n  if Scanning.eof ib then width else\n  match c with\n  | 'e' | 'E' as c ->\n    scan_optionally_signed_decimal_int (Scanning.store_char width ib c) ib\n  | _ -> width\n\n\n(* Scan the integer part of a floating point number, (not using the\n   OCaml lexical convention since the integer part can be empty):\n   an optional sign, followed by a possibly empty sequence of decimal\n   digits (e.g. -.1). *)\nlet scan_integer_part width ib =\n  let width = scan_sign width ib in\n  scan_decimal_digit_star width ib\n\n\n(*\n   For the time being we have (as found in scanf.mli):\n   the field width is composed of an optional integer literal\n   indicating the maximal width of the token to read.\n   Unfortunately, the type-checker let the user write an optional precision,\n   since this is valid for printf format strings.\n\n   Thus, the next step for Scanf is to support a full width and precision\n   indication, more or less similar to the one for printf, possibly extended\n   to the specification of a [max, min] range for the width of the token read\n   for strings. Something like the following spec for scanf.mli:\n\n   The optional [width] is an integer indicating the maximal\n   width of the token read. For instance, [%6d] reads an integer,\n   having at most 6 characters.\n\n   The optional [precision] is a dot [.] followed by an integer:\n\n   - in the floating point number conversions ([%f], [%e], [%g], [%F], [%E],\n   and [%F] conversions, the [precision] indicates the maximum number of\n   digits that may follow the decimal point. For instance, [%.4f] reads a\n   [float] with at most 4 fractional digits,\n\n   - in the string conversions ([%s], [%S], [%\\[ range \\]]), and in the\n   integer number conversions ([%i], [%d], [%u], [%x], [%o], and their\n   [int32], [int64], and [native_int] correspondent), the [precision]\n   indicates the required minimum width of the token read,\n\n   - on all other conversions, the width and precision specify the [max, min]\n   range for the width of the token read.\n*)\nlet scan_float width precision ib =\n  let width = scan_integer_part width ib in\n  if width = 0 then width, precision else\n  let c = Scanning.peek_char ib in\n  if Scanning.eof ib then width, precision else\n  match c with\n  | '.' ->\n    let width = Scanning.store_char width ib c in\n    let precision = min width precision in\n    let width = width - (precision - scan_fractional_part precision ib) in\n    scan_exponent_part width ib, precision\n  | _ ->\n    scan_exponent_part width ib, precision\n\n\nlet check_case_insensitive_string width ib error str =\n  let lowercase c =\n    match c with\n    | 'A' .. 'Z' ->\n      char_of_int (int_of_char c - int_of_char 'A' + int_of_char 'a')\n    | _ -> c in\n  let len = String.length str in\n  let width = ref width in\n  for i = 0 to len - 1 do\n    let c = Scanning.peek_char ib in\n    if lowercase c <> lowercase str.[i] then error ();\n    if !width = 0 then error ();\n    width := Scanning.store_char !width ib c;\n  done;\n  !width\n\n\nlet scan_hex_float width precision ib =\n  if width = 0 || Scanning.end_of_input ib then bad_hex_float ();\n  let width = scan_sign width ib in\n  if width = 0 || Scanning.end_of_input ib then bad_hex_float ();\n  match Scanning.peek_char ib with\n  | '0' as c -> (\n    let width = Scanning.store_char width ib c in\n    if width = 0 || Scanning.end_of_input ib then bad_hex_float ();\n    let width = check_case_insensitive_string width ib bad_hex_float \"x\" in\n    if width = 0 || Scanning.end_of_input ib then width else\n      let width = match Scanning.peek_char ib with\n        | '.' | 'p' | 'P' -> width\n        | _ -> scan_hexadecimal_int width ib in\n      if width = 0 || Scanning.end_of_input ib then width else\n        let width = match Scanning.peek_char ib with\n          | '.' as c -> (\n            let width = Scanning.store_char width ib c in\n            if width = 0 || Scanning.end_of_input ib then width else\n              match Scanning.peek_char ib with\n              | 'p' | 'P' -> width\n              | _ ->\n                let precision = min width precision in\n                width - (precision - scan_hexadecimal_int precision ib)\n          )\n          | _ -> width in\n        if width = 0 || Scanning.end_of_input ib then width else\n          match Scanning.peek_char ib with\n          | 'p' | 'P' as c ->\n            let width = Scanning.store_char width ib c in\n            if width = 0 || Scanning.end_of_input ib then bad_hex_float ();\n            scan_optionally_signed_decimal_int width ib\n          | _ -> width\n  )\n  | 'n' | 'N' as c ->\n    let width = Scanning.store_char width ib c in\n    if width = 0 || Scanning.end_of_input ib then bad_hex_float ();\n    check_case_insensitive_string width ib bad_hex_float \"an\"\n  | 'i' | 'I' as c ->\n    let width = Scanning.store_char width ib c in\n    if width = 0 || Scanning.end_of_input ib then bad_hex_float ();\n    check_case_insensitive_string width ib bad_hex_float \"nfinity\"\n  | _ -> bad_hex_float ()\n\n\nlet scan_caml_float_rest width precision ib =\n  if width = 0 || Scanning.end_of_input ib then bad_float ();\n  let width = scan_decimal_digit_star width ib in\n  if width = 0 || Scanning.end_of_input ib then bad_float ();\n  let c = Scanning.peek_char ib in\n  match c with\n  | '.' ->\n    let width = Scanning.store_char width ib c in\n    (* The effective width available for scanning the fractional part is\n       the minimum of declared precision and width left. *)\n    let precision = min width precision in\n    (* After scanning the fractional part with [precision] provisional width,\n       [width_precision] is left. *)\n    let width_precision = scan_fractional_part precision ib in\n    (* Hence, scanning the fractional part took exactly\n       [precision - width_precision] chars. *)\n    let frac_width = precision - width_precision in\n    (* And new provisional width is [width - width_precision. *)\n    let width = width - frac_width in\n    scan_exponent_part width ib\n  | 'e' | 'E' ->\n    scan_exponent_part width ib\n  | _ -> bad_float ()\n\n\nlet scan_caml_float width precision ib =\n  if width = 0 || Scanning.end_of_input ib then bad_float ();\n  let width = scan_sign width ib in\n  if width = 0 || Scanning.end_of_input ib then bad_float ();\n  match Scanning.peek_char ib with\n  | '0' as c -> (\n    let width = Scanning.store_char width ib c in\n    if width = 0 || Scanning.end_of_input ib then bad_float ();\n    match Scanning.peek_char ib with\n    | 'x' | 'X' as c -> (\n      let width = Scanning.store_char width ib c in\n      if width = 0 || Scanning.end_of_input ib then bad_float ();\n      let width = scan_hexadecimal_int width ib in\n      if width = 0 || Scanning.end_of_input ib then bad_float ();\n      let width = match Scanning.peek_char ib with\n        | '.' as c -> (\n          let width = Scanning.store_char width ib c in\n          if width = 0 || Scanning.end_of_input ib then width else\n            match Scanning.peek_char ib with\n            | 'p' | 'P' -> width\n            | _ ->\n              let precision = min width precision in\n              width - (precision - scan_hexadecimal_int precision ib)\n        )\n        | 'p' | 'P' -> width\n        | _ -> bad_float () in\n      if width = 0 || Scanning.end_of_input ib then width else\n        match Scanning.peek_char ib with\n        | 'p' | 'P' as c ->\n          let width = Scanning.store_char width ib c in\n          if width = 0 || Scanning.end_of_input ib then bad_hex_float ();\n          scan_optionally_signed_decimal_int width ib\n        | _ -> width\n    )\n    | _ ->\n      scan_caml_float_rest width precision ib\n  )\n  | '1' .. '9' as c ->\n    let width = Scanning.store_char width ib c in\n    if width = 0 || Scanning.end_of_input ib then bad_float ();\n    scan_caml_float_rest width precision ib\n(* Special case of nan and infinity:\n  | 'i' ->\n  | 'n' ->\n*)\n  | _ -> bad_float ()\n\n\n(* Scan a regular string:\n   stops when encountering a space, if no scanning indication has been given;\n   otherwise, stops when encountering the characters in the scanning\n   indication [stp].\n   It also stops at end of file or when the maximum number of characters has\n   been read. *)\nlet scan_string stp width ib =\n  let rec loop width =\n    if width = 0 then width else\n    let c = Scanning.peek_char ib in\n    if Scanning.eof ib then width else\n      match stp with\n      | Some c' when c = c' -> Scanning.skip_char width ib\n      | Some _ -> loop (Scanning.store_char width ib c)\n      | None ->\n        match c with\n        | ' ' | '\\t' | '\\n' | '\\r' -> width\n        | _ -> loop (Scanning.store_char width ib c) in\n  loop width\n\n\n(* Scan a char: peek strictly one character in the input, whatsoever. *)\nlet scan_char width ib =\n  (* The case width = 0 could not happen here, since it is tested before\n     calling scan_char, in the main scanning function.\n    if width = 0 then bad_token_length \"a character\" else *)\n  Scanning.store_char width ib (Scanning.checked_peek_char ib)\n\n\nlet char_for_backslash = function\n  | 'n' -> '\\010'\n  | 'r' -> '\\013'\n  | 'b' -> '\\008'\n  | 't' -> '\\009'\n  | c -> c\n\n\n(* The integer value corresponding to the facial value of a valid\n   decimal digit character. *)\nlet decimal_value_of_char c = int_of_char c - int_of_char '0'\n\nlet char_for_decimal_code c0 c1 c2 =\n  let c =\n    100 * decimal_value_of_char c0 +\n     10 * decimal_value_of_char c1 +\n          decimal_value_of_char c2 in\n  if c < 0 || c > 255 then\n    bad_input\n      (Printf.sprintf\n         \"bad character decimal encoding \\\\%c%c%c\" c0 c1 c2) else\n  char_of_int c\n\n\n(* The integer value corresponding to the facial value of a valid\n   hexadecimal digit character. *)\nlet hexadecimal_value_of_char c =\n  let d = int_of_char c in\n  (* Could also be:\n    if d <= int_of_char '9' then d - int_of_char '0' else\n    if d <= int_of_char 'F' then 10 + d - int_of_char 'A' else\n    if d <= int_of_char 'f' then 10 + d - int_of_char 'a' else assert false\n  *)\n  if d >= int_of_char 'a' then\n    d - 87 (* 10 + int_of_char c - int_of_char 'a' *) else\n  if d >= int_of_char 'A' then\n    d - 55  (* 10 + int_of_char c - int_of_char 'A' *) else\n    d - int_of_char '0'\n\n\nlet char_for_hexadecimal_code c1 c2 =\n  let c =\n    16 * hexadecimal_value_of_char c1 +\n         hexadecimal_value_of_char c2 in\n  if c < 0 || c > 255 then\n    bad_input\n      (Printf.sprintf \"bad character hexadecimal encoding \\\\%c%c\" c1 c2) else\n  char_of_int c\n\n\n(* Called in particular when encountering '\\\\' as starter of a char.\n   Stops before the corresponding '\\''. *)\nlet check_next_char message width ib =\n  if width = 0 then bad_token_length message else\n  let c = Scanning.peek_char ib in\n  if Scanning.eof ib then bad_end_of_input message else\n  c\n\n\nlet check_next_char_for_char = check_next_char \"a Char\"\nlet check_next_char_for_string = check_next_char \"a String\"\n\nlet scan_backslash_char width ib =\n  match check_next_char_for_char width ib with\n  | '\\\\' | '\\'' | '\\\"' | 'n' | 't' | 'b' | 'r' as c ->\n    Scanning.store_char width ib (char_for_backslash c)\n  | '0' .. '9' as c ->\n    let get_digit () =\n      let c = Scanning.next_char ib in\n      match c with\n      | '0' .. '9' as c -> c\n      | c -> bad_input_escape c in\n    let c0 = c in\n    let c1 = get_digit () in\n    let c2 = get_digit () in\n    Scanning.store_char (width - 2) ib (char_for_decimal_code c0 c1 c2)\n  | 'x' ->\n    let get_digit () =\n      let c = Scanning.next_char ib in\n      match c with\n      | '0' .. '9' | 'A' .. 'F' | 'a' .. 'f' as c -> c\n      | c -> bad_input_escape c in\n    let c1 = get_digit () in\n    let c2 = get_digit () in\n    Scanning.store_char (width - 2) ib (char_for_hexadecimal_code c1 c2)\n  | c ->\n    bad_input_escape c\n\n\n(* Scan a character (an OCaml token). *)\nlet scan_caml_char width ib =\n\n  let rec find_start width =\n    match Scanning.checked_peek_char ib with\n    | '\\'' -> find_char (Scanning.ignore_char width ib)\n    | c -> character_mismatch '\\'' c\n\n  and find_char width =\n    match check_next_char_for_char width ib with\n    | '\\\\' ->\n      find_stop (scan_backslash_char (Scanning.ignore_char width ib) ib)\n    | c ->\n      find_stop (Scanning.store_char width ib c)\n\n  and find_stop width =\n    match check_next_char_for_char width ib with\n    | '\\'' -> Scanning.ignore_char width ib\n    | c -> character_mismatch '\\'' c in\n\n  find_start width\n\n\n(* Scan a delimited string (an OCaml token). *)\nlet scan_caml_string width ib =\n\n  let rec find_start width =\n    match Scanning.checked_peek_char ib with\n    | '\\\"' -> find_stop (Scanning.ignore_char width ib)\n    | c -> character_mismatch '\\\"' c\n\n  and find_stop width =\n    match check_next_char_for_string width ib with\n    | '\\\"' -> Scanning.ignore_char width ib\n    | '\\\\' -> scan_backslash (Scanning.ignore_char width ib)\n    | c -> find_stop (Scanning.store_char width ib c)\n\n  and scan_backslash width =\n    match check_next_char_for_string width ib with\n    | '\\r' -> skip_newline (Scanning.ignore_char width ib)\n    | '\\n' -> skip_spaces (Scanning.ignore_char width ib)\n    | _ -> find_stop (scan_backslash_char width ib)\n\n  and skip_newline width =\n    match check_next_char_for_string width ib with\n    | '\\n' -> skip_spaces (Scanning.ignore_char width ib)\n    | _ -> find_stop (Scanning.store_char width ib '\\r')\n\n  and skip_spaces width =\n    match check_next_char_for_string width ib with\n    | ' ' -> skip_spaces (Scanning.ignore_char width ib)\n    | _ -> find_stop width in\n\n  find_start width\n\n\n(* Scan a boolean (an OCaml token). *)\nlet scan_bool ib =\n  let c = Scanning.checked_peek_char ib in\n  let m =\n    match c with\n    | 't' -> 4\n    | 'f' -> 5\n    | c ->\n      bad_input\n        (Printf.sprintf \"the character %C cannot start a boolean\" c) in\n  scan_string None m ib\n\n\n(* Scan a string containing elements in char_set and terminated by scan_indic\n   if provided. *)\nlet scan_chars_in_char_set char_set scan_indic width ib =\n  let rec scan_chars i stp =\n    let c = Scanning.peek_char ib in\n    if i > 0 && not (Scanning.eof ib) &&\n       is_in_char_set char_set c &&\n       int_of_char c <> stp then\n      let _ = Scanning.store_char max_int ib c in\n      scan_chars (i - 1) stp in\n  match scan_indic with\n  | None -> scan_chars width (-1);\n  | Some c ->\n    scan_chars width (int_of_char c);\n    if not (Scanning.eof ib) then\n      let ci = Scanning.peek_char ib in\n      if c = ci\n      then Scanning.invalidate_current_char ib\n      else character_mismatch c ci\n\n\n(* The global error report function for [Scanf]. *)\nlet scanf_bad_input ib = function\n  | Scan_failure s | Failure s ->\n    let i = Scanning.char_count ib in\n    bad_input (Printf.sprintf \"scanf: bad input at char number %i: %s\" i s)\n  | x -> raise x\n\n\n(* Get the content of a counter from an input buffer. *)\nlet get_counter ib counter =\n  match counter with\n  | Line_counter -> Scanning.line_count ib\n  | Char_counter -> Scanning.char_count ib\n  | Token_counter -> Scanning.token_count ib\n\n\n(* Compute the width of a padding option (see \"%42{\" and \"%123(\"). *)\nlet width_of_pad_opt pad_opt = match pad_opt with\n  | None -> max_int\n  | Some width -> width\n\n\nlet stopper_of_formatting_lit fmting =\n  if fmting = Escaped_percent then '%', \"\" else\n    let str = string_of_formatting_lit fmting in\n    let stp = str.[1] in\n    let sub_str = String.sub str 2 (String.length str - 2) in\n    stp, sub_str\n\n\n(******************************************************************************)\n                           (* Readers managment *)\n\n(* A call to take_format_readers on a format is evaluated into functions\n   taking readers as arguments and aggregate them into an heterogeneous list *)\n(* When all readers are taken, finally pass the list of the readers to the\n   continuation k. *)\nlet rec take_format_readers : type a c d e f .\n    ((d, e) heter_list -> e) -> (a, Scanning.in_channel, c, d, e, f) fmt ->\n    d =\nfun k fmt -> match fmt with\n  | Reader fmt_rest ->\n    fun reader ->\n      let new_k readers_rest = k (Cons (reader, readers_rest)) in\n      take_format_readers new_k fmt_rest\n  | Char rest                        -> take_format_readers k rest\n  | Caml_char rest                   -> take_format_readers k rest\n  | String (_, rest)                 -> take_format_readers k rest\n  | Caml_string (_, rest)            -> take_format_readers k rest\n  | Int (_, _, _, rest)              -> take_format_readers k rest\n  | Int32 (_, _, _, rest)            -> take_format_readers k rest\n  | Nativeint (_, _, _, rest)        -> take_format_readers k rest\n  | Int64 (_, _, _, rest)            -> take_format_readers k rest\n  | Float (_, _, _, rest)            -> take_format_readers k rest\n  | Bool rest                        -> take_format_readers k rest\n  | Alpha rest                       -> take_format_readers k rest\n  | Theta rest                       -> take_format_readers k rest\n  | Flush rest                       -> take_format_readers k rest\n  | String_literal (_, rest)         -> take_format_readers k rest\n  | Char_literal (_, rest)           -> take_format_readers k rest\n  | Custom (_, _, rest)              -> take_format_readers k rest\n\n  | Scan_char_set (_, _, rest)       -> take_format_readers k rest\n  | Scan_get_counter (_, rest)       -> take_format_readers k rest\n  | Scan_next_char rest              -> take_format_readers k rest\n\n  | Formatting_lit (_, rest)         -> take_format_readers k rest\n  | Formatting_gen (Open_tag (Format (fmt, _)), rest) ->\n      take_format_readers k (concat_fmt fmt rest)\n  | Formatting_gen (Open_box (Format (fmt, _)), rest) ->\n      take_format_readers k (concat_fmt fmt rest)\n\n  | Format_arg (_, _, rest)          -> take_format_readers k rest\n  | Format_subst (_, fmtty, rest)    ->\n     take_fmtty_format_readers k (erase_rel (symm fmtty)) rest\n  | Ignored_param (ign, rest)        -> take_ignored_format_readers k ign rest\n\n  | End_of_format                    -> k Nil\n\n(* Take readers associated to an fmtty coming from a Format_subst \"%(...%)\". *)\nand take_fmtty_format_readers : type x y a c d e f .\n    ((d, e) heter_list -> e) -> (a, Scanning.in_channel, c, d, x, y) fmtty ->\n      (y, Scanning.in_channel, c, x, e, f) fmt -> d =\nfun k fmtty fmt -> match fmtty with\n  | Reader_ty fmt_rest ->\n    fun reader ->\n      let new_k readers_rest = k (Cons (reader, readers_rest)) in\n      take_fmtty_format_readers new_k fmt_rest fmt\n  | Ignored_reader_ty fmt_rest ->\n    fun reader ->\n      let new_k readers_rest = k (Cons (reader, readers_rest)) in\n      take_fmtty_format_readers new_k fmt_rest fmt\n  | Char_ty rest                -> take_fmtty_format_readers k rest fmt\n  | String_ty rest              -> take_fmtty_format_readers k rest fmt\n  | Int_ty rest                 -> take_fmtty_format_readers k rest fmt\n  | Int32_ty rest               -> take_fmtty_format_readers k rest fmt\n  | Nativeint_ty rest           -> take_fmtty_format_readers k rest fmt\n  | Int64_ty rest               -> take_fmtty_format_readers k rest fmt\n  | Float_ty rest               -> take_fmtty_format_readers k rest fmt\n  | Bool_ty rest                -> take_fmtty_format_readers k rest fmt\n  | Alpha_ty rest               -> take_fmtty_format_readers k rest fmt\n  | Theta_ty rest               -> take_fmtty_format_readers k rest fmt\n  | Any_ty rest                 -> take_fmtty_format_readers k rest fmt\n  | Format_arg_ty (_, rest)     -> take_fmtty_format_readers k rest fmt\n  | End_of_fmtty                -> take_format_readers k fmt\n  | Format_subst_ty (ty1, ty2, rest) ->\n    let ty = trans (symm ty1) ty2 in\n    take_fmtty_format_readers k (concat_fmtty ty rest) fmt\n\n(* Take readers associated to an ignored parameter. *)\nand take_ignored_format_readers : type x y a c d e f .\n    ((d, e) heter_list -> e) -> (a, Scanning.in_channel, c, d, x, y) ignored ->\n      (y, Scanning.in_channel, c, x, e, f) fmt -> d =\nfun k ign fmt -> match ign with\n  | Ignored_reader ->\n    fun reader ->\n      let new_k readers_rest = k (Cons (reader, readers_rest)) in\n      take_format_readers new_k fmt\n  | Ignored_char                    -> take_format_readers k fmt\n  | Ignored_caml_char               -> take_format_readers k fmt\n  | Ignored_string _                -> take_format_readers k fmt\n  | Ignored_caml_string _           -> take_format_readers k fmt\n  | Ignored_int (_, _)              -> take_format_readers k fmt\n  | Ignored_int32 (_, _)            -> take_format_readers k fmt\n  | Ignored_nativeint (_, _)        -> take_format_readers k fmt\n  | Ignored_int64 (_, _)            -> take_format_readers k fmt\n  | Ignored_float (_, _)            -> take_format_readers k fmt\n  | Ignored_bool                    -> take_format_readers k fmt\n  | Ignored_format_arg _            -> take_format_readers k fmt\n  | Ignored_format_subst (_, fmtty) -> take_fmtty_format_readers k fmtty fmt\n  | Ignored_scan_char_set _         -> take_format_readers k fmt\n  | Ignored_scan_get_counter _      -> take_format_readers k fmt\n  | Ignored_scan_next_char          -> take_format_readers k fmt\n\n(******************************************************************************)\n                          (* Generic scanning *)\n\n(* Make a generic scanning function. *)\n(* Scan a stream according to a format and readers obtained by\n   take_format_readers, and aggegate scanned values into an\n   heterogeneous list. *)\n(* Return the heterogeneous list of scanned values. *)\nlet rec make_scanf : type a c d e f.\n    Scanning.in_channel -> (a, Scanning.in_channel, c, d, e, f) fmt ->\n      (d, e) heter_list -> (a, f) heter_list =\nfun ib fmt readers -> match fmt with\n  | Char rest ->\n    let _ = scan_char 0 ib in\n    let c = token_char ib in\n    Cons (c, make_scanf ib rest readers)\n  | Caml_char rest ->\n    let _ = scan_caml_char 0 ib in\n    let c = token_char ib in\n    Cons (c, make_scanf ib rest readers)\n\n  | String (pad, Formatting_lit (fmting_lit, rest)) ->\n    let stp, str = stopper_of_formatting_lit fmting_lit in\n    let scan width _ ib = scan_string (Some stp) width ib in\n    let str_rest = String_literal (str, rest) in\n    pad_prec_scanf ib str_rest readers pad No_precision scan token_string\n  | String (pad, Formatting_gen (Open_tag (Format (fmt', _)), rest)) ->\n    let scan width _ ib = scan_string (Some '{') width ib in\n    pad_prec_scanf ib (concat_fmt fmt' rest) readers pad No_precision scan\n                   token_string\n  | String (pad, Formatting_gen (Open_box (Format (fmt', _)), rest)) ->\n    let scan width _ ib = scan_string (Some '[') width ib in\n    pad_prec_scanf ib (concat_fmt fmt' rest) readers pad No_precision scan\n                   token_string\n  | String (pad, rest) ->\n    let scan width _ ib = scan_string None width ib in\n    pad_prec_scanf ib rest readers pad No_precision scan token_string\n\n  | Caml_string (pad, rest) ->\n    let scan width _ ib = scan_caml_string width ib in\n    pad_prec_scanf ib rest readers pad No_precision scan token_string\n  | Int (iconv, pad, prec, rest) ->\n    let c = integer_conversion_of_char (char_of_iconv iconv) in\n    let scan width _ ib = scan_int_conversion c width ib in\n    pad_prec_scanf ib rest readers pad prec scan (token_int c)\n  | Int32 (iconv, pad, prec, rest) ->\n    let c = integer_conversion_of_char (char_of_iconv iconv) in\n    let scan width _ ib = scan_int_conversion c width ib in\n    pad_prec_scanf ib rest readers pad prec scan (token_int32 c)\n  | Nativeint (iconv, pad, prec, rest) ->\n    let c = integer_conversion_of_char (char_of_iconv iconv) in\n    let scan width _ ib = scan_int_conversion c width ib in\n    pad_prec_scanf ib rest readers pad prec scan (token_nativeint c)\n  | Int64 (iconv, pad, prec, rest) ->\n    let c = integer_conversion_of_char (char_of_iconv iconv) in\n    let scan width _ ib = scan_int_conversion c width ib in\n    pad_prec_scanf ib rest readers pad prec scan (token_int64 c)\n  | Float (Float_F, pad, prec, rest) ->\n    pad_prec_scanf ib rest readers pad prec scan_caml_float token_float\n  | Float ((Float_f | Float_pf | Float_sf | Float_e | Float_pe | Float_se\n               | Float_E | Float_pE | Float_sE | Float_g | Float_pg | Float_sg\n               | Float_G | Float_pG | Float_sG), pad, prec, rest) ->\n    pad_prec_scanf ib rest readers pad prec scan_float token_float\n  | Float ((Float_h | Float_ph | Float_sh | Float_H | Float_pH | Float_sH),\n           pad, prec, rest) ->\n    pad_prec_scanf ib rest readers pad prec scan_hex_float token_float\n  | Bool rest ->\n    let _ = scan_bool ib in\n    let b = token_bool ib in\n    Cons (b, make_scanf ib rest readers)\n  | Alpha _ ->\n    invalid_arg \"scanf: bad conversion \\\"%a\\\"\"\n  | Theta _ ->\n    invalid_arg \"scanf: bad conversion \\\"%t\\\"\"\n  | Custom _ ->\n    invalid_arg \"scanf: bad conversion \\\"%?\\\" (custom converter)\"\n  | Reader fmt_rest ->\n    begin match readers with\n    | Cons (reader, readers_rest) ->\n        let x = reader ib in\n        Cons (x, make_scanf ib fmt_rest readers_rest)\n    | Nil -> \n        invalid_arg \"scanf: missing reader\"\n    end\n  | Flush rest ->\n    if Scanning.end_of_input ib then make_scanf ib rest readers\n    else bad_input \"end of input not found\"\n\n  | String_literal (str, rest) ->\n    String.iter (check_char ib) str;\n    make_scanf ib rest readers\n  | Char_literal (chr, rest) ->\n    check_char ib chr;\n    make_scanf ib rest readers\n\n  | Format_arg (pad_opt, fmtty, rest) ->\n    let _ = scan_caml_string (width_of_pad_opt pad_opt) ib in\n    let s = token_string ib in\n    let fmt =\n      try format_of_string_fmtty s fmtty\n      with Failure msg -> bad_input msg\n    in\n    Cons (fmt, make_scanf ib rest readers)\n  | Format_subst (pad_opt, fmtty, rest) ->\n    let _ = scan_caml_string (width_of_pad_opt pad_opt) ib in\n    let s = token_string ib in\n    let fmt, fmt' =\n      try\n        let Fmt_EBB fmt = fmt_ebb_of_string s in\n        let Fmt_EBB fmt' = fmt_ebb_of_string s in\n        (* TODO: find a way to avoid reparsing twice *)\n\n        (* TODO: these type-checks below *can* fail because of type\n           ambiguity in presence of ignored-readers: \"%_r%d\" and \"%d%_r\"\n           are typed in the same way.\n\n           # Scanf.sscanf \"\\\"%_r%d\\\"3\" \"%(%d%_r%)\" ignore\n             (fun fmt n -> string_of_format fmt, n)\n           Exception: CamlinternalFormat.Type_mismatch.\n\n           We should properly catch this exception.\n        *)\n        type_format fmt (erase_rel fmtty),\n        type_format fmt' (erase_rel (symm fmtty))\n      with Failure msg -> bad_input msg\n    in\n    Cons (Format (fmt, s),\n          make_scanf ib (concat_fmt fmt' rest) readers)\n\n  | Scan_char_set (width_opt, char_set, Formatting_lit (fmting_lit, rest)) ->\n    let stp, str = stopper_of_formatting_lit fmting_lit in\n    let width = width_of_pad_opt width_opt in\n    scan_chars_in_char_set char_set (Some stp) width ib;\n    let s = token_string ib in\n    let str_rest = String_literal (str, rest) in\n    Cons (s, make_scanf ib str_rest readers)\n  | Scan_char_set (width_opt, char_set, rest) ->\n    let width = width_of_pad_opt width_opt in\n    scan_chars_in_char_set char_set None width ib;\n    let s = token_string ib in\n    Cons (s, make_scanf ib rest readers)\n  | Scan_get_counter (counter, rest) ->\n    let count = get_counter ib counter in\n    Cons (count, make_scanf ib rest readers)\n  | Scan_next_char rest ->\n    let c = Scanning.checked_peek_char ib in\n    Cons (c, make_scanf ib rest readers)\n\n  | Formatting_lit (formatting_lit, rest) ->\n    String.iter (check_char ib) (string_of_formatting_lit formatting_lit);\n    make_scanf ib rest readers\n  | Formatting_gen (Open_tag (Format (fmt', _)), rest) ->\n    check_char ib '@'; check_char ib '{';\n    make_scanf ib (concat_fmt fmt' rest) readers\n  | Formatting_gen (Open_box (Format (fmt', _)), rest) ->\n    check_char ib '@'; check_char ib '[';\n    make_scanf ib (concat_fmt fmt' rest) readers\n\n  | Ignored_param (ign, rest) ->\n    let Param_format_EBB fmt' = param_format_of_ignored_format ign rest in\n    begin match make_scanf ib fmt' readers with\n    | Cons (_, arg_rest) -> arg_rest\n    | Nil -> assert false\n    end\n\n  | End_of_format ->\n    Nil\n\n(* Case analysis on padding and precision. *)\n(* Reject formats containing \"%*\" or \"%.*\". *)\n(* Pass padding and precision to the generic scanner `scan'. *)\nand pad_prec_scanf : type a c d e f x y z t .\n    Scanning.in_channel -> (a, Scanning.in_channel, c, d, e, f) fmt ->\n      (d, e) heter_list -> (x, y) padding -> (y, z -> a) precision ->\n      (int -> int -> Scanning.in_channel -> t) ->\n      (Scanning.in_channel -> z) ->\n      (x, f) heter_list =\nfun ib fmt readers pad prec scan token -> match pad, prec with\n  | No_padding, No_precision ->\n    let _ = scan max_int max_int ib in\n    let x = token ib in\n    Cons (x, make_scanf ib fmt readers)\n  | No_padding, Lit_precision p ->\n    let _ = scan max_int p ib in\n    let x = token ib in\n    Cons (x, make_scanf ib fmt readers)\n  | Lit_padding ((Right | Zeros), w), No_precision ->\n    let _ = scan w max_int ib in\n    let x = token ib in\n    Cons (x, make_scanf ib fmt readers)\n  | Lit_padding ((Right | Zeros), w), Lit_precision p ->\n    let _ = scan w p ib in\n    let x = token ib in\n    Cons (x, make_scanf ib fmt readers)\n  | Lit_padding (Left, _), _ ->\n    invalid_arg \"scanf: bad conversion \\\"%-\\\"\"\n  | Lit_padding ((Right | Zeros), _), Arg_precision ->\n    invalid_arg \"scanf: bad conversion \\\"%*\\\"\"\n  | Arg_padding _, _ ->\n    invalid_arg \"scanf: bad conversion \\\"%*\\\"\"\n  | No_padding, Arg_precision ->\n    invalid_arg \"scanf: bad conversion \\\"%*\\\"\"\n\n(******************************************************************************)\n            (* Defining [scanf] and various flavors of [scanf] *)\n\ntype 'a kscanf_result = Args of 'a | Exc of exn\n\nlet kscanf ib ef (Format (fmt, str)) =\n  let rec apply : type a b . a -> (a, b) heter_list -> b =\n    fun f args -> match args with\n    | Cons (x, r) -> apply (f x) r\n    | Nil -> f\n  in\n  let k readers f =\n    Scanning.reset_token ib;\n    match try Args (make_scanf ib fmt readers) with\n      | (Scan_failure _ | Failure _ | End_of_file) as exc -> Exc exc\n      | Invalid_argument msg ->\n        invalid_arg (msg ^ \" in format \\\"\" ^ String.escaped str ^ \"\\\"\")\n    with\n      | Args args -> apply f args\n      | Exc exc -> ef ib exc\n  in\n  take_format_readers k fmt\n\n(***)\n\nlet kbscanf = kscanf\nlet bscanf ib fmt = kbscanf ib scanf_bad_input fmt\n\nlet ksscanf s ef fmt = kbscanf (Scanning.from_string s) ef fmt\nlet sscanf s fmt = kbscanf (Scanning.from_string s) scanf_bad_input fmt\n\nlet scanf fmt = kscanf Scanning.stdib scanf_bad_input fmt\n\n(***)\n\n(* Scanning format strings. *)\nlet bscanf_format :\n  Scanning.in_channel -> ('a, 'b, 'c, 'd, 'e, 'f) format6 ->\n  (('a, 'b, 'c, 'd, 'e, 'f) format6 -> 'g) -> 'g =\n  fun ib format f ->\n    let _ = scan_caml_string max_int ib in\n    let str = token_string ib in\n    let fmt' =\n      try format_of_string_format str format\n      with Failure msg -> bad_input msg in\n    f fmt'\n\n\nlet sscanf_format :\n  string -> ('a, 'b, 'c, 'd, 'e, 'f) format6 ->\n  (('a, 'b, 'c, 'd, 'e, 'f) format6 -> 'g) -> 'g =\n  fun s format f -> bscanf_format (Scanning.from_string s) format f\n\n\nlet string_to_String s =\n  let l = String.length s in\n  let b = Buffer.create (l + 2) in\n  Buffer.add_char b '\\\"';\n  for i = 0 to l - 1 do\n    let c = s.[i] in\n    if c = '\\\"' then Buffer.add_char b '\\\\';\n    Buffer.add_char b c;\n  done;\n  Buffer.add_char b '\\\"';\n  Buffer.contents b\n\n\nlet format_from_string s fmt =\n  sscanf_format (string_to_String s) fmt (fun x -> x)\n\n\nlet unescaped s =\n  sscanf (\"\\\"\" ^ s ^ \"\\\"\") \"%S%!\" (fun x -> x)\n\n\n(* Deprecated *)\nlet kfscanf ic ef fmt = kbscanf (Scanning.memo_from_channel ic) ef fmt\nlet fscanf ic fmt = kscanf (Scanning.memo_from_channel ic) scanf_bad_input fmt\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Xavier Leroy, projet Cristal, INRIA Rocquencourt           *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* Sets over ordered types *)\n\nmodule type OrderedType =\n  sig\n    type t\n    val compare: t -> t -> int\n  end\n\nmodule type S =\n  sig\n    type elt\n    type t\n    val empty: t\n    val is_empty: t -> bool\n    val mem: elt -> t -> bool\n    val add: elt -> t -> t\n    val singleton: elt -> t\n    val remove: elt -> t -> t\n    val union: t -> t -> t\n    val inter: t -> t -> t\n    val diff: t -> t -> t\n    val compare: t -> t -> int\n    val equal: t -> t -> bool\n    val subset: t -> t -> bool\n    val iter: (elt -> unit) -> t -> unit\n    val map: (elt -> elt) -> t -> t\n    val fold: (elt -> 'a -> 'a) -> t -> 'a -> 'a\n    val for_all: (elt -> bool) -> t -> bool\n    val exists: (elt -> bool) -> t -> bool\n    val filter: (elt -> bool) -> t -> t\n    val partition: (elt -> bool) -> t -> t * t\n    val cardinal: t -> int\n    val elements: t -> elt list\n    val min_elt: t -> elt\n    val max_elt: t -> elt\n    val choose: t -> elt\n    val split: elt -> t -> t * bool * t\n    val find: elt -> t -> elt\n    val of_list: elt list -> t\n  end\n\nmodule Make(Ord: OrderedType) =\n  struct\n    type elt = Ord.t\n    type t = Empty | Node of t * elt * t * int\n\n    (* Sets are represented by balanced binary trees (the heights of the\n       children differ by at most 2 *)\n\n    let height = function\n        Empty -> 0\n      | Node(_, _, _, h) -> h\n\n    (* Creates a new node with left son l, value v and right son r.\n       We must have all elements of l < v < all elements of r.\n       l and r must be balanced and | height l - height r | <= 2.\n       Inline expansion of height for better speed. *)\n\n    let create l v r =\n      let hl = match l with Empty -> 0 | Node(_,_,_,h) -> h in\n      let hr = match r with Empty -> 0 | Node(_,_,_,h) -> h in\n      Node(l, v, r, (if hl >= hr then hl + 1 else hr + 1))\n\n    (* Same as create, but performs one step of rebalancing if necessary.\n       Assumes l and r balanced and | height l - height r | <= 3.\n       Inline expansion of create for better speed in the most frequent case\n       where no rebalancing is required. *)\n\n    let bal l v r =\n      let hl = match l with Empty -> 0 | Node(_,_,_,h) -> h in\n      let hr = match r with Empty -> 0 | Node(_,_,_,h) -> h in\n      if hl > hr + 2 then begin\n        match l with\n          Empty -> invalid_arg \"Set.bal\"\n        | Node(ll, lv, lr, _) ->\n            if height ll >= height lr then\n              create ll lv (create lr v r)\n            else begin\n              match lr with\n                Empty -> invalid_arg \"Set.bal\"\n              | Node(lrl, lrv, lrr, _)->\n                  create (create ll lv lrl) lrv (create lrr v r)\n            end\n      end else if hr > hl + 2 then begin\n        match r with\n          Empty -> invalid_arg \"Set.bal\"\n        | Node(rl, rv, rr, _) ->\n            if height rr >= height rl then\n              create (create l v rl) rv rr\n            else begin\n              match rl with\n                Empty -> invalid_arg \"Set.bal\"\n              | Node(rll, rlv, rlr, _) ->\n                  create (create l v rll) rlv (create rlr rv rr)\n            end\n      end else\n        Node(l, v, r, (if hl >= hr then hl + 1 else hr + 1))\n\n    (* Insertion of one element *)\n\n    let rec add x = function\n        Empty -> Node(Empty, x, Empty, 1)\n      | Node(l, v, r, _) as t ->\n          let c = Ord.compare x v in\n          if c = 0 then t else\n          if c < 0 then\n            let ll = add x l in\n            if l == ll then t else bal ll v r\n          else\n            let rr = add x r in\n            if r == rr then t else bal l v rr\n\n    let singleton x = Node(Empty, x, Empty, 1)\n\n    (* Beware: those two functions assume that the added v is *strictly*\n       smaller (or bigger) than all the present elements in the tree; it\n       does not test for equality with the current min (or max) element.\n       Indeed, they are only used during the \"join\" operation which\n       respects this precondition.\n    *)\n\n    let rec add_min_element v = function\n      | Empty -> singleton v\n      | Node (l, x, r, _h) ->\n        bal (add_min_element v l) x r\n\n    let rec add_max_element v = function\n      | Empty -> singleton v\n      | Node (l, x, r, _h) ->\n        bal l x (add_max_element v r)\n\n    (* Same as create and bal, but no assumptions are made on the\n       relative heights of l and r. *)\n\n    let rec join l v r =\n      match (l, r) with\n        (Empty, _) -> add_min_element v r\n      | (_, Empty) -> add_max_element v l\n      | (Node(ll, lv, lr, lh), Node(rl, rv, rr, rh)) ->\n          if lh > rh + 2 then bal ll lv (join lr v r) else\n          if rh > lh + 2 then bal (join l v rl) rv rr else\n          create l v r\n\n    (* Smallest and greatest element of a set *)\n\n    let rec min_elt = function\n        Empty -> raise Not_found\n      | Node(Empty, v, _, _) -> v\n      | Node(l, _, _, _) -> min_elt l\n\n    let rec max_elt = function\n        Empty -> raise Not_found\n      | Node(_, v, Empty, _) -> v\n      | Node(_, _, r, _) -> max_elt r\n\n    (* Remove the smallest element of the given set *)\n\n    let rec remove_min_elt = function\n        Empty -> invalid_arg \"Set.remove_min_elt\"\n      | Node(Empty, _, r, _) -> r\n      | Node(l, v, r, _) -> bal (remove_min_elt l) v r\n\n    (* Merge two trees l and r into one.\n       All elements of l must precede the elements of r.\n       Assume | height l - height r | <= 2. *)\n\n    let merge t1 t2 =\n      match (t1, t2) with\n        (Empty, t) -> t\n      | (t, Empty) -> t\n      | (_, _) -> bal t1 (min_elt t2) (remove_min_elt t2)\n\n    (* Merge two trees l and r into one.\n       All elements of l must precede the elements of r.\n       No assumption on the heights of l and r. *)\n\n    let concat t1 t2 =\n      match (t1, t2) with\n        (Empty, t) -> t\n      | (t, Empty) -> t\n      | (_, _) -> join t1 (min_elt t2) (remove_min_elt t2)\n\n    (* Splitting.  split x s returns a triple (l, present, r) where\n        - l is the set of elements of s that are < x\n        - r is the set of elements of s that are > x\n        - present is false if s contains no element equal to x,\n          or true if s contains an element equal to x. *)\n\n    let rec split x = function\n        Empty ->\n          (Empty, false, Empty)\n      | Node(l, v, r, _) ->\n          let c = Ord.compare x v in\n          if c = 0 then (l, true, r)\n          else if c < 0 then\n            let (ll, pres, rl) = split x l in (ll, pres, join rl v r)\n          else\n            let (lr, pres, rr) = split x r in (join l v lr, pres, rr)\n\n    (* Implementation of the set operations *)\n\n    let empty = Empty\n\n    let is_empty = function Empty -> true | _ -> false\n\n    let rec mem x = function\n        Empty -> false\n      | Node(l, v, r, _) ->\n          let c = Ord.compare x v in\n          c = 0 || mem x (if c < 0 then l else r)\n\n    let rec remove x = function\n        Empty -> Empty\n      | (Node(l, v, r, _) as t) ->\n          let c = Ord.compare x v in\n          if c = 0 then merge l r\n          else\n            if c < 0 then\n              let ll = remove x l in\n              if l == ll then t\n              else bal ll v r\n            else\n              let rr = remove x r in\n              if r == rr then t\n              else bal l v rr\n\n    let rec union s1 s2 =\n      match (s1, s2) with\n        (Empty, t2) -> t2\n      | (t1, Empty) -> t1\n      | (Node(l1, v1, r1, h1), Node(l2, v2, r2, h2)) ->\n          if h1 >= h2 then\n            if h2 = 1 then add v2 s1 else begin\n              let (l2, _, r2) = split v1 s2 in\n              join (union l1 l2) v1 (union r1 r2)\n            end\n          else\n            if h1 = 1 then add v1 s2 else begin\n              let (l1, _, r1) = split v2 s1 in\n              join (union l1 l2) v2 (union r1 r2)\n            end\n\n    let rec inter s1 s2 =\n      match (s1, s2) with\n        (Empty, _) -> Empty\n      | (_, Empty) -> Empty\n      | (Node(l1, v1, r1, _), t2) ->\n          match split v1 t2 with\n            (l2, false, r2) ->\n              concat (inter l1 l2) (inter r1 r2)\n          | (l2, true, r2) ->\n              join (inter l1 l2) v1 (inter r1 r2)\n\n    let rec diff s1 s2 =\n      match (s1, s2) with\n        (Empty, _) -> Empty\n      | (t1, Empty) -> t1\n      | (Node(l1, v1, r1, _), t2) ->\n          match split v1 t2 with\n            (l2, false, r2) ->\n              join (diff l1 l2) v1 (diff r1 r2)\n          | (l2, true, r2) ->\n              concat (diff l1 l2) (diff r1 r2)\n\n    type enumeration = End | More of elt * t * enumeration\n\n    let rec cons_enum s e =\n      match s with\n        Empty -> e\n      | Node(l, v, r, _) -> cons_enum l (More(v, r, e))\n\n    let rec compare_aux e1 e2 =\n        match (e1, e2) with\n        (End, End) -> 0\n      | (End, _)  -> -1\n      | (_, End) -> 1\n      | (More(v1, r1, e1), More(v2, r2, e2)) ->\n          let c = Ord.compare v1 v2 in\n          if c <> 0\n          then c\n          else compare_aux (cons_enum r1 e1) (cons_enum r2 e2)\n\n    let compare s1 s2 =\n      compare_aux (cons_enum s1 End) (cons_enum s2 End)\n\n    let equal s1 s2 =\n      compare s1 s2 = 0\n\n    let rec subset s1 s2 =\n      match (s1, s2) with\n        Empty, _ ->\n          true\n      | _, Empty ->\n          false\n      | Node (l1, v1, r1, _), (Node (l2, v2, r2, _) as t2) ->\n          let c = Ord.compare v1 v2 in\n          if c = 0 then\n            subset l1 l2 && subset r1 r2\n          else if c < 0 then\n            subset (Node (l1, v1, Empty, 0)) l2 && subset r1 t2\n          else\n            subset (Node (Empty, v1, r1, 0)) r2 && subset l1 t2\n\n    let rec iter f = function\n        Empty -> ()\n      | Node(l, v, r, _) -> iter f l; f v; iter f r\n\n    let rec fold f s accu =\n      match s with\n        Empty -> accu\n      | Node(l, v, r, _) -> fold f r (f v (fold f l accu))\n\n    let rec for_all p = function\n        Empty -> true\n      | Node(l, v, r, _) -> p v && for_all p l && for_all p r\n\n    let rec exists p = function\n        Empty -> false\n      | Node(l, v, r, _) -> p v || exists p l || exists p r\n\n    let rec filter p = function\n        Empty -> Empty\n      | (Node(l, v, r, _)) as t ->\n          (* call [p] in the expected left-to-right order *)\n          let l' = filter p l in\n          let pv = p v in\n          let r' = filter p r in\n          if pv then\n            if l==l' && r==r' then t else join l' v r'\n          else concat l' r'\n\n    let rec partition p = function\n        Empty -> (Empty, Empty)\n      | Node(l, v, r, _) ->\n          (* call [p] in the expected left-to-right order *)\n          let (lt, lf) = partition p l in\n          let pv = p v in\n          let (rt, rf) = partition p r in\n          if pv\n          then (join lt v rt, concat lf rf)\n          else (concat lt rt, join lf v rf)\n\n    let rec cardinal = function\n        Empty -> 0\n      | Node(l, _, r, _) -> cardinal l + 1 + cardinal r\n\n    let rec elements_aux accu = function\n        Empty -> accu\n      | Node(l, v, r, _) -> elements_aux (v :: elements_aux accu r) l\n\n    let elements s =\n      elements_aux [] s\n\n    let choose = min_elt\n\n    let rec find x = function\n        Empty -> raise Not_found\n      | Node(l, v, r, _) ->\n          let c = Ord.compare x v in\n          if c = 0 then v\n          else find x (if c < 0 then l else r)\n\n    let rec map f = function\n      | Empty -> Empty\n      | Node (l, v, r, _) as t ->\n         (* enforce left-to-right evaluation order *)\n         let l' = map f l in\n         let v' = f v in\n         let r' = map f r in\n         if l == l' && v == v' && r == r' then t\n         else begin\n             if (l' = Empty || Ord.compare (max_elt l') v < 0)\n                && (r' = Empty || Ord.compare v (min_elt r') < 0)\n             then join l' v' r'\n             else union l' (add v' r')\n         end\n\n    let of_sorted_list l =\n      let rec sub n l =\n        match n, l with\n        | 0, l -> Empty, l\n        | 1, x0 :: l -> Node (Empty, x0, Empty, 1), l\n        | 2, x0 :: x1 :: l -> Node (Node(Empty, x0, Empty, 1), x1, Empty, 2), l\n        | 3, x0 :: x1 :: x2 :: l ->\n            Node (Node(Empty, x0, Empty, 1), x1, Node(Empty, x2, Empty, 1), 2),l\n        | n, l ->\n          let nl = n / 2 in\n          let left, l = sub nl l in\n          match l with\n          | [] -> assert false\n          | mid :: l ->\n            let right, l = sub (n - nl - 1) l in\n            create left mid right, l\n      in\n      fst (sub (List.length l) l)\n\n    let of_list l =\n      match l with\n      | [] -> empty\n      | [x0] -> singleton x0\n      | [x0; x1] -> add x1 (singleton x0)\n      | [x0; x1; x2] -> add x2 (add x1 (singleton x0))\n      | [x0; x1; x2; x3] -> add x3 (add x2 (add x1 (singleton x0)))\n      | [x0; x1; x2; x3; x4] -> add x4 (add x3 (add x2 (add x1 (singleton x0))))\n      | _ -> of_sorted_list (List.sort_uniq Ord.compare l)\n  end\n","open Sexplib.Std\n\nmodule Reactjs = Caelm.Reactjs.Make_with_require (struct\n    let require = Js.Unsafe.pure_js_expr \"require\"\n  end)\n\nmodule Todo = struct\n  type state = Editing of string | View [@@deriving sexp]\n  type t =\n    { description : string\n    ; done_ : bool\n    ; id : int\n    ; state : state\n    } [@@deriving sexp]\n\n  let id = ref 0\n\n  let create description =\n    let id' = !id in\n    incr id;\n    { description; done_ = false; id = id'; state = View }\n\n  let set_next_id id' = id := id'\n\n  let is_editing todo = todo.state <> View\n\n  let id todo = todo.id\n\n  let description todo = todo.description\n\n  let done_ todo = todo.done_\n\n  let state todo = todo.state\n\n  let toggled todo = { todo with done_ = not todo.done_ }\n\n  let begin_edit todo = match todo.state with\n    | Editing _ -> todo\n    | View -> { todo with state = Editing todo.description }\n\n  let commit_edit todo = match todo.state with\n    | Editing _ -> { todo with state = View }\n    | View -> todo\n\n  let discard_edit todo = match todo.state with\n    | Editing description -> { todo with description; state = View }\n    | View -> todo\nend\n\nmodule State = struct\n  type filter = All | Active | Completed\n  type todos = Todo.t list [@@deriving sexp]\n  type t =\n    { filter : filter\n    ; input : string\n    ; todos : todos\n    }\n\n  type message =\n    | Add_todo of Todo.t\n    | Remove_todo of Todo.t\n    | Replace_todo of (Todo.t * Todo.t)\n    | Set_filter of filter\n    | Todo_saved\n    | Update_input of string\n\n  type command = message Lwt.t\n\n  let local_storage =\n    Dom_html.window##.localStorage\n    |> Caelm.Reactjs_wrapper.Unsafe.optdef_get_exn\n\n  let storage_key = Js.string \"todos-caelm\"\n\n  let load_todos () =\n    let todos =\n      let deserialize s =\n        Js.to_string s |> Sexplib.Sexp.of_string |> todos_of_sexp in\n      Js.Opt.case\n        local_storage##(getItem storage_key)\n        (fun () -> [])\n        deserialize in\n    let latest_id = List.map Todo.id todos |> List.fold_left max 0 in\n    Todo.set_next_id (latest_id + 1);\n    todos\n\n  let save_todos todos =\n    let serialized =\n      sexp_of_todos todos |> Sexplib.Sexp.to_string_mach |> Js.string in\n    local_storage##(setItem storage_key serialized);\n    Lwt.return Todo_saved\n\n  let create () = { filter = All; input = \"\"; todos = load_todos () }\n\n  let equal = ( = )\n\n  let replace todos old new_ =\n    List.map (fun todo -> if todo = old then new_ else todo) todos\n\n  let update ({ filter; input; todos } as state) = function\n    | Add_todo todo ->\n      let todos = todo :: todos in\n      { state with input = \"\"; todos }, Some (save_todos todos)\n    | Remove_todo todo ->\n      let todos = List.filter (fun t -> t <> todo) todos in\n      { state with todos }, Some (save_todos todos)\n    | Replace_todo (old, new_) ->\n      let todos = replace todos old new_ in\n      let command =\n        if Todo.is_editing new_ then None\n        else Some (save_todos todos) in\n      { state with todos }, command\n    | Set_filter filter -> { state with filter }, None\n    | Todo_saved -> state, None (* No-op. *)\n    | Update_input input -> { state with input }, None\nend\n\nmodule View = struct\n  module Tyxml = Caelm_reactjs_tyxml.Make (Reactjs)\n  module Wrapper = Caelm.Reactjs_wrapper.Make (Reactjs)\n\n  open State\n  open Tyxml.Html\n\n  let cons_if b x xs = if b then x :: xs else xs\n\n  let filter_todos ~filter ts =\n    let f = match filter with\n      | All -> fun _ -> true\n      | Active -> fun t -> not (Todo.done_ t)\n      | Completed -> fun t -> Todo.done_ t in\n    List.filter f ts\n\n  let header_control ~add_todo ~update_input ~input:input' =\n    let add_todo e =\n      let input = String.trim input' in\n      let key = Js.to_string e##.key in\n      if input <> \"\" && key = \"Enter\" then add_todo (Todo.create input) in\n    let update_input e = update_input (Js.to_string e##.target##.value) in\n    header ~a:[ a_class [ \"header\" ] ]\n      [ h1 [ pcdata \"todos\" ]\n      ; input ~a:[ a_autofocus true\n                 ; a_class [ \"new-todo\" ]\n                 ; a_placeholder \"What needs to be done?\"\n                 ; a_value input'\n                 ; a_oninput update_input\n                 ; a_onkeydown add_todo\n                 ] ()\n      ]\n\n  let todo ~remove_todo ~replace_todo t =\n    let open Todo in\n    let { description; done_; _ } = t in\n    let editing = is_editing t in\n    let replace = replace_todo t in\n    let toggle_check _ = replace (toggled t) in\n    let class_names =\n      [] |> cons_if editing \"editing\" |> cons_if done_ \"completed\" in\n    li ~a:[ a_class class_names ]\n      [ if editing then\n          let update_description e =\n            replace { t with description = Js.to_string e##.target##.value} in\n          let commit_edit _ =\n            let description = String.trim description in\n            if description = \"\" then remove_todo t\n            else replace (commit_edit { t with description }) in\n          let commit_edit_if_enter e =\n            if Js.to_string e##.key = \"Enter\" then commit_edit () in\n          let discard_edit_if_escape e =\n            if Js.to_string e##.key = \"Escape\" then replace (discard_edit t) in\n          input ~a:[ a_class [ \"edit\" ]\n                   ; a_input_type `Text\n                   ; a_autofocus true\n                   ; a_value description\n                   ; a_onblur commit_edit\n                   ; a_oninput update_description\n                   ; a_onkeydown discard_edit_if_escape\n                   ; a_onkeypress commit_edit_if_enter\n                   ] ()\n        else\n          let begin_edit _ = replace (begin_edit t) in\n          div ~a:[ a_class [ \"view\" ] ]\n            [ input ~a:[ a_class [ \"toggle\" ]\n                       ; a_input_type `Checkbox\n                       ; a_checked done_\n                       ; a_onchange toggle_check\n                       ] ()\n            ; label ~a:[ a_ondoubleclick begin_edit ] [ pcdata description ]\n            ; button ~a:[ a_class [ \"destroy\" ]\n                        ; a_onclick @@ fun _ -> remove_todo t\n                        ] []\n            ]\n      ]\n\n  let main_control ~remove_todo ~replace_todo ~filter ts =\n    let all_completed = List.for_all Todo.done_ ts in\n    let toggle_all _ =\n      let done_ = not all_completed in\n      List.iter (fun t -> replace_todo t { t with Todo.done_ }) ts in\n    section ~a:[ a_class @@ cons_if (List.length ts = 0) \"hidden\" [ \"main\" ] ]\n      [ input ~a:[ a_id \"toggle-all\"\n                 ; a_class [ \"toggle-all\" ]\n                 ; a_input_type `Checkbox\n                 ; a_checked all_completed\n                 ; a_onchange toggle_all\n                 ] ()\n      ; label ~a:[ a_label_for \"toggle-all\" ]\n          [ pcdata \"Mark all as complete\" ]\n      ; ul ~a:[ a_class [ \"todo-list\" ] ]\n          (ts |> filter_todos ~filter\n           |> List.rev_map (todo ~remove_todo ~replace_todo))\n      ]\n\n  let footer_control ~remove_todo ~set_filter ~filter:selected ts =\n    let completed, left = List.partition Todo.done_ ts in\n    let num_todos = List.length ts in\n    let num_left = List.length left in\n    let filter_switch filter =\n      let button_text, href = match filter with\n        | All -> \"All\", Uri.of_string \"#/\"\n        | Active -> \"Active\", Uri.of_string \"#/active\"\n        | Completed -> \"Completed\", Uri.of_string \"#/completed\" in\n      li [ a ~a:([ a_href href\n                 ; a_onclick @@ fun _ -> set_filter filter\n                 ] |> cons_if (filter = selected) (a_class [ \"selected\" ]))\n             [ pcdata button_text ]\n         ] in\n    footer ~a:[ a_class @@ cons_if (num_todos = 0) \"hidden\" [ \"footer\" ] ]\n      [ span ~a:[ a_class [ \"todo-count\" ] ]\n          [ strong [ pcdata @@ string_of_int num_left ]\n          ; pcdata @@ if num_left = 1 then \" item left\" else \" items left\"\n          ]\n      ; ul ~a:[ a_class [ \"filters\" ] ]\n          (List.map filter_switch [ All; Active; Completed ])\n      ; button ~a:[ a_class @@\n                    cons_if (completed = []) \"hidden\" [ \"clear-completed\" ]\n                  ; a_onclick @@ fun _ -> List.iter remove_todo completed\n                  ]\n          [ pcdata \"Clear completed\" ]\n      ]\n\n  let render ~send ~container { State.filter; input; todos } =\n    let add_todo todo = send (Add_todo todo) in\n    let remove_todo todo = send (Remove_todo todo) in\n    let replace_todo old new_ = send (Replace_todo (old, new_)) in\n    let update_input input = send (Update_input input) in\n    let set_filter filter = send (Set_filter filter) in\n    div [ header_control ~add_todo ~update_input ~input\n        ; main_control ~remove_todo ~replace_todo ~filter todos\n        ; footer_control ~remove_todo ~set_filter ~filter todos\n        ]\n    |> to_react_element\n    |> Wrapper.render ~container\nend\n\nmodule App = Caelm_lwt.Make (State) (View)\n\n(* TODO: Support routing *)\nlet () =\n  let container =\n    Dom_html.document##\n      (getElementsByClassName (Js.string \"todoapp\"))##\n      (item 0)\n    |> Caelm.Reactjs_wrapper.Unsafe.opt_get_exn in\n  ignore @@ App.run ~container (State.create ())\n","(**************************************************************************)\n(*                                                                        *)\n(*                                 OCaml                                  *)\n(*                                                                        *)\n(*             Xavier Leroy, projet Cristal, INRIA Rocquencourt           *)\n(*                                                                        *)\n(*   Copyright 1996 Institut National de Recherche en Informatique et     *)\n(*     en Automatique.                                                    *)\n(*                                                                        *)\n(*   All rights reserved.  This file is distributed under the terms of    *)\n(*   the GNU Lesser General Public License version 2.1, with the          *)\n(*   special exception on linking described in the file LICENSE.          *)\n(*                                                                        *)\n(**************************************************************************)\n\n(* Ensure that [at_exit] functions are called at the end of every program *)\n\nlet _ = do_at_exit()\n","module.exports={\n  \"O_RDONLY\": 0,\n  \"O_WRONLY\": 1,\n  \"O_RDWR\": 2,\n  \"S_IFMT\": 61440,\n  \"S_IFREG\": 32768,\n  \"S_IFDIR\": 16384,\n  \"S_IFCHR\": 8192,\n  \"S_IFBLK\": 24576,\n  \"S_IFIFO\": 4096,\n  \"S_IFLNK\": 40960,\n  \"S_IFSOCK\": 49152,\n  \"O_CREAT\": 512,\n  \"O_EXCL\": 2048,\n  \"O_NOCTTY\": 131072,\n  \"O_TRUNC\": 1024,\n  \"O_APPEND\": 8,\n  \"O_DIRECTORY\": 1048576,\n  \"O_NOFOLLOW\": 256,\n  \"O_SYNC\": 128,\n  \"O_SYMLINK\": 2097152,\n  \"O_NONBLOCK\": 4,\n  \"S_IRWXU\": 448,\n  \"S_IRUSR\": 256,\n  \"S_IWUSR\": 128,\n  \"S_IXUSR\": 64,\n  \"S_IRWXG\": 56,\n  \"S_IRGRP\": 32,\n  \"S_IWGRP\": 16,\n  \"S_IXGRP\": 8,\n  \"S_IRWXO\": 7,\n  \"S_IROTH\": 4,\n  \"S_IWOTH\": 2,\n  \"S_IXOTH\": 1,\n  \"E2BIG\": 7,\n  \"EACCES\": 13,\n  \"EADDRINUSE\": 48,\n  \"EADDRNOTAVAIL\": 49,\n  \"EAFNOSUPPORT\": 47,\n  \"EAGAIN\": 35,\n  \"EALREADY\": 37,\n  \"EBADF\": 9,\n  \"EBADMSG\": 94,\n  \"EBUSY\": 16,\n  \"ECANCELED\": 89,\n  \"ECHILD\": 10,\n  \"ECONNABORTED\": 53,\n  \"ECONNREFUSED\": 61,\n  \"ECONNRESET\": 54,\n  \"EDEADLK\": 11,\n  \"EDESTADDRREQ\": 39,\n  \"EDOM\": 33,\n  \"EDQUOT\": 69,\n  \"EEXIST\": 17,\n  \"EFAULT\": 14,\n  \"EFBIG\": 27,\n  \"EHOSTUNREACH\": 65,\n  \"EIDRM\": 90,\n  \"EILSEQ\": 92,\n  \"EINPROGRESS\": 36,\n  \"EINTR\": 4,\n  \"EINVAL\": 22,\n  \"EIO\": 5,\n  \"EISCONN\": 56,\n  \"EISDIR\": 21,\n  \"ELOOP\": 62,\n  \"EMFILE\": 24,\n  \"EMLINK\": 31,\n  \"EMSGSIZE\": 40,\n  \"EMULTIHOP\": 95,\n  \"ENAMETOOLONG\": 63,\n  \"ENETDOWN\": 50,\n  \"ENETRESET\": 52,\n  \"ENETUNREACH\": 51,\n  \"ENFILE\": 23,\n  \"ENOBUFS\": 55,\n  \"ENODATA\": 96,\n  \"ENODEV\": 19,\n  \"ENOENT\": 2,\n  \"ENOEXEC\": 8,\n  \"ENOLCK\": 77,\n  \"ENOLINK\": 97,\n  \"ENOMEM\": 12,\n  \"ENOMSG\": 91,\n  \"ENOPROTOOPT\": 42,\n  \"ENOSPC\": 28,\n  \"ENOSR\": 98,\n  \"ENOSTR\": 99,\n  \"ENOSYS\": 78,\n  \"ENOTCONN\": 57,\n  \"ENOTDIR\": 20,\n  \"ENOTEMPTY\": 66,\n  \"ENOTSOCK\": 38,\n  \"ENOTSUP\": 45,\n  \"ENOTTY\": 25,\n  \"ENXIO\": 6,\n  \"EOPNOTSUPP\": 102,\n  \"EOVERFLOW\": 84,\n  \"EPERM\": 1,\n  \"EPIPE\": 32,\n  \"EPROTO\": 100,\n  \"EPROTONOSUPPORT\": 43,\n  \"EPROTOTYPE\": 41,\n  \"ERANGE\": 34,\n  \"EROFS\": 30,\n  \"ESPIPE\": 29,\n  \"ESRCH\": 3,\n  \"ESTALE\": 70,\n  \"ETIME\": 101,\n  \"ETIMEDOUT\": 60,\n  \"ETXTBSY\": 26,\n  \"EWOULDBLOCK\": 35,\n  \"EXDEV\": 18,\n  \"SIGHUP\": 1,\n  \"SIGINT\": 2,\n  \"SIGQUIT\": 3,\n  \"SIGILL\": 4,\n  \"SIGTRAP\": 5,\n  \"SIGABRT\": 6,\n  \"SIGIOT\": 6,\n  \"SIGBUS\": 10,\n  \"SIGFPE\": 8,\n  \"SIGKILL\": 9,\n  \"SIGUSR1\": 30,\n  \"SIGSEGV\": 11,\n  \"SIGUSR2\": 31,\n  \"SIGPIPE\": 13,\n  \"SIGALRM\": 14,\n  \"SIGTERM\": 15,\n  \"SIGCHLD\": 20,\n  \"SIGCONT\": 19,\n  \"SIGSTOP\": 17,\n  \"SIGTSTP\": 18,\n  \"SIGTTIN\": 21,\n  \"SIGTTOU\": 22,\n  \"SIGURG\": 16,\n  \"SIGXCPU\": 24,\n  \"SIGXFSZ\": 25,\n  \"SIGVTALRM\": 26,\n  \"SIGPROF\": 27,\n  \"SIGWINCH\": 28,\n  \"SIGIO\": 23,\n  \"SIGSYS\": 12,\n  \"SSL_OP_ALL\": 2147486719,\n  \"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION\": 262144,\n  \"SSL_OP_CIPHER_SERVER_PREFERENCE\": 4194304,\n  \"SSL_OP_CISCO_ANYCONNECT\": 32768,\n  \"SSL_OP_COOKIE_EXCHANGE\": 8192,\n  \"SSL_OP_CRYPTOPRO_TLSEXT_BUG\": 2147483648,\n  \"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS\": 2048,\n  \"SSL_OP_EPHEMERAL_RSA\": 0,\n  \"SSL_OP_LEGACY_SERVER_CONNECT\": 4,\n  \"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER\": 32,\n  \"SSL_OP_MICROSOFT_SESS_ID_BUG\": 1,\n  \"SSL_OP_MSIE_SSLV2_RSA_PADDING\": 0,\n  \"SSL_OP_NETSCAPE_CA_DN_BUG\": 536870912,\n  \"SSL_OP_NETSCAPE_CHALLENGE_BUG\": 2,\n  \"SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG\": 1073741824,\n  \"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG\": 8,\n  \"SSL_OP_NO_COMPRESSION\": 131072,\n  \"SSL_OP_NO_QUERY_MTU\": 4096,\n  \"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION\": 65536,\n  \"SSL_OP_NO_SSLv2\": 16777216,\n  \"SSL_OP_NO_SSLv3\": 33554432,\n  \"SSL_OP_NO_TICKET\": 16384,\n  \"SSL_OP_NO_TLSv1\": 67108864,\n  \"SSL_OP_NO_TLSv1_1\": 268435456,\n  \"SSL_OP_NO_TLSv1_2\": 134217728,\n  \"SSL_OP_PKCS1_CHECK_1\": 0,\n  \"SSL_OP_PKCS1_CHECK_2\": 0,\n  \"SSL_OP_SINGLE_DH_USE\": 1048576,\n  \"SSL_OP_SINGLE_ECDH_USE\": 524288,\n  \"SSL_OP_SSLEAY_080_CLIENT_DH_BUG\": 128,\n  \"SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG\": 0,\n  \"SSL_OP_TLS_BLOCK_PADDING_BUG\": 512,\n  \"SSL_OP_TLS_D5_BUG\": 256,\n  \"SSL_OP_TLS_ROLLBACK_BUG\": 8388608,\n  \"ENGINE_METHOD_DSA\": 2,\n  \"ENGINE_METHOD_DH\": 4,\n  \"ENGINE_METHOD_RAND\": 8,\n  \"ENGINE_METHOD_ECDH\": 16,\n  \"ENGINE_METHOD_ECDSA\": 32,\n  \"ENGINE_METHOD_CIPHERS\": 64,\n  \"ENGINE_METHOD_DIGESTS\": 128,\n  \"ENGINE_METHOD_STORE\": 256,\n  \"ENGINE_METHOD_PKEY_METHS\": 512,\n  \"ENGINE_METHOD_PKEY_ASN1_METHS\": 1024,\n  \"ENGINE_METHOD_ALL\": 65535,\n  \"ENGINE_METHOD_NONE\": 0,\n  \"DH_CHECK_P_NOT_SAFE_PRIME\": 2,\n  \"DH_CHECK_P_NOT_PRIME\": 1,\n  \"DH_UNABLE_TO_CHECK_GENERATOR\": 4,\n  \"DH_NOT_SUITABLE_GENERATOR\": 8,\n  \"NPN_ENABLED\": 1,\n  \"RSA_PKCS1_PADDING\": 1,\n  \"RSA_SSLV23_PADDING\": 2,\n  \"RSA_NO_PADDING\": 3,\n  \"RSA_PKCS1_OAEP_PADDING\": 4,\n  \"RSA_X931_PADDING\": 5,\n  \"RSA_PKCS1_PSS_PADDING\": 6,\n  \"POINT_CONVERSION_COMPRESSED\": 2,\n  \"POINT_CONVERSION_UNCOMPRESSED\": 4,\n  \"POINT_CONVERSION_HYBRID\": 6,\n  \"F_OK\": 0,\n  \"R_OK\": 4,\n  \"W_OK\": 2,\n  \"X_OK\": 1,\n  \"UV_UDP_REUSEADDR\": 4\n}\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar _invariant = require('fbjs/lib/invariant');\n\nif (\"production\" !== 'production') {\n  var warning = require('fbjs/lib/warning');\n}\n\nvar MIXINS_KEY = 'mixins';\n\n// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn) {\n  return fn;\n}\n\nvar ReactPropTypeLocationNames;\nif (\"production\" !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n} else {\n  ReactPropTypeLocationNames = {};\n}\n\nfunction factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {\n  /**\n   * Policies that describe methods in `ReactClassInterface`.\n   */\n\n  var injectedMixins = [];\n\n  /**\n   * Composite components are higher-level components that compose other composite\n   * or host components.\n   *\n   * To create a new type of `ReactClass`, pass a specification of\n   * your new class to `React.createClass`. The only requirement of your class\n   * specification is that you implement a `render` method.\n   *\n   *   var MyComponent = React.createClass({\n   *     render: function() {\n   *       return <div>Hello World</div>;\n   *     }\n   *   });\n   *\n   * The class specification supports a specific protocol of methods that have\n   * special meaning (e.g. `render`). See `ReactClassInterface` for\n   * more the comprehensive protocol. Any other properties and methods in the\n   * class specification will be available on the prototype.\n   *\n   * @interface ReactClassInterface\n   * @internal\n   */\n  var ReactClassInterface = {\n    /**\n     * An array of Mixin objects to include when defining your component.\n     *\n     * @type {array}\n     * @optional\n     */\n    mixins: 'DEFINE_MANY',\n\n    /**\n     * An object containing properties and methods that should be defined on\n     * the component's constructor instead of its prototype (static methods).\n     *\n     * @type {object}\n     * @optional\n     */\n    statics: 'DEFINE_MANY',\n\n    /**\n     * Definition of prop types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    propTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    contextTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types this component sets for its children.\n     *\n     * @type {object}\n     * @optional\n     */\n    childContextTypes: 'DEFINE_MANY',\n\n    // ==== Definition methods ====\n\n    /**\n     * Invoked when the component is mounted. Values in the mapping will be set on\n     * `this.props` if that prop is not specified (i.e. using an `in` check).\n     *\n     * This method is invoked before `getInitialState` and therefore cannot rely\n     * on `this.state` or use `this.setState`.\n     *\n     * @return {object}\n     * @optional\n     */\n    getDefaultProps: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Invoked once before the component is mounted. The return value will be used\n     * as the initial value of `this.state`.\n     *\n     *   getInitialState: function() {\n     *     return {\n     *       isOn: false,\n     *       fooBaz: new BazFoo()\n     *     }\n     *   }\n     *\n     * @return {object}\n     * @optional\n     */\n    getInitialState: 'DEFINE_MANY_MERGED',\n\n    /**\n     * @return {object}\n     * @optional\n     */\n    getChildContext: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Uses props from `this.props` and state from `this.state` to render the\n     * structure of the component.\n     *\n     * No guarantees are made about when or how often this method is invoked, so\n     * it must not have side effects.\n     *\n     *   render: function() {\n     *     var name = this.props.name;\n     *     return <div>Hello, {name}!</div>;\n     *   }\n     *\n     * @return {ReactComponent}\n     * @required\n     */\n    render: 'DEFINE_ONCE',\n\n    // ==== Delegate methods ====\n\n    /**\n     * Invoked when the component is initially created and about to be mounted.\n     * This may have side effects, but any external subscriptions or data created\n     * by this method must be cleaned up in `componentWillUnmount`.\n     *\n     * @optional\n     */\n    componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component has been mounted and has a DOM representation.\n     * However, there is no guarantee that the DOM node is in the document.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been mounted (initialized and rendered) for the first time.\n     *\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked before the component receives new props.\n     *\n     * Use this as an opportunity to react to a prop transition by updating the\n     * state using `this.setState`. Current props are accessed via `this.props`.\n     *\n     *   componentWillReceiveProps: function(nextProps, nextContext) {\n     *     this.setState({\n     *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n     *     });\n     *   }\n     *\n     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n     * transition may cause a state change, but the opposite is not true. If you\n     * need it, you are probably looking for `componentWillUpdate`.\n     *\n     * @param {object} nextProps\n     * @optional\n     */\n    componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Invoked while deciding if the component should be updated as a result of\n     * receiving new props, state and/or context.\n     *\n     * Use this as an opportunity to `return false` when you're certain that the\n     * transition to the new props/state/context will not require a component\n     * update.\n     *\n     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n     *     return !equal(nextProps, this.props) ||\n     *       !equal(nextState, this.state) ||\n     *       !equal(nextContext, this.context);\n     *   }\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @return {boolean} True if the component should update.\n     * @optional\n     */\n    shouldComponentUpdate: 'DEFINE_ONCE',\n\n    /**\n     * Invoked when the component is about to update due to a transition from\n     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n     * and `nextContext`.\n     *\n     * Use this as an opportunity to perform preparation before an update occurs.\n     *\n     * NOTE: You **cannot** use `this.setState()` in this method.\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @param {ReactReconcileTransaction} transaction\n     * @optional\n     */\n    componentWillUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component's DOM representation has been updated.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been updated.\n     *\n     * @param {object} prevProps\n     * @param {?object} prevState\n     * @param {?object} prevContext\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component is about to be removed from its parent and have\n     * its DOM representation destroyed.\n     *\n     * Use this as an opportunity to deallocate any external resources.\n     *\n     * NOTE: There is no `componentDidUnmount` since your component will have been\n     * destroyed by that point.\n     *\n     * @optional\n     */\n    componentWillUnmount: 'DEFINE_MANY',\n\n    // ==== Advanced methods ====\n\n    /**\n     * Updates the component's currently mounted DOM representation.\n     *\n     * By default, this implements React's rendering and reconciliation algorithm.\n     * Sophisticated clients may wish to override this.\n     *\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     * @overridable\n     */\n    updateComponent: 'OVERRIDE_BASE'\n  };\n\n  /**\n   * Mapping from class specification keys to special processing functions.\n   *\n   * Although these are declared like instance properties in the specification\n   * when defining classes using `React.createClass`, they are actually static\n   * and are accessible on the constructor instead of the prototype. Despite\n   * being static, they must be defined outside of the \"statics\" key under\n   * which all other static methods are defined.\n   */\n  var RESERVED_SPEC_KEYS = {\n    displayName: function(Constructor, displayName) {\n      Constructor.displayName = displayName;\n    },\n    mixins: function(Constructor, mixins) {\n      if (mixins) {\n        for (var i = 0; i < mixins.length; i++) {\n          mixSpecIntoComponent(Constructor, mixins[i]);\n        }\n      }\n    },\n    childContextTypes: function(Constructor, childContextTypes) {\n      if (\"production\" !== 'production') {\n        validateTypeDef(Constructor, childContextTypes, 'childContext');\n      }\n      Constructor.childContextTypes = _assign(\n        {},\n        Constructor.childContextTypes,\n        childContextTypes\n      );\n    },\n    contextTypes: function(Constructor, contextTypes) {\n      if (\"production\" !== 'production') {\n        validateTypeDef(Constructor, contextTypes, 'context');\n      }\n      Constructor.contextTypes = _assign(\n        {},\n        Constructor.contextTypes,\n        contextTypes\n      );\n    },\n    /**\n     * Special case getDefaultProps which should move into statics but requires\n     * automatic merging.\n     */\n    getDefaultProps: function(Constructor, getDefaultProps) {\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps = createMergedResultFunction(\n          Constructor.getDefaultProps,\n          getDefaultProps\n        );\n      } else {\n        Constructor.getDefaultProps = getDefaultProps;\n      }\n    },\n    propTypes: function(Constructor, propTypes) {\n      if (\"production\" !== 'production') {\n        validateTypeDef(Constructor, propTypes, 'prop');\n      }\n      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n    },\n    statics: function(Constructor, statics) {\n      mixStaticSpecIntoComponent(Constructor, statics);\n    },\n    autobind: function() {}\n  };\n\n  function validateTypeDef(Constructor, typeDef, location) {\n    for (var propName in typeDef) {\n      if (typeDef.hasOwnProperty(propName)) {\n        // use a warning instead of an _invariant so components\n        // don't show up in prod but only in __DEV__\n        if (\"production\" !== 'production') {\n          warning(\n            typeof typeDef[propName] === 'function',\n            '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n              'React.PropTypes.',\n            Constructor.displayName || 'ReactClass',\n            ReactPropTypeLocationNames[location],\n            propName\n          );\n        }\n      }\n    }\n  }\n\n  function validateMethodOverride(isAlreadyDefined, name) {\n    var specPolicy = ReactClassInterface.hasOwnProperty(name)\n      ? ReactClassInterface[name]\n      : null;\n\n    // Disallow overriding of base class methods unless explicitly allowed.\n    if (ReactClassMixin.hasOwnProperty(name)) {\n      _invariant(\n        specPolicy === 'OVERRIDE_BASE',\n        'ReactClassInterface: You are attempting to override ' +\n          '`%s` from your class specification. Ensure that your method names ' +\n          'do not overlap with React methods.',\n        name\n      );\n    }\n\n    // Disallow defining methods more than once unless explicitly allowed.\n    if (isAlreadyDefined) {\n      _invariant(\n        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',\n        'ReactClassInterface: You are attempting to define ' +\n          '`%s` on your component more than once. This conflict may be due ' +\n          'to a mixin.',\n        name\n      );\n    }\n  }\n\n  /**\n   * Mixin helper which handles policy validation and reserved\n   * specification keys when building React classes.\n   */\n  function mixSpecIntoComponent(Constructor, spec) {\n    if (!spec) {\n      if (\"production\" !== 'production') {\n        var typeofSpec = typeof spec;\n        var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n        if (\"production\" !== 'production') {\n          warning(\n            isMixinValid,\n            \"%s: You're attempting to include a mixin that is either null \" +\n              'or not an object. Check the mixins included by the component, ' +\n              'as well as any mixins they include themselves. ' +\n              'Expected object but got %s.',\n            Constructor.displayName || 'ReactClass',\n            spec === null ? null : typeofSpec\n          );\n        }\n      }\n\n      return;\n    }\n\n    _invariant(\n      typeof spec !== 'function',\n      \"ReactClass: You're attempting to \" +\n        'use a component class or function as a mixin. Instead, just use a ' +\n        'regular object.'\n    );\n    _invariant(\n      !isValidElement(spec),\n      \"ReactClass: You're attempting to \" +\n        'use a component as a mixin. Instead, just use a regular object.'\n    );\n\n    var proto = Constructor.prototype;\n    var autoBindPairs = proto.__reactAutoBindPairs;\n\n    // By handling mixins before any other properties, we ensure the same\n    // chaining order is applied to methods with DEFINE_MANY policy, whether\n    // mixins are listed before or after these methods in the spec.\n    if (spec.hasOwnProperty(MIXINS_KEY)) {\n      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n    }\n\n    for (var name in spec) {\n      if (!spec.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (name === MIXINS_KEY) {\n        // We have already handled mixins in a special case above.\n        continue;\n      }\n\n      var property = spec[name];\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      validateMethodOverride(isAlreadyDefined, name);\n\n      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n        RESERVED_SPEC_KEYS[name](Constructor, property);\n      } else {\n        // Setup methods on prototype:\n        // The following member methods should not be automatically bound:\n        // 1. Expected ReactClass methods (in the \"interface\").\n        // 2. Overridden methods (that were mixed in).\n        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n        var isFunction = typeof property === 'function';\n        var shouldAutoBind =\n          isFunction &&\n          !isReactClassMethod &&\n          !isAlreadyDefined &&\n          spec.autobind !== false;\n\n        if (shouldAutoBind) {\n          autoBindPairs.push(name, property);\n          proto[name] = property;\n        } else {\n          if (isAlreadyDefined) {\n            var specPolicy = ReactClassInterface[name];\n\n            // These cases should already be caught by validateMethodOverride.\n            _invariant(\n              isReactClassMethod &&\n                (specPolicy === 'DEFINE_MANY_MERGED' ||\n                  specPolicy === 'DEFINE_MANY'),\n              'ReactClass: Unexpected spec policy %s for key %s ' +\n                'when mixing in component specs.',\n              specPolicy,\n              name\n            );\n\n            // For methods which are defined more than once, call the existing\n            // methods before calling the new property, merging if appropriate.\n            if (specPolicy === 'DEFINE_MANY_MERGED') {\n              proto[name] = createMergedResultFunction(proto[name], property);\n            } else if (specPolicy === 'DEFINE_MANY') {\n              proto[name] = createChainedFunction(proto[name], property);\n            }\n          } else {\n            proto[name] = property;\n            if (\"production\" !== 'production') {\n              // Add verbose displayName to the function, which helps when looking\n              // at profiling tools.\n              if (typeof property === 'function' && spec.displayName) {\n                proto[name].displayName = spec.displayName + '_' + name;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function mixStaticSpecIntoComponent(Constructor, statics) {\n    if (!statics) {\n      return;\n    }\n    for (var name in statics) {\n      var property = statics[name];\n      if (!statics.hasOwnProperty(name)) {\n        continue;\n      }\n\n      var isReserved = name in RESERVED_SPEC_KEYS;\n      _invariant(\n        !isReserved,\n        'ReactClass: You are attempting to define a reserved ' +\n          'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n          'as an instance property instead; it will still be accessible on the ' +\n          'constructor.',\n        name\n      );\n\n      var isInherited = name in Constructor;\n      _invariant(\n        !isInherited,\n        'ReactClass: You are attempting to define ' +\n          '`%s` on your component more than once. This conflict may be ' +\n          'due to a mixin.',\n        name\n      );\n      Constructor[name] = property;\n    }\n  }\n\n  /**\n   * Merge two objects, but throw if both contain the same key.\n   *\n   * @param {object} one The first object, which is mutated.\n   * @param {object} two The second object\n   * @return {object} one after it has been mutated to contain everything in two.\n   */\n  function mergeIntoWithNoDuplicateKeys(one, two) {\n    _invariant(\n      one && two && typeof one === 'object' && typeof two === 'object',\n      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n    );\n\n    for (var key in two) {\n      if (two.hasOwnProperty(key)) {\n        _invariant(\n          one[key] === undefined,\n          'mergeIntoWithNoDuplicateKeys(): ' +\n            'Tried to merge two objects with the same key: `%s`. This conflict ' +\n            'may be due to a mixin; in particular, this may be caused by two ' +\n            'getInitialState() or getDefaultProps() methods returning objects ' +\n            'with clashing keys.',\n          key\n        );\n        one[key] = two[key];\n      }\n    }\n    return one;\n  }\n\n  /**\n   * Creates a function that invokes two functions and merges their return values.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createMergedResultFunction(one, two) {\n    return function mergedResult() {\n      var a = one.apply(this, arguments);\n      var b = two.apply(this, arguments);\n      if (a == null) {\n        return b;\n      } else if (b == null) {\n        return a;\n      }\n      var c = {};\n      mergeIntoWithNoDuplicateKeys(c, a);\n      mergeIntoWithNoDuplicateKeys(c, b);\n      return c;\n    };\n  }\n\n  /**\n   * Creates a function that invokes two functions and ignores their return vales.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createChainedFunction(one, two) {\n    return function chainedFunction() {\n      one.apply(this, arguments);\n      two.apply(this, arguments);\n    };\n  }\n\n  /**\n   * Binds a method to the component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   * @param {function} method Method to be bound.\n   * @return {function} The bound method.\n   */\n  function bindAutoBindMethod(component, method) {\n    var boundMethod = method.bind(component);\n    if (\"production\" !== 'production') {\n      boundMethod.__reactBoundContext = component;\n      boundMethod.__reactBoundMethod = method;\n      boundMethod.__reactBoundArguments = null;\n      var componentName = component.constructor.displayName;\n      var _bind = boundMethod.bind;\n      boundMethod.bind = function(newThis) {\n        for (\n          var _len = arguments.length,\n            args = Array(_len > 1 ? _len - 1 : 0),\n            _key = 1;\n          _key < _len;\n          _key++\n        ) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        // User is trying to bind() an autobound method; we effectively will\n        // ignore the value of \"this\" that the user is trying to use, so\n        // let's warn.\n        if (newThis !== component && newThis !== null) {\n          if (\"production\" !== 'production') {\n            warning(\n              false,\n              'bind(): React component methods may only be bound to the ' +\n                'component instance. See %s',\n              componentName\n            );\n          }\n        } else if (!args.length) {\n          if (\"production\" !== 'production') {\n            warning(\n              false,\n              'bind(): You are binding a component method to the component. ' +\n                'React does this for you automatically in a high-performance ' +\n                'way, so you can safely remove this call. See %s',\n              componentName\n            );\n          }\n          return boundMethod;\n        }\n        var reboundMethod = _bind.apply(boundMethod, arguments);\n        reboundMethod.__reactBoundContext = component;\n        reboundMethod.__reactBoundMethod = method;\n        reboundMethod.__reactBoundArguments = args;\n        return reboundMethod;\n      };\n    }\n    return boundMethod;\n  }\n\n  /**\n   * Binds all auto-bound methods in a component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   */\n  function bindAutoBindMethods(component) {\n    var pairs = component.__reactAutoBindPairs;\n    for (var i = 0; i < pairs.length; i += 2) {\n      var autoBindKey = pairs[i];\n      var method = pairs[i + 1];\n      component[autoBindKey] = bindAutoBindMethod(component, method);\n    }\n  }\n\n  var IsMountedPreMixin = {\n    componentDidMount: function() {\n      this.__isMounted = true;\n    }\n  };\n\n  var IsMountedPostMixin = {\n    componentWillUnmount: function() {\n      this.__isMounted = false;\n    }\n  };\n\n  /**\n   * Add more to the ReactClass base class. These are all legacy features and\n   * therefore not already part of the modern ReactComponent.\n   */\n  var ReactClassMixin = {\n    /**\n     * TODO: This will be deprecated because state should always keep a consistent\n     * type signature and the only use case for this, is to avoid that.\n     */\n    replaceState: function(newState, callback) {\n      this.updater.enqueueReplaceState(this, newState, callback);\n    },\n\n    /**\n     * Checks whether or not this composite component is mounted.\n     * @return {boolean} True if mounted, false otherwise.\n     * @protected\n     * @final\n     */\n    isMounted: function() {\n      if (\"production\" !== 'production') {\n        warning(\n          this.__didWarnIsMounted,\n          '%s: isMounted is deprecated. Instead, make sure to clean up ' +\n            'subscriptions and pending requests in componentWillUnmount to ' +\n            'prevent memory leaks.',\n          (this.constructor && this.constructor.displayName) ||\n            this.name ||\n            'Component'\n        );\n        this.__didWarnIsMounted = true;\n      }\n      return !!this.__isMounted;\n    }\n  };\n\n  var ReactClassComponent = function() {};\n  _assign(\n    ReactClassComponent.prototype,\n    ReactComponent.prototype,\n    ReactClassMixin\n  );\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  function createClass(spec) {\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function(props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (\"production\" !== 'production') {\n        warning(\n          this instanceof Constructor,\n          'Something is calling a React component directly. Use a factory or ' +\n            'JSX instead. See: https://fb.me/react-legacyfactory'\n        );\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (\"production\" !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (\n          initialState === undefined &&\n          this.getInitialState._isMockFunction\n        ) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      _invariant(\n        typeof initialState === 'object' && !Array.isArray(initialState),\n        '%s.getInitialState(): must return an object or null',\n        Constructor.displayName || 'ReactCompositeComponent'\n      );\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, IsMountedPreMixin);\n    mixSpecIntoComponent(Constructor, spec);\n    mixSpecIntoComponent(Constructor, IsMountedPostMixin);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (\"production\" !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    _invariant(\n      Constructor.prototype.render,\n      'createClass(...): Class specification must implement a `render` method.'\n    );\n\n    if (\"production\" !== 'production') {\n      warning(\n        !Constructor.prototype.componentShouldUpdate,\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        spec.displayName || 'A component'\n      );\n      warning(\n        !Constructor.prototype.componentWillRecieveProps,\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        spec.displayName || 'A component'\n      );\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  }\n\n  return createClass;\n}\n\nmodule.exports = factory;\n","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @typechecks\n */\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (\"production\" !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function registerDefault() {}\n};\n\nmodule.exports = EventListener;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function (_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar camelize = require('./camelize');\n\nvar msPattern = /^-ms-/;\n\n/**\n * Camelcases a hyphenated CSS property name, for example:\n *\n *   > camelizeStyleName('background-color')\n *   < \"backgroundColor\"\n *   > camelizeStyleName('-moz-transition')\n *   < \"MozTransition\"\n *   > camelizeStyleName('-ms-transition')\n *   < \"msTransition\"\n *\n * As Andi Smith suggests\n * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n * is converted to lowercase `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelizeStyleName(string) {\n  return camelize(string.replace(msPattern, 'ms-'));\n}\n\nmodule.exports = camelizeStyleName;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar invariant = require('./invariant');\n\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\nfunction toArray(obj) {\n  var length = obj.length;\n\n  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList\n  // in old versions of Safari).\n  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? \"production\" !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;\n\n  !(typeof length === 'number') ? \"production\" !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;\n\n  !(length === 0 || length - 1 in obj) ? \"production\" !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;\n\n  !(typeof obj.callee !== 'function') ? \"production\" !== 'production' ? invariant(false, 'toArray: Object can\\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;\n\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {\n      // IE < 9 does not support Array#slice on collections objects\n    }\n  }\n\n  // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n  var ret = Array(length);\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n  return ret;\n}\n\n/**\n * Perform a heuristic test to determine if an object is \"array-like\".\n *\n *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n *   Joshu replied: \"Mu.\"\n *\n * This function determines if its argument has \"array nature\": it returns\n * true if the argument is an actual array, an `arguments' object, or an\n * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n *\n * It will return false for other array-like objects like Filelist.\n *\n * @param {*} obj\n * @return {boolean}\n */\nfunction hasArrayNature(obj) {\n  return (\n    // not null/false\n    !!obj && (\n    // arrays are objects, NodeLists are functions in Safari\n    typeof obj == 'object' || typeof obj == 'function') &&\n    // quacks like an array\n    'length' in obj &&\n    // not window\n    !('setInterval' in obj) &&\n    // no DOM node should be considered an array-like\n    // a 'select' element has 'length' and 'item' properties on IE8\n    typeof obj.nodeType != 'number' && (\n    // a real array\n    Array.isArray(obj) ||\n    // arguments\n    'callee' in obj ||\n    // HTMLCollection/NodeList\n    'item' in obj)\n  );\n}\n\n/**\n * Ensure that the argument is an array by wrapping it in an array if it is not.\n * Creates a copy of the argument if it is already an array.\n *\n * This is mostly useful idiomatically:\n *\n *   var createArrayFromMixed = require('createArrayFromMixed');\n *\n *   function takesOneOrMoreThings(things) {\n *     things = createArrayFromMixed(things);\n *     ...\n *   }\n *\n * This allows you to treat `things' as an array, but accept scalars in the API.\n *\n * If you need to convert an array-like object, like `arguments`, into an array\n * use toArray instead.\n *\n * @param {*} obj\n * @return {array}\n */\nfunction createArrayFromMixed(obj) {\n  if (!hasArrayNature(obj)) {\n    return [obj];\n  } else if (Array.isArray(obj)) {\n    return obj.slice();\n  } else {\n    return toArray(obj);\n  }\n}\n\nmodule.exports = createArrayFromMixed;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/*eslint-disable fb-www/unsafe-html*/\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar createArrayFromMixed = require('./createArrayFromMixed');\nvar getMarkupWrap = require('./getMarkupWrap');\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to render all markup.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Pattern used by `getNodeName`.\n */\nvar nodeNamePattern = /^\\s*<(\\w+)/;\n\n/**\n * Extracts the `nodeName` of the first element in a string of markup.\n *\n * @param {string} markup String of markup.\n * @return {?string} Node name of the supplied markup.\n */\nfunction getNodeName(markup) {\n  var nodeNameMatch = markup.match(nodeNamePattern);\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n}\n\n/**\n * Creates an array containing the nodes rendered from the supplied markup. The\n * optionally supplied `handleScript` function will be invoked once for each\n * <script> element that is rendered. If no `handleScript` function is supplied,\n * an exception is thrown if any <script> elements are rendered.\n *\n * @param {string} markup A string of valid HTML markup.\n * @param {?function} handleScript Invoked once for each rendered <script>.\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n */\nfunction createNodesFromMarkup(markup, handleScript) {\n  var node = dummyNode;\n  !!!dummyNode ? \"production\" !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;\n  var nodeName = getNodeName(markup);\n\n  var wrap = nodeName && getMarkupWrap(nodeName);\n  if (wrap) {\n    node.innerHTML = wrap[1] + markup + wrap[2];\n\n    var wrapDepth = wrap[0];\n    while (wrapDepth--) {\n      node = node.lastChild;\n    }\n  } else {\n    node.innerHTML = markup;\n  }\n\n  var scripts = node.getElementsByTagName('script');\n  if (scripts.length) {\n    !handleScript ? \"production\" !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;\n    createArrayFromMixed(scripts).forEach(handleScript);\n  }\n\n  var nodes = Array.from(node.childNodes);\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return nodes;\n}\n\nmodule.exports = createNodesFromMarkup;","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (\"production\" !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\n\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch (e) {}\n}\n\nmodule.exports = focusNode;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/*eslint-disable fb-www/unsafe-html */\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\n\nvar shouldWrap = {};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap\n};\n\n// Initialize the SVG elements since we know they'll always need to be wrapped\n// consistently. If they are created inside a <div> they will be initialized in\n// the wrong namespace (and will not display).\nvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\nsvgElements.forEach(function (nodeName) {\n  markupWrap[nodeName] = svgWrap;\n  shouldWrap[nodeName] = true;\n});\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  !!!dummyNode ? \"production\" !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\nmodule.exports = getMarkupWrap;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\n\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable.Window && scrollable instanceof scrollable.Window) {\n    return {\n      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,\n      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar hyphenate = require('./hyphenate');\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (\"production\" !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n */\n\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar performance;\n\nif (ExecutionEnvironment.canUseDOM) {\n  performance = window.performance || window.msPerformance || window.webkitPerformance;\n}\n\nmodule.exports = performance || {};","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar performance = require('./performance');\n\nvar performanceNow;\n\n/**\n * Detect if we can use `window.performance.now()` and gracefully fallback to\n * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now\n * because of Facebook's testing infrastructure.\n */\nif (performance.now) {\n  performanceNow = function performanceNow() {\n    return performance.now();\n  };\n} else {\n  performanceNow = function performanceNow() {\n    return Date.now();\n  };\n}\n\nmodule.exports = performanceNow;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (\"production\" !== 'production') {\n  (function () {\n    var printWarning = function printWarning(format) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    };\n\n    warning = function warning(condition, format) {\n      if (format === undefined) {\n        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n      }\n\n      if (format.indexOf('Failed Composite propType: ') === 0) {\n        return; // Ignore CompositeComponent proptype check.\n      }\n\n      if (!condition) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        printWarning.apply(undefined, [format].concat(args));\n      }\n    };\n  })();\n}\n\nmodule.exports = warning;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nif (\"production\" !== 'production') {\n  var invariant = require('fbjs/lib/invariant');\n  var warning = require('fbjs/lib/warning');\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (\"production\" !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n// React 15.5 references this module, and assumes PropTypes are still callable in production.\n// Therefore we re-export development-only version with all the PropTypes checks here.\n// However if one is migrating to the `prop-types` npm library, they will go through the\n// `index.js` entry point, and it will branch depending on the environment.\nvar factory = require('./factoryWithTypeCheckers');\nmodule.exports = function(isValidElement) {\n  // It is still allowed in 15.5.\n  var throwOnDirectAccess = false;\n  return factory(isValidElement, throwOnDirectAccess);\n};\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (\"production\" !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          invariant(\n            false,\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n        } else if (\"production\" !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            warning(\n              false,\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `%s` prop on `%s`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n              propFullName,\n              componentName\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      \"production\" !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      \"production\" !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        warning(\n          false,\n          'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' +\n          'received %s at index %s.',\n          getPostfixForTypeWarning(checker),\n          i\n        );\n        return emptyFunction.thatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ARIADOMPropertyConfig = {\n  Properties: {\n    // Global States and Properties\n    'aria-current': 0, // state\n    'aria-details': 0,\n    'aria-disabled': 0, // state\n    'aria-hidden': 0, // state\n    'aria-invalid': 0, // state\n    'aria-keyshortcuts': 0,\n    'aria-label': 0,\n    'aria-roledescription': 0,\n    // Widget Attributes\n    'aria-autocomplete': 0,\n    'aria-checked': 0,\n    'aria-expanded': 0,\n    'aria-haspopup': 0,\n    'aria-level': 0,\n    'aria-modal': 0,\n    'aria-multiline': 0,\n    'aria-multiselectable': 0,\n    'aria-orientation': 0,\n    'aria-placeholder': 0,\n    'aria-pressed': 0,\n    'aria-readonly': 0,\n    'aria-required': 0,\n    'aria-selected': 0,\n    'aria-sort': 0,\n    'aria-valuemax': 0,\n    'aria-valuemin': 0,\n    'aria-valuenow': 0,\n    'aria-valuetext': 0,\n    // Live Region Attributes\n    'aria-atomic': 0,\n    'aria-busy': 0,\n    'aria-live': 0,\n    'aria-relevant': 0,\n    // Drag-and-Drop Attributes\n    'aria-dropeffect': 0,\n    'aria-grabbed': 0,\n    // Relationship Attributes\n    'aria-activedescendant': 0,\n    'aria-colcount': 0,\n    'aria-colindex': 0,\n    'aria-colspan': 0,\n    'aria-controls': 0,\n    'aria-describedby': 0,\n    'aria-errormessage': 0,\n    'aria-flowto': 0,\n    'aria-labelledby': 0,\n    'aria-owns': 0,\n    'aria-posinset': 0,\n    'aria-rowcount': 0,\n    'aria-rowindex': 0,\n    'aria-rowspan': 0,\n    'aria-setsize': 0\n  },\n  DOMAttributeNames: {},\n  DOMPropertyNames: {}\n};\n\nmodule.exports = ARIADOMPropertyConfig;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar focusNode = require('fbjs/lib/focusNode');\n\nvar AutoFocusUtils = {\n  focusDOMComponent: function () {\n    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));\n  }\n};\n\nmodule.exports = AutoFocusUtils;","/**\n * Copyright 2013-present Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar FallbackCompositionState = require('./FallbackCompositionState');\nvar SyntheticCompositionEvent = require('./SyntheticCompositionEvent');\nvar SyntheticInputEvent = require('./SyntheticInputEvent');\n\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nvar START_KEYCODE = 229;\n\nvar canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;\n\nvar documentMode = null;\nif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nvar canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nvar useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\n\n/**\n * Opera <= 12 includes TextEvent in window, but does not fire\n * text input events. Rely on keypress instead.\n */\nfunction isPresto() {\n  var opera = window.opera;\n  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;\n}\n\nvar SPACEBAR_CODE = 32;\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\n// Events and their corresponding property names.\nvar eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: 'onBeforeInput',\n      captured: 'onBeforeInputCapture'\n    },\n    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionEnd',\n      captured: 'onCompositionEndCapture'\n    },\n    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionStart',\n      captured: 'onCompositionStartCapture'\n    },\n    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionUpdate',\n      captured: 'onCompositionUpdateCapture'\n    },\n    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n  }\n};\n\n// Track whether we've ever handled a keypress on the space key.\nvar hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n}\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case 'topCompositionStart':\n      return eventTypes.compositionStart;\n    case 'topCompositionEnd':\n      return eventTypes.compositionEnd;\n    case 'topCompositionUpdate':\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case 'topKeyUp':\n      // Command keys insert or clear IME input.\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n    case 'topKeyDown':\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return nativeEvent.keyCode !== START_KEYCODE;\n    case 'topKeyPress':\n    case 'topMouseDown':\n    case 'topBlur':\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  var detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n// Track the current IME composition fallback object, if any.\nvar currentComposition = null;\n\n/**\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var eventType;\n  var fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!currentComposition) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!currentComposition && eventType === eventTypes.compositionStart) {\n      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (currentComposition) {\n        fallbackData = currentComposition.getData();\n      }\n    }\n  }\n\n  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    var customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case 'topCompositionEnd':\n      return getDataFromCustomEvent(nativeEvent);\n    case 'topKeyPress':\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      var which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case 'topTextInput':\n      // Record the characters to be added to the DOM.\n      var chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to blacklist it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  // If composition event is available, we extract a string only at\n  // compositionevent, otherwise extract it at fallback events.\n  if (currentComposition) {\n    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n      var chars = currentComposition.getData();\n      FallbackCompositionState.release(currentComposition);\n      currentComposition = null;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case 'topPaste':\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case 'topKeyPress':\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n        return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case 'topCompositionEnd':\n      return useFallbackCompositionData ? null : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);\n\n  event.data = chars;\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nvar BeforeInputEventPlugin = {\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];\n  }\n};\n\nmodule.exports = BeforeInputEventPlugin;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\n\nvar isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Most style properties can be unset by doing .style[prop] = '' but IE8\n * doesn't like doing that with shorthand properties so for the properties that\n * IE8 breaks on, which are listed here, we instead unset each of the\n * individual properties. See http://bugs.jquery.com/ticket/12385.\n * The 4-value 'clock' properties like margin, padding, border-width seem to\n * behave without any problems. Curiously, list-style works too without any\n * special prodding.\n */\nvar shorthandPropertyExpansions = {\n  background: {\n    backgroundAttachment: true,\n    backgroundColor: true,\n    backgroundImage: true,\n    backgroundPositionX: true,\n    backgroundPositionY: true,\n    backgroundRepeat: true\n  },\n  backgroundPosition: {\n    backgroundPositionX: true,\n    backgroundPositionY: true\n  },\n  border: {\n    borderWidth: true,\n    borderStyle: true,\n    borderColor: true\n  },\n  borderBottom: {\n    borderBottomWidth: true,\n    borderBottomStyle: true,\n    borderBottomColor: true\n  },\n  borderLeft: {\n    borderLeftWidth: true,\n    borderLeftStyle: true,\n    borderLeftColor: true\n  },\n  borderRight: {\n    borderRightWidth: true,\n    borderRightStyle: true,\n    borderRightColor: true\n  },\n  borderTop: {\n    borderTopWidth: true,\n    borderTopStyle: true,\n    borderTopColor: true\n  },\n  font: {\n    fontStyle: true,\n    fontVariant: true,\n    fontWeight: true,\n    fontSize: true,\n    lineHeight: true,\n    fontFamily: true\n  },\n  outline: {\n    outlineWidth: true,\n    outlineStyle: true,\n    outlineColor: true\n  }\n};\n\nvar CSSProperty = {\n  isUnitlessNumber: isUnitlessNumber,\n  shorthandPropertyExpansions: shorthandPropertyExpansions\n};\n\nmodule.exports = CSSProperty;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar camelizeStyleName = require('fbjs/lib/camelizeStyleName');\nvar dangerousStyleValue = require('./dangerousStyleValue');\nvar hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');\nvar memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');\nvar warning = require('fbjs/lib/warning');\n\nvar processStyleName = memoizeStringOnly(function (styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar hasShorthandPropertyBug = false;\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  var tempStyle = document.createElement('div').style;\n  try {\n    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n    tempStyle.font = '';\n  } catch (e) {\n    hasShorthandPropertyBug = true;\n  }\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (\"production\" !== 'production') {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n  var warnedForNaNValue = false;\n\n  var warnHyphenatedStyleName = function (name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    \"production\" !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;\n  };\n\n  var warnBadVendoredStyleName = function (name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    \"production\" !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value, owner) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    \"production\" !== 'production' ? warning(false, \"Style property values shouldn't contain a semicolon.%s \" + 'Try \"%s: %s\" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;\n  };\n\n  var warnStyleValueIsNaN = function (name, value, owner) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n    \"production\" !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;\n  };\n\n  var checkRenderMessage = function (owner) {\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' Check the render method of `' + name + '`.';\n      }\n    }\n    return '';\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   * @param {ReactDOMComponent} component\n   */\n  var warnValidStyle = function (name, value, component) {\n    var owner;\n    if (component) {\n      owner = component._currentElement._owner;\n    }\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name, owner);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name, owner);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value, owner);\n    }\n\n    if (typeof value === 'number' && isNaN(value)) {\n      warnStyleValueIsNaN(name, value, owner);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   * @return {?string}\n   */\n  createMarkupForStyles: function (styles, component) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var isCustomProperty = styleName.indexOf('--') === 0;\n      var styleValue = styles[styleName];\n      if (\"production\" !== 'production') {\n        if (!isCustomProperty) {\n          warnValidStyle(styleName, styleValue, component);\n        }\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue, component, isCustomProperty) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   */\n  setValueForStyles: function (node, styles, component) {\n    if (\"production\" !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: component._debugID,\n        type: 'update styles',\n        payload: styles\n      });\n    }\n\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var isCustomProperty = styleName.indexOf('--') === 0;\n      if (\"production\" !== 'production') {\n        if (!isCustomProperty) {\n          warnValidStyle(styleName, styles[styleName], component);\n        }\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName], component, isCustomProperty);\n      if (styleName === 'float' || styleName === 'cssFloat') {\n        styleName = styleFloatAccessor;\n      }\n      if (isCustomProperty) {\n        style.setProperty(styleName, styleValue);\n      } else if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n};\n\nmodule.exports = CSSPropertyOperations;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PooledClass = require('./PooledClass');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `CallbackQueue.getPooled()`.\n *\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\n\nvar CallbackQueue = function () {\n  function CallbackQueue(arg) {\n    _classCallCheck(this, CallbackQueue);\n\n    this._callbacks = null;\n    this._contexts = null;\n    this._arg = arg;\n  }\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n   *\n   * @param {function} callback Invoked when `notifyAll` is invoked.\n   * @param {?object} context Context to call `callback` with.\n   * @internal\n   */\n\n\n  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._callbacks.push(callback);\n    this._contexts = this._contexts || [];\n    this._contexts.push(context);\n  };\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n\n\n  CallbackQueue.prototype.notifyAll = function notifyAll() {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    var arg = this._arg;\n    if (callbacks && contexts) {\n      !(callbacks.length === contexts.length) ? \"production\" !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0; i < callbacks.length; i++) {\n        callbacks[i].call(contexts[i], arg);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  };\n\n  CallbackQueue.prototype.checkpoint = function checkpoint() {\n    return this._callbacks ? this._callbacks.length : 0;\n  };\n\n  CallbackQueue.prototype.rollback = function rollback(len) {\n    if (this._callbacks && this._contexts) {\n      this._callbacks.length = len;\n      this._contexts.length = len;\n    }\n  };\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n\n\n  CallbackQueue.prototype.reset = function reset() {\n    this._callbacks = null;\n    this._contexts = null;\n  };\n\n  /**\n   * `PooledClass` looks for this.\n   */\n\n\n  CallbackQueue.prototype.destructor = function destructor() {\n    this.reset();\n  };\n\n  return CallbackQueue;\n}();\n\nmodule.exports = PooledClass.addPoolingTo(CallbackQueue);","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar inputValueTracking = require('./inputValueTracking');\nvar getEventTarget = require('./getEventTarget');\nvar isEventSupported = require('./isEventSupported');\nvar isTextInputElement = require('./isTextInputElement');\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: 'onChange',\n      captured: 'onChangeCapture'\n    },\n    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']\n  }\n};\n\nfunction createAndAccumulateChangeEvent(inst, nativeEvent, target) {\n  var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, target);\n  event.type = 'change';\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementInst = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue(false);\n}\n\nfunction startWatchingForChangeEventIE8(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementInst = null;\n}\n\nfunction getInstIfValueChanged(targetInst, nativeEvent) {\n  var updated = inputValueTracking.updateValueIfChanged(targetInst);\n  var simulated = nativeEvent.simulated === true && ChangeEventPlugin._allowSimulatedPassThrough;\n\n  if (updated || simulated) {\n    return targetInst;\n  }\n}\n\nfunction getTargetInstForChangeEvent(topLevelType, targetInst) {\n  if (topLevelType === 'topChange') {\n    return targetInst;\n  }\n}\n\nfunction handleEventsForChangeEventIE8(topLevelType, target, targetInst) {\n  if (topLevelType === 'topFocus') {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(target, targetInst);\n  } else if (topLevelType === 'topBlur') {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events.\n\n  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);\n}\n\n/**\n * (For IE <=9) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\n}\n\n/**\n * (For IE <=9) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\n\n  activeElement = null;\n  activeElementInst = null;\n}\n\n/**\n * (For IE <=9) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  if (getInstIfValueChanged(activeElementInst, nativeEvent)) {\n    manualDispatchChangeEvent(nativeEvent);\n  }\n}\n\nfunction handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {\n  if (topLevelType === 'topFocus') {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(target, targetInst);\n  } else if (topLevelType === 'topBlur') {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetInstForInputEventPolyfill(topLevelType, targetInst, nativeEvent) {\n  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    return getInstIfValueChanged(activeElementInst, nativeEvent);\n  }\n}\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  var nodeName = elem.nodeName;\n  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n}\n\nfunction getTargetInstForClickEvent(topLevelType, targetInst, nativeEvent) {\n  if (topLevelType === 'topClick') {\n    return getInstIfValueChanged(targetInst, nativeEvent);\n  }\n}\n\nfunction getTargetInstForInputOrChangeEvent(topLevelType, targetInst, nativeEvent) {\n  if (topLevelType === 'topInput' || topLevelType === 'topChange') {\n    return getInstIfValueChanged(targetInst, nativeEvent);\n  }\n}\n\nfunction handleControlledInputBlur(inst, node) {\n  // TODO: In IE, inst is occasionally null. Why?\n  if (inst == null) {\n    return;\n  }\n\n  // Fiber and ReactDOM keep wrapper state in separate places\n  var state = inst._wrapperState || node._wrapperState;\n\n  if (!state || !state.controlled || node.type !== 'number') {\n    return;\n  }\n\n  // If controlled, assign the value attribute to the current value on blur\n  var value = '' + node.value;\n  if (node.getAttribute('value') !== value) {\n    node.setAttribute('value', value);\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n  eventTypes: eventTypes,\n\n  _allowSimulatedPassThrough: true,\n  _isInputEventSupported: isInputEventSupported,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    var getTargetInstFunc, handleEventFunc;\n    if (shouldUseChangeEvent(targetNode)) {\n      if (doesChangeEventBubble) {\n        getTargetInstFunc = getTargetInstForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(targetNode)) {\n      if (isInputEventSupported) {\n        getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n      } else {\n        getTargetInstFunc = getTargetInstForInputEventPolyfill;\n        handleEventFunc = handleEventsForInputEventPolyfill;\n      }\n    } else if (shouldUseClickEvent(targetNode)) {\n      getTargetInstFunc = getTargetInstForClickEvent;\n    }\n\n    if (getTargetInstFunc) {\n      var inst = getTargetInstFunc(topLevelType, targetInst, nativeEvent);\n      if (inst) {\n        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(topLevelType, targetNode, targetInst);\n    }\n\n    // When blurring, set the value attribute for number inputs\n    if (topLevelType === 'topBlur') {\n      handleControlledInputBlur(targetInst, targetNode);\n    }\n  }\n};\n\nmodule.exports = ChangeEventPlugin;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar Danger = require('./Danger');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\nvar setInnerHTML = require('./setInnerHTML');\nvar setTextContent = require('./setTextContent');\n\nfunction getNodeAfter(parentNode, node) {\n  // Special case for text components, which return [open, close] comments\n  // from getHostNode.\n  if (Array.isArray(node)) {\n    node = node[1];\n  }\n  return node ? node.nextSibling : parentNode.firstChild;\n}\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nvar insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {\n  // We rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so\n  // we are careful to use `null`.)\n  parentNode.insertBefore(childNode, referenceNode);\n});\n\nfunction insertLazyTreeChildAt(parentNode, childTree, referenceNode) {\n  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);\n}\n\nfunction moveChild(parentNode, childNode, referenceNode) {\n  if (Array.isArray(childNode)) {\n    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);\n  } else {\n    insertChildAt(parentNode, childNode, referenceNode);\n  }\n}\n\nfunction removeChild(parentNode, childNode) {\n  if (Array.isArray(childNode)) {\n    var closingComment = childNode[1];\n    childNode = childNode[0];\n    removeDelimitedText(parentNode, childNode, closingComment);\n    parentNode.removeChild(closingComment);\n  }\n  parentNode.removeChild(childNode);\n}\n\nfunction moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {\n  var node = openingComment;\n  while (true) {\n    var nextNode = node.nextSibling;\n    insertChildAt(parentNode, node, referenceNode);\n    if (node === closingComment) {\n      break;\n    }\n    node = nextNode;\n  }\n}\n\nfunction removeDelimitedText(parentNode, startNode, closingComment) {\n  while (true) {\n    var node = startNode.nextSibling;\n    if (node === closingComment) {\n      // The closing comment is removed by ReactMultiChild.\n      break;\n    } else {\n      parentNode.removeChild(node);\n    }\n  }\n}\n\nfunction replaceDelimitedText(openingComment, closingComment, stringText) {\n  var parentNode = openingComment.parentNode;\n  var nodeAfterComment = openingComment.nextSibling;\n  if (nodeAfterComment === closingComment) {\n    // There are no text nodes between the opening and closing comments; insert\n    // a new one if stringText isn't empty.\n    if (stringText) {\n      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);\n    }\n  } else {\n    if (stringText) {\n      // Set the text content of the first node after the opening comment, and\n      // remove all following nodes up until the closing comment.\n      setTextContent(nodeAfterComment, stringText);\n      removeDelimitedText(parentNode, nodeAfterComment, closingComment);\n    } else {\n      removeDelimitedText(parentNode, openingComment, closingComment);\n    }\n  }\n\n  if (\"production\" !== 'production') {\n    ReactInstrumentation.debugTool.onHostOperation({\n      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,\n      type: 'replace text',\n      payload: stringText\n    });\n  }\n}\n\nvar dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;\nif (\"production\" !== 'production') {\n  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {\n    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);\n    if (prevInstance._debugID !== 0) {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: prevInstance._debugID,\n        type: 'replace with',\n        payload: markup.toString()\n      });\n    } else {\n      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);\n      if (nextInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation({\n          instanceID: nextInstance._debugID,\n          type: 'mount',\n          payload: markup.toString()\n        });\n      }\n    }\n  };\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,\n\n  replaceDelimitedText: replaceDelimitedText,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  processUpdates: function (parentNode, updates) {\n    if (\"production\" !== 'production') {\n      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      var update = updates[k];\n      switch (update.type) {\n        case 'INSERT_MARKUP':\n          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));\n          if (\"production\" !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'insert child',\n              payload: {\n                toIndex: update.toIndex,\n                content: update.content.toString()\n              }\n            });\n          }\n          break;\n        case 'MOVE_EXISTING':\n          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));\n          if (\"production\" !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'move child',\n              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }\n            });\n          }\n          break;\n        case 'SET_MARKUP':\n          setInnerHTML(parentNode, update.content);\n          if (\"production\" !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'replace children',\n              payload: update.content.toString()\n            });\n          }\n          break;\n        case 'TEXT_CONTENT':\n          setTextContent(parentNode, update.content);\n          if (\"production\" !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'replace text',\n              payload: update.content.toString()\n            });\n          }\n          break;\n        case 'REMOVE_NODE':\n          removeChild(parentNode, update.fromNode);\n          if (\"production\" !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'remove child',\n              payload: { fromIndex: update.fromIndex }\n            });\n          }\n          break;\n      }\n    }\n  }\n};\n\nmodule.exports = DOMChildrenOperations;","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMNamespaces = require('./DOMNamespaces');\nvar setInnerHTML = require('./setInnerHTML');\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\nvar setTextContent = require('./setTextContent');\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\n/**\n * In IE (8-11) and Edge, appending nodes with no children is dramatically\n * faster than appending a full subtree, so we essentially queue up the\n * .appendChild calls here and apply them so each node is added to its parent\n * before any children are added.\n *\n * In other browsers, doing so is slower or neutral compared to the other order\n * (in Firefox, twice as slow) so we only do this inversion in IE.\n *\n * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.\n */\nvar enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\\bEdge\\/\\d/.test(navigator.userAgent);\n\nfunction insertTreeChildren(tree) {\n  if (!enableLazy) {\n    return;\n  }\n  var node = tree.node;\n  var children = tree.children;\n  if (children.length) {\n    for (var i = 0; i < children.length; i++) {\n      insertTreeBefore(node, children[i], null);\n    }\n  } else if (tree.html != null) {\n    setInnerHTML(node, tree.html);\n  } else if (tree.text != null) {\n    setTextContent(node, tree.text);\n  }\n}\n\nvar insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {\n  // DocumentFragments aren't actually part of the DOM after insertion so\n  // appending children won't update the DOM. We need to ensure the fragment\n  // is properly populated first, breaking out of our lazy approach for just\n  // this level. Also, some <object> plugins (like Flash Player) will read\n  // <param> nodes immediately upon insertion into the DOM, so <object>\n  // must also be populated prior to insertion into the DOM.\n  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {\n    insertTreeChildren(tree);\n    parentNode.insertBefore(tree.node, referenceNode);\n  } else {\n    parentNode.insertBefore(tree.node, referenceNode);\n    insertTreeChildren(tree);\n  }\n});\n\nfunction replaceChildWithTree(oldNode, newTree) {\n  oldNode.parentNode.replaceChild(newTree.node, oldNode);\n  insertTreeChildren(newTree);\n}\n\nfunction queueChild(parentTree, childTree) {\n  if (enableLazy) {\n    parentTree.children.push(childTree);\n  } else {\n    parentTree.node.appendChild(childTree.node);\n  }\n}\n\nfunction queueHTML(tree, html) {\n  if (enableLazy) {\n    tree.html = html;\n  } else {\n    setInnerHTML(tree.node, html);\n  }\n}\n\nfunction queueText(tree, text) {\n  if (enableLazy) {\n    tree.text = text;\n  } else {\n    setTextContent(tree.node, text);\n  }\n}\n\nfunction toString() {\n  return this.node.nodeName;\n}\n\nfunction DOMLazyTree(node) {\n  return {\n    node: node,\n    children: [],\n    html: null,\n    text: null,\n    toString: toString\n  };\n}\n\nDOMLazyTree.insertTreeBefore = insertTreeBefore;\nDOMLazyTree.replaceChildWithTree = replaceChildWithTree;\nDOMLazyTree.queueChild = queueChild;\nDOMLazyTree.queueHTML = queueHTML;\nDOMLazyTree.queueText = queueText;\n\nmodule.exports = DOMLazyTree;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg'\n};\n\nmodule.exports = DOMNamespaces;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nfunction checkMask(value, bitmask) {\n  return (value & bitmask) === bitmask;\n}\n\nvar DOMPropertyInjection = {\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  MUST_USE_PROPERTY: 0x1,\n  HAS_BOOLEAN_VALUE: 0x4,\n  HAS_NUMERIC_VALUE: 0x8,\n  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,\n  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,\n\n  /**\n   * Inject some specialized knowledge about the DOM. This takes a config object\n   * with the following properties:\n   *\n   * isCustomAttribute: function that given an attribute name will return true\n   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n   * attributes where it's impossible to enumerate all of the possible\n   * attribute names,\n   *\n   * Properties: object mapping DOM property name to one of the\n   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n   * it won't get written to the DOM.\n   *\n   * DOMAttributeNames: object mapping React attribute name to the DOM\n   * attribute name. Attribute names not specified use the **lowercase**\n   * normalized name.\n   *\n   * DOMAttributeNamespaces: object mapping React attribute name to the DOM\n   * attribute namespace URL. (Attribute names not specified use no namespace.)\n   *\n   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n   * Property names not specified use the normalized name.\n   *\n   * DOMMutationMethods: Properties that require special mutation methods. If\n   * `value` is undefined, the mutation method should unset the property.\n   *\n   * @param {object} domPropertyConfig the config as described above.\n   */\n  injectDOMPropertyConfig: function (domPropertyConfig) {\n    var Injection = DOMPropertyInjection;\n    var Properties = domPropertyConfig.Properties || {};\n    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};\n    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\n    if (domPropertyConfig.isCustomAttribute) {\n      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);\n    }\n\n    for (var propName in Properties) {\n      !!DOMProperty.properties.hasOwnProperty(propName) ? \"production\" !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property \\'%s\\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;\n\n      var lowerCased = propName.toLowerCase();\n      var propConfig = Properties[propName];\n\n      var propertyInfo = {\n        attributeName: lowerCased,\n        attributeNamespace: null,\n        propertyName: propName,\n        mutationMethod: null,\n\n        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),\n        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),\n        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),\n        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),\n        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)\n      };\n      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? \"production\" !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;\n\n      if (\"production\" !== 'production') {\n        DOMProperty.getPossibleStandardName[lowerCased] = propName;\n      }\n\n      if (DOMAttributeNames.hasOwnProperty(propName)) {\n        var attributeName = DOMAttributeNames[propName];\n        propertyInfo.attributeName = attributeName;\n        if (\"production\" !== 'production') {\n          DOMProperty.getPossibleStandardName[attributeName] = propName;\n        }\n      }\n\n      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {\n        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];\n      }\n\n      if (DOMPropertyNames.hasOwnProperty(propName)) {\n        propertyInfo.propertyName = DOMPropertyNames[propName];\n      }\n\n      if (DOMMutationMethods.hasOwnProperty(propName)) {\n        propertyInfo.mutationMethod = DOMMutationMethods[propName];\n      }\n\n      DOMProperty.properties[propName] = propertyInfo;\n    }\n  }\n};\n\n/* eslint-disable max-len */\nvar ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n/* eslint-enable max-len */\n\n/**\n * DOMProperty exports lookup objects that can be used like functions:\n *\n *   > DOMProperty.isValid['id']\n *   true\n *   > DOMProperty.isValid['foobar']\n *   undefined\n *\n * Although this may be confusing, it performs better in general.\n *\n * @see http://jsperf.com/key-exists\n * @see http://jsperf.com/key-missing\n */\nvar DOMProperty = {\n  ID_ATTRIBUTE_NAME: 'data-reactid',\n  ROOT_ATTRIBUTE_NAME: 'data-reactroot',\n\n  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,\n  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040',\n\n  /**\n   * Map from property \"standard name\" to an object with info about how to set\n   * the property in the DOM. Each object contains:\n   *\n   * attributeName:\n   *   Used when rendering markup or with `*Attribute()`.\n   * attributeNamespace\n   * propertyName:\n   *   Used on DOM node instances. (This includes properties that mutate due to\n   *   external factors.)\n   * mutationMethod:\n   *   If non-null, used instead of the property or `setAttribute()` after\n   *   initial render.\n   * mustUseProperty:\n   *   Whether the property must be accessed and mutated as an object property.\n   * hasBooleanValue:\n   *   Whether the property should be removed when set to a falsey value.\n   * hasNumericValue:\n   *   Whether the property must be numeric or parse as a numeric and should be\n   *   removed when set to a falsey value.\n   * hasPositiveNumericValue:\n   *   Whether the property must be positive numeric or parse as a positive\n   *   numeric and should be removed when set to a falsey value.\n   * hasOverloadedBooleanValue:\n   *   Whether the property can be used as a flag as well as with a value.\n   *   Removed when strictly equal to false; present without a value when\n   *   strictly equal to true; present with a value otherwise.\n   */\n  properties: {},\n\n  /**\n   * Mapping from lowercase property names to the properly cased version, used\n   * to warn in the case of missing properties. Available only in __DEV__.\n   *\n   * autofocus is predefined, because adding it to the property whitelist\n   * causes unintended side effects.\n   *\n   * @type {Object}\n   */\n  getPossibleStandardName: \"production\" !== 'production' ? { autofocus: 'autoFocus' } : null,\n\n  /**\n   * All of the isCustomAttribute() functions that have been injected.\n   */\n  _isCustomAttributeFunctions: [],\n\n  /**\n   * Checks whether a property name is a custom attribute.\n   * @method\n   */\n  isCustomAttribute: function (attributeName) {\n    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n      if (isCustomAttributeFn(attributeName)) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  injection: DOMPropertyInjection\n};\n\nmodule.exports = DOMProperty;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');\nvar warning = require('fbjs/lib/warning');\n\nvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');\nvar illegalAttributeNameCache = {};\nvar validatedAttributeNameCache = {};\n\nfunction isAttributeNameSafe(attributeName) {\n  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\n    return true;\n  }\n  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  \"production\" !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;\n  return false;\n}\n\nfunction shouldIgnoreValue(propertyInfo, value) {\n  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function (id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n  },\n\n  setAttributeForID: function (node, id) {\n    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\n  },\n\n  createMarkupForRoot: function () {\n    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=\"\"';\n  },\n\n  setAttributeForRoot: function (node) {\n    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function (name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      if (shouldIgnoreValue(propertyInfo, value)) {\n        return '';\n      }\n      var attributeName = propertyInfo.attributeName;\n      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n        return attributeName + '=\"\"';\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    }\n    return null;\n  },\n\n  /**\n   * Creates markup for a custom property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {string} Markup string, or empty string if the property was invalid.\n   */\n  createMarkupForCustomAttribute: function (name, value) {\n    if (!isAttributeNameSafe(name) || value == null) {\n      return '';\n    }\n    return name + '=' + quoteAttributeValueForBrowser(value);\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function (node, name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(propertyInfo, value)) {\n        this.deleteValueForProperty(node, name);\n        return;\n      } else if (propertyInfo.mustUseProperty) {\n        // Contrary to `setAttribute`, object properties are properly\n        // `toString`ed by IE8/9.\n        node[propertyInfo.propertyName] = value;\n      } else {\n        var attributeName = propertyInfo.attributeName;\n        var namespace = propertyInfo.attributeNamespace;\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        if (namespace) {\n          node.setAttributeNS(namespace, attributeName, '' + value);\n        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n          node.setAttribute(attributeName, '');\n        } else {\n          node.setAttribute(attributeName, '' + value);\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      DOMPropertyOperations.setValueForAttribute(node, name, value);\n      return;\n    }\n\n    if (\"production\" !== 'production') {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'update attribute',\n        payload: payload\n      });\n    }\n  },\n\n  setValueForAttribute: function (node, name, value) {\n    if (!isAttributeNameSafe(name)) {\n      return;\n    }\n    if (value == null) {\n      node.removeAttribute(name);\n    } else {\n      node.setAttribute(name, '' + value);\n    }\n\n    if (\"production\" !== 'production') {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'update attribute',\n        payload: payload\n      });\n    }\n  },\n\n  /**\n   * Deletes an attributes from a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForAttribute: function (node, name) {\n    node.removeAttribute(name);\n    if (\"production\" !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'remove attribute',\n        payload: name\n      });\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function (node, name) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (propertyInfo.mustUseProperty) {\n        var propName = propertyInfo.propertyName;\n        if (propertyInfo.hasBooleanValue) {\n          node[propName] = false;\n        } else {\n          node[propName] = '';\n        }\n      } else {\n        node.removeAttribute(propertyInfo.attributeName);\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    }\n\n    if (\"production\" !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'remove attribute',\n        payload: name\n      });\n    }\n  }\n};\n\nmodule.exports = DOMPropertyOperations;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\n\nvar Danger = {\n  /**\n   * Replaces a node with a string of markup at its current position within its\n   * parent. The markup must render into a single root node.\n   *\n   * @param {DOMElement} oldChild Child node to replace.\n   * @param {string} markup Markup to render in place of the child node.\n   * @internal\n   */\n  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\n    !ExecutionEnvironment.canUseDOM ? \"production\" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;\n    !markup ? \"production\" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;\n    !(oldChild.nodeName !== 'HTML') ? \"production\" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;\n\n    if (typeof markup === 'string') {\n      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n      oldChild.parentNode.replaceChild(newChild, oldChild);\n    } else {\n      DOMLazyTree.replaceChildWithTree(oldChild, markup);\n    }\n  }\n};\n\nmodule.exports = Danger;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\n\nvar DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];\n\nmodule.exports = DefaultEventPluginOrder;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: 'onMouseEnter',\n    dependencies: ['topMouseOut', 'topMouseOver']\n  },\n  mouseLeave: {\n    registrationName: 'onMouseLeave',\n    dependencies: ['topMouseOut', 'topMouseOver']\n  }\n};\n\nvar EnterLeaveEventPlugin = {\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (nativeEventTarget.window === nativeEventTarget) {\n      // `nativeEventTarget` is probably a window object.\n      win = nativeEventTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = nativeEventTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from;\n    var to;\n    if (topLevelType === 'topMouseOut') {\n      from = targetInst;\n      var related = nativeEvent.relatedTarget || nativeEvent.toElement;\n      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;\n    } else {\n      // Moving to a node from outside the window.\n      from = null;\n      to = targetInst;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);\n    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);\n\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);\n    leave.type = 'mouseleave';\n    leave.target = fromNode;\n    leave.relatedTarget = toNode;\n\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);\n    enter.type = 'mouseenter';\n    enter.target = toNode;\n    enter.relatedTarget = fromNode;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);\n\n    return [leave, enter];\n  }\n};\n\nmodule.exports = EnterLeaveEventPlugin;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @private\n */\nvar executeDispatchesAndRelease = function (event, simulated) {\n  if (event) {\n    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nvar executeDispatchesAndReleaseSimulated = function (e) {\n  return executeDispatchesAndRelease(e, true);\n};\nvar executeDispatchesAndReleaseTopLevel = function (e) {\n  return executeDispatchesAndRelease(e, false);\n};\n\nvar getDictionaryKey = function (inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n};\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n      return !!(props.disabled && isInteractive(type));\n    default:\n      return false;\n  }\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n  },\n\n  /**\n   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {function} listener The callback to store.\n   */\n  putListener: function (inst, registrationName, listener) {\n    !(typeof listener === 'function') ? \"production\" !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;\n\n    var key = getDictionaryKey(inst);\n    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[key] = listener;\n\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.didPutListener) {\n      PluginModule.didPutListener(inst, registrationName, listener);\n    }\n  },\n\n  /**\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function (inst, registrationName) {\n    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n    // live here; needs to be moved to a better place soon\n    var bankForRegistrationName = listenerBank[registrationName];\n    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {\n      return null;\n    }\n    var key = getDictionaryKey(inst);\n    return bankForRegistrationName && bankForRegistrationName[key];\n  },\n\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function (inst, registrationName) {\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.willDeleteListener) {\n      PluginModule.willDeleteListener(inst, registrationName);\n    }\n\n    var bankForRegistrationName = listenerBank[registrationName];\n    // TODO: This should never be null -- when is it?\n    if (bankForRegistrationName) {\n      var key = getDictionaryKey(inst);\n      delete bankForRegistrationName[key];\n    }\n  },\n\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   */\n  deleteAllListeners: function (inst) {\n    var key = getDictionaryKey(inst);\n    for (var registrationName in listenerBank) {\n      if (!listenerBank.hasOwnProperty(registrationName)) {\n        continue;\n      }\n\n      if (!listenerBank[registrationName][key]) {\n        continue;\n      }\n\n      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n      if (PluginModule && PluginModule.willDeleteListener) {\n        PluginModule.willDeleteListener(inst, registrationName);\n      }\n\n      delete listenerBank[registrationName][key];\n    }\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0; i < plugins.length; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function (events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function (simulated) {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    if (simulated) {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n    } else {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n    }\n    !!eventQueue ? \"production\" !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;\n    // This would be a good time to rethrow if any of the event handlers threw.\n    ReactErrorUtils.rethrowCaughtError();\n  },\n\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function () {\n    listenerBank = {};\n  },\n\n  __getListenerBank: function () {\n    return listenerBank;\n  }\n};\n\nmodule.exports = EventPluginHub;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Injectable ordering of event plugins.\n */\nvar eventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nvar namesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering() {\n  if (!eventPluginOrder) {\n    // Wait until an `eventPluginOrder` is injected.\n    return;\n  }\n  for (var pluginName in namesToPlugins) {\n    var pluginModule = namesToPlugins[pluginName];\n    var pluginIndex = eventPluginOrder.indexOf(pluginName);\n    !(pluginIndex > -1) ? \"production\" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;\n    if (EventPluginRegistry.plugins[pluginIndex]) {\n      continue;\n    }\n    !pluginModule.extractEvents ? \"production\" !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;\n    EventPluginRegistry.plugins[pluginIndex] = pluginModule;\n    var publishedEvents = pluginModule.eventTypes;\n    for (var eventName in publishedEvents) {\n      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? \"production\" !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\n  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? \"production\" !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;\n  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events and\n * can be used with `EventPluginHub.putListener` to register listeners.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(registrationName, pluginModule, eventName) {\n  !!EventPluginRegistry.registrationNameModules[registrationName] ? \"production\" !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;\n  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;\n  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;\n\n  if (\"production\" !== 'production') {\n    var lowerCasedName = registrationName.toLowerCase();\n    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;\n\n    if (registrationName === 'onDoubleClick') {\n      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;\n    }\n  }\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\nvar EventPluginRegistry = {\n  /**\n   * Ordered list of injected plugins.\n   */\n  plugins: [],\n\n  /**\n   * Mapping from event name to dispatch config\n   */\n  eventNameDispatchConfigs: {},\n\n  /**\n   * Mapping from registration name to plugin module\n   */\n  registrationNameModules: {},\n\n  /**\n   * Mapping from registration name to event name\n   */\n  registrationNameDependencies: {},\n\n  /**\n   * Mapping from lowercase registration names to the properly cased version,\n   * used to warn in the case of missing event handlers. Available\n   * only in __DEV__.\n   * @type {Object}\n   */\n  possibleRegistrationNames: \"production\" !== 'production' ? {} : null,\n  // Trust the developer to only use possibleRegistrationNames in __DEV__\n\n  /**\n   * Injects an ordering of plugins (by plugin name). This allows the ordering\n   * to be decoupled from injection of the actual plugins so that ordering is\n   * always deterministic regardless of packaging, on-the-fly injection, etc.\n   *\n   * @param {array} InjectedEventPluginOrder\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginOrder}\n   */\n  injectEventPluginOrder: function (injectedEventPluginOrder) {\n    !!eventPluginOrder ? \"production\" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;\n    // Clone the ordering so it cannot be dynamically mutated.\n    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n    recomputePluginOrdering();\n  },\n\n  /**\n   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n   * in the ordering injected by `injectEventPluginOrder`.\n   *\n   * Plugins can be injected as part of page initialization or on-the-fly.\n   *\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginsByName}\n   */\n  injectEventPluginsByName: function (injectedNamesToPlugins) {\n    var isOrderingDirty = false;\n    for (var pluginName in injectedNamesToPlugins) {\n      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n        continue;\n      }\n      var pluginModule = injectedNamesToPlugins[pluginName];\n      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {\n        !!namesToPlugins[pluginName] ? \"production\" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;\n        namesToPlugins[pluginName] = pluginModule;\n        isOrderingDirty = true;\n      }\n    }\n    if (isOrderingDirty) {\n      recomputePluginOrdering();\n    }\n  },\n\n  /**\n   * Looks up the plugin for the supplied event.\n   *\n   * @param {object} event A synthetic event.\n   * @return {?object} The plugin that created the supplied event.\n   * @internal\n   */\n  getPluginModuleForEvent: function (event) {\n    var dispatchConfig = event.dispatchConfig;\n    if (dispatchConfig.registrationName) {\n      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;\n    }\n    if (dispatchConfig.phasedRegistrationNames !== undefined) {\n      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see\n      // that it is not undefined.\n      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\n      for (var phase in phasedRegistrationNames) {\n        if (!phasedRegistrationNames.hasOwnProperty(phase)) {\n          continue;\n        }\n        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];\n        if (pluginModule) {\n          return pluginModule;\n        }\n      }\n    }\n    return null;\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _resetEventPlugins: function () {\n    eventPluginOrder = null;\n    for (var pluginName in namesToPlugins) {\n      if (namesToPlugins.hasOwnProperty(pluginName)) {\n        delete namesToPlugins[pluginName];\n      }\n    }\n    EventPluginRegistry.plugins.length = 0;\n\n    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n    for (var eventName in eventNameDispatchConfigs) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        delete eventNameDispatchConfigs[eventName];\n      }\n    }\n\n    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n    for (var registrationName in registrationNameModules) {\n      if (registrationNameModules.hasOwnProperty(registrationName)) {\n        delete registrationNameModules[registrationName];\n      }\n    }\n\n    if (\"production\" !== 'production') {\n      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;\n      for (var lowerCasedName in possibleRegistrationNames) {\n        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {\n          delete possibleRegistrationNames[lowerCasedName];\n        }\n      }\n    }\n  }\n};\n\nmodule.exports = EventPluginRegistry;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `ComponentTree`: [required] Module that can convert between React instances\n *   and actual node references.\n */\nvar ComponentTree;\nvar TreeTraversal;\nvar injection = {\n  injectComponentTree: function (Injected) {\n    ComponentTree = Injected;\n    if (\"production\" !== 'production') {\n      \"production\" !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\n    }\n  },\n  injectTreeTraversal: function (Injected) {\n    TreeTraversal = Injected;\n    if (\"production\" !== 'production') {\n      \"production\" !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;\n    }\n  }\n};\n\nfunction isEndish(topLevelType) {\n  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';\n}\n\nvar validateEventDispatches;\nif (\"production\" !== 'production') {\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchInstances = event._dispatchInstances;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\n    var instancesIsArr = Array.isArray(dispatchInstances);\n    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n\n    \"production\" !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\nfunction executeDispatch(event, simulated, listener, inst) {\n  var type = event.type || 'unknown-event';\n  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);\n  if (simulated) {\n    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);\n  } else {\n    ReactErrorUtils.invokeGuardedCallback(type, listener, event);\n  }\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, simulated) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (\"production\" !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);\n  }\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (\"production\" !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (\"production\" !== 'production') {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchInstance = event._dispatchInstances;\n  !!Array.isArray(dispatchListener) ? \"production\" !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;\n  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;\n  var res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n\n  getInstanceFromNode: function (node) {\n    return ComponentTree.getInstanceFromNode(node);\n  },\n  getNodeFromInstance: function (node) {\n    return ComponentTree.getNodeFromInstance(node);\n  },\n  isAncestor: function (a, b) {\n    return TreeTraversal.isAncestor(a, b);\n  },\n  getLowestCommonAncestor: function (a, b) {\n    return TreeTraversal.getLowestCommonAncestor(a, b);\n  },\n  getParentInstance: function (inst) {\n    return TreeTraversal.getParentInstance(inst);\n  },\n  traverseTwoPhase: function (target, fn, arg) {\n    return TreeTraversal.traverseTwoPhase(target, fn, arg);\n  },\n  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {\n    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);\n  },\n\n  injection: injection\n};\n\nmodule.exports = EventPluginUtils;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginUtils = require('./EventPluginUtils');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar warning = require('fbjs/lib/warning');\n\nvar getListener = EventPluginHub.getListener;\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(inst, event, propagationPhase) {\n  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  if (\"production\" !== 'production') {\n    \"production\" !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;\n  }\n  var listener = listenerAtPhase(inst, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We cannot perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n */\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    var targetInst = event._targetInst;\n    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;\n    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(inst, ignoredDirection, event) {\n  if (event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(inst, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\nfunction accumulateEnterLeaveDispatches(leave, enter, from, to) {\n  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);\n}\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing event a\n * single one.\n *\n * @constructor EventPropagators\n */\nvar EventPropagators = {\n  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,\n  accumulateDirectDispatches: accumulateDirectDispatches,\n  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n};\n\nmodule.exports = EventPropagators;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\n_assign(FallbackCompositionState.prototype, {\n  destructor: function () {\n    this._root = null;\n    this._startText = null;\n    this._fallbackText = null;\n  },\n\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function () {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function () {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\n\nvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\nvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\nvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\nvar HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\nvar HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\nvar HTMLDOMPropertyConfig = {\n  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),\n  Properties: {\n    /**\n     * Standard Properties\n     */\n    accept: 0,\n    acceptCharset: 0,\n    accessKey: 0,\n    action: 0,\n    allowFullScreen: HAS_BOOLEAN_VALUE,\n    allowTransparency: 0,\n    alt: 0,\n    // specifies target context for links with `preload` type\n    as: 0,\n    async: HAS_BOOLEAN_VALUE,\n    autoComplete: 0,\n    // autoFocus is polyfilled/normalized by AutoFocusUtils\n    // autoFocus: HAS_BOOLEAN_VALUE,\n    autoPlay: HAS_BOOLEAN_VALUE,\n    capture: HAS_BOOLEAN_VALUE,\n    cellPadding: 0,\n    cellSpacing: 0,\n    charSet: 0,\n    challenge: 0,\n    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    cite: 0,\n    classID: 0,\n    className: 0,\n    cols: HAS_POSITIVE_NUMERIC_VALUE,\n    colSpan: 0,\n    content: 0,\n    contentEditable: 0,\n    contextMenu: 0,\n    controls: HAS_BOOLEAN_VALUE,\n    coords: 0,\n    crossOrigin: 0,\n    data: 0, // For `<object />` acts as `src`.\n    dateTime: 0,\n    'default': HAS_BOOLEAN_VALUE,\n    defer: HAS_BOOLEAN_VALUE,\n    dir: 0,\n    disabled: HAS_BOOLEAN_VALUE,\n    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n    draggable: 0,\n    encType: 0,\n    form: 0,\n    formAction: 0,\n    formEncType: 0,\n    formMethod: 0,\n    formNoValidate: HAS_BOOLEAN_VALUE,\n    formTarget: 0,\n    frameBorder: 0,\n    headers: 0,\n    height: 0,\n    hidden: HAS_BOOLEAN_VALUE,\n    high: 0,\n    href: 0,\n    hrefLang: 0,\n    htmlFor: 0,\n    httpEquiv: 0,\n    icon: 0,\n    id: 0,\n    inputMode: 0,\n    integrity: 0,\n    is: 0,\n    keyParams: 0,\n    keyType: 0,\n    kind: 0,\n    label: 0,\n    lang: 0,\n    list: 0,\n    loop: HAS_BOOLEAN_VALUE,\n    low: 0,\n    manifest: 0,\n    marginHeight: 0,\n    marginWidth: 0,\n    max: 0,\n    maxLength: 0,\n    media: 0,\n    mediaGroup: 0,\n    method: 0,\n    min: 0,\n    minLength: 0,\n    // Caution; `option.selected` is not updated if `select.multiple` is\n    // disabled with `removeAttribute`.\n    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    name: 0,\n    nonce: 0,\n    noValidate: HAS_BOOLEAN_VALUE,\n    open: HAS_BOOLEAN_VALUE,\n    optimum: 0,\n    pattern: 0,\n    placeholder: 0,\n    playsInline: HAS_BOOLEAN_VALUE,\n    poster: 0,\n    preload: 0,\n    profile: 0,\n    radioGroup: 0,\n    readOnly: HAS_BOOLEAN_VALUE,\n    referrerPolicy: 0,\n    rel: 0,\n    required: HAS_BOOLEAN_VALUE,\n    reversed: HAS_BOOLEAN_VALUE,\n    role: 0,\n    rows: HAS_POSITIVE_NUMERIC_VALUE,\n    rowSpan: HAS_NUMERIC_VALUE,\n    sandbox: 0,\n    scope: 0,\n    scoped: HAS_BOOLEAN_VALUE,\n    scrolling: 0,\n    seamless: HAS_BOOLEAN_VALUE,\n    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    shape: 0,\n    size: HAS_POSITIVE_NUMERIC_VALUE,\n    sizes: 0,\n    span: HAS_POSITIVE_NUMERIC_VALUE,\n    spellCheck: 0,\n    src: 0,\n    srcDoc: 0,\n    srcLang: 0,\n    srcSet: 0,\n    start: HAS_NUMERIC_VALUE,\n    step: 0,\n    style: 0,\n    summary: 0,\n    tabIndex: 0,\n    target: 0,\n    title: 0,\n    // Setting .type throws on non-<input> tags\n    type: 0,\n    useMap: 0,\n    value: 0,\n    width: 0,\n    wmode: 0,\n    wrap: 0,\n\n    /**\n     * RDFa Properties\n     */\n    about: 0,\n    datatype: 0,\n    inlist: 0,\n    prefix: 0,\n    // property is also supported for OpenGraph in meta tags.\n    property: 0,\n    resource: 0,\n    'typeof': 0,\n    vocab: 0,\n\n    /**\n     * Non-standard Properties\n     */\n    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n    // keyboard hints.\n    autoCapitalize: 0,\n    autoCorrect: 0,\n    // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n    autoSave: 0,\n    // color is for Safari mask-icon link\n    color: 0,\n    // itemProp, itemScope, itemType are for\n    // Microdata support. See http://schema.org/docs/gs.html\n    itemProp: 0,\n    itemScope: HAS_BOOLEAN_VALUE,\n    itemType: 0,\n    // itemID and itemRef are for Microdata support as well but\n    // only specified in the WHATWG spec document. See\n    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n    itemID: 0,\n    itemRef: 0,\n    // results show looking glass icon and recent searches on input\n    // search fields in WebKit/Blink\n    results: 0,\n    // IE-only attribute that specifies security restrictions on an iframe\n    // as an alternative to the sandbox attribute on IE<10\n    security: 0,\n    // IE-only attribute that controls focus behavior\n    unselectable: 0\n  },\n  DOMAttributeNames: {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n  },\n  DOMPropertyNames: {},\n  DOMMutationMethods: {\n    value: function (node, value) {\n      if (value == null) {\n        return node.removeAttribute('value');\n      }\n\n      // Number inputs get special treatment due to some edge cases in\n      // Chrome. Let everything else assign the value attribute as normal.\n      // https://github.com/facebook/react/issues/7253#issuecomment-236074326\n      if (node.type !== 'number' || node.hasAttribute('value') === false) {\n        node.setAttribute('value', '' + value);\n      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {\n        // Don't assign an attribute if validation reports bad\n        // input. Chrome will clear the value. Additionally, don't\n        // operate on inputs that have focus, otherwise Chrome might\n        // strip off trailing decimal places and cause the user's\n        // cursor position to jump to the beginning of the input.\n        //\n        // In ReactDOMInput, we have an onBlur event that will trigger\n        // this function again when focus is lost.\n        node.setAttribute('value', '' + value);\n      }\n    }\n  }\n};\n\nmodule.exports = HTMLDOMPropertyConfig;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * Unescape and unwrap key for human-readable display\n *\n * @param {string} key to unescape.\n * @return {string} the unescaped key.\n */\nfunction unescape(key) {\n  var unescapeRegex = /(=0|=2)/g;\n  var unescaperLookup = {\n    '=0': '=',\n    '=2': ':'\n  };\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n    return unescaperLookup[match];\n  });\n}\n\nvar KeyEscapeUtils = {\n  escape: escape,\n  unescape: unescape\n};\n\nmodule.exports = KeyEscapeUtils;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\nvar propTypesFactory = require('prop-types/factory');\n\nvar React = require('react/lib/React');\nvar PropTypes = propTypesFactory(React.isValidElement);\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar hasReadOnlyValue = {\n  button: true,\n  checkbox: true,\n  image: true,\n  hidden: true,\n  radio: true,\n  reset: true,\n  submit: true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? \"production\" !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ? \"production\" !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\\'t want to use valueLink.') : _prodInvariant('88') : void 0;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ? \"production\" !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\\'t want to use checkedLink') : _prodInvariant('89') : void 0;\n}\n\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: PropTypes.func\n};\n\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(owner);\n        \"production\" !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\n\nmodule.exports = LinkedValueUtils;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function (copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function (a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function (a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fourArgumentPooler = function (a1, a2, a3, a4) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nvar standardReleaser = function (instance) {\n  var Klass = this;\n  !(instance instanceof Klass) ? \"production\" !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function (CopyConstructor, pooler) {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fourArgumentPooler: fourArgumentPooler\n};\n\nmodule.exports = PooledClass;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactEventEmitterMixin = require('./ReactEventEmitterMixin');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getVendorPrefixedEventName = require('./getVendorPrefixedEventName');\nvar isEventSupported = require('./isEventSupported');\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar hasEventPageXY;\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topAbort: 'abort',\n  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',\n  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',\n  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',\n  topBlur: 'blur',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topScroll: 'scroll',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topSelectionChange: 'selectionchange',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTextInput: 'textInput',\n  topTimeUpdate: 'timeupdate',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   EventPluginHub.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function (ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function (enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function () {\n    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function (registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n\n    for (var i = 0; i < dependencies.length; i++) {\n      var dependency = dependencies[i];\n      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n        if (dependency === 'topWheel') {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);\n          }\n        } else if (dependency === 'topScroll') {\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n          }\n        } else if (dependency === 'topFocus' || dependency === 'topBlur') {\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening.topBlur = true;\n          isListening.topFocus = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  /**\n   * Protect against document.createEvent() returning null\n   * Some popup blocker extensions appear to do this:\n   * https://github.com/facebook/react/issues/6887\n   */\n  supportsEventPageXY: function () {\n    if (!document.createEvent) {\n      return false;\n    }\n    var ev = document.createEvent('MouseEvent');\n    return ev != null && 'pageX' in ev;\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when\n   * pageX/pageY isn't supported (legacy browsers).\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function () {\n    if (hasEventPageXY === undefined) {\n      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();\n    }\n    if (!hasEventPageXY && !isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  }\n});\n\nmodule.exports = ReactBrowserEventEmitter;","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactReconciler = require('./ReactReconciler');\n\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && \"production\" === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n}\n\nfunction instantiateChild(childInstances, child, name, selfDebugID) {\n  // We found a component instance.\n  var keyUnique = childInstances[name] === undefined;\n  if (\"production\" !== 'production') {\n    if (!ReactComponentTreeHook) {\n      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n    }\n    if (!keyUnique) {\n      \"production\" !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n    }\n  }\n  if (child != null && keyUnique) {\n    childInstances[name] = instantiateReactComponent(child, true);\n  }\n}\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID) // 0 in production and for roots\n  {\n    if (nestedChildNodes == null) {\n      return null;\n    }\n    var childInstances = {};\n\n    if (\"production\" !== 'production') {\n      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {\n        return instantiateChild(childInsts, child, name, selfDebugID);\n      }, childInstances);\n    } else {\n      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n    }\n    return childInstances;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextChildren Flat child element maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) // 0 in production and for roots\n  {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    if (!nextChildren && !prevChildren) {\n      return;\n    }\n    var name;\n    var prevChild;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n          ReactReconciler.unmountComponent(prevChild, false);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(nextElement, true);\n        nextChildren[name] = nextChildInstance;\n        // Creating mount image now ensures refs are resolved in right order\n        // (see https://github.com/facebook/react/pull/7101 for explanation).\n        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);\n        mountImages.push(nextChildMountImage);\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        prevChild = prevChildren[name];\n        removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n        ReactReconciler.unmountComponent(prevChild, false);\n      }\n    }\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function (renderedChildren, safely) {\n    for (var name in renderedChildren) {\n      if (renderedChildren.hasOwnProperty(name)) {\n        var renderedChild = renderedChildren[name];\n        ReactReconciler.unmountComponent(renderedChild, safely);\n      }\n    }\n  }\n};\n\nmodule.exports = ReactChildReconciler;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\n\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\nvar ReactComponentBrowserEnvironment = {\n  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\n  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup\n};\n\nmodule.exports = ReactComponentBrowserEnvironment;","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkup: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function (environment) {\n      !!injected ? \"production\" !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;\n      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;\n      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n};\n\nmodule.exports = ReactComponentEnvironment;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar React = require('react/lib/React');\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactErrorUtils = require('./ReactErrorUtils');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactNodeTypes = require('./ReactNodeTypes');\nvar ReactReconciler = require('./ReactReconciler');\n\nif (\"production\" !== 'production') {\n  var checkReactTypeSpec = require('./checkReactTypeSpec');\n}\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nvar CompositeTypes = {\n  ImpureClass: 0,\n  PureClass: 1,\n  StatelessFunctional: 2\n};\n\nfunction StatelessComponent(Component) {}\nStatelessComponent.prototype.render = function () {\n  var Component = ReactInstanceMap.get(this)._currentElement.type;\n  var element = Component(this.props, this.context, this.updater);\n  warnIfInvalidElement(Component, element);\n  return element;\n};\n\nfunction warnIfInvalidElement(Component, element) {\n  if (\"production\" !== 'production') {\n    \"production\" !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;\n    \"production\" !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;\n  }\n}\n\nfunction shouldConstruct(Component) {\n  return !!(Component.prototype && Component.prototype.isReactComponent);\n}\n\nfunction isPureComponent(Component) {\n  return !!(Component.prototype && Component.prototype.isPureReactComponent);\n}\n\n// Separated into a function to contain deoptimizations caused by try/finally.\nfunction measureLifeCyclePerf(fn, debugID, timerType) {\n  if (debugID === 0) {\n    // Top-level wrappers (see ReactMount) and empty components (see\n    // ReactDOMEmptyComponent) are invisible to hooks and devtools.\n    // Both are implementation details that should go away in the future.\n    return fn();\n  }\n\n  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);\n  try {\n    return fn();\n  } finally {\n    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);\n  }\n}\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponent = {\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function (element) {\n    this._currentElement = element;\n    this._rootNodeID = 0;\n    this._compositeType = null;\n    this._instance = null;\n    this._hostParent = null;\n    this._hostContainerInfo = null;\n\n    // See ReactUpdateQueue\n    this._updateBatchNumber = null;\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedNodeType = null;\n    this._renderedComponent = null;\n    this._context = null;\n    this._mountOrder = 0;\n    this._topLevelWrapper = null;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n\n    // ComponentWillUnmount shall only be called once\n    this._calledComponentWillUnmount = false;\n\n    if (\"production\" !== 'production') {\n      this._warnedAboutRefsInRender = false;\n    }\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} hostParent\n   * @param {?object} hostContainerInfo\n   * @param {?object} context\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var _this = this;\n\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var publicProps = this._currentElement.props;\n    var publicContext = this._processContext(context);\n\n    var Component = this._currentElement.type;\n\n    var updateQueue = transaction.getUpdateQueue();\n\n    // Initialize the public class\n    var doConstruct = shouldConstruct(Component);\n    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);\n    var renderedElement;\n\n    // Support functional components\n    if (!doConstruct && (inst == null || inst.render == null)) {\n      renderedElement = inst;\n      warnIfInvalidElement(Component, renderedElement);\n      !(inst === null || inst === false || React.isValidElement(inst)) ? \"production\" !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;\n      inst = new StatelessComponent(Component);\n      this._compositeType = CompositeTypes.StatelessFunctional;\n    } else {\n      if (isPureComponent(Component)) {\n        this._compositeType = CompositeTypes.PureClass;\n      } else {\n        this._compositeType = CompositeTypes.ImpureClass;\n      }\n    }\n\n    if (\"production\" !== 'production') {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      if (inst.render == null) {\n        \"production\" !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;\n      }\n\n      var propsMutated = inst.props !== publicProps;\n      var componentName = Component.displayName || Component.name || 'Component';\n\n      \"production\" !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + \"up the same props that your component's constructor was passed.\", componentName, componentName) : void 0;\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n    inst.updater = updateQueue;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (\"production\" !== 'production') {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      \"production\" !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;\n      \"production\" !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;\n      \"production\" !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;\n      \"production\" !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;\n      \"production\" !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;\n      \"production\" !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;\n      \"production\" !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? \"production\" !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    var markup;\n    if (inst.unstable_handleError) {\n      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } else {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n\n    if (inst.componentDidMount) {\n      if (\"production\" !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(function () {\n            return inst.componentDidMount();\n          }, _this._debugID, 'componentDidMount');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n      }\n    }\n\n    return markup;\n  },\n\n  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {\n    if (\"production\" !== 'production') {\n      ReactCurrentOwner.current = this;\n      try {\n        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n    }\n  },\n\n  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {\n    var Component = this._currentElement.type;\n\n    if (doConstruct) {\n      if (\"production\" !== 'production') {\n        return measureLifeCyclePerf(function () {\n          return new Component(publicProps, publicContext, updateQueue);\n        }, this._debugID, 'ctor');\n      } else {\n        return new Component(publicProps, publicContext, updateQueue);\n      }\n    }\n\n    // This can still be an instance in case of factory components\n    // but we'll count this as time spent rendering as the more common case.\n    if (\"production\" !== 'production') {\n      return measureLifeCyclePerf(function () {\n        return Component(publicProps, publicContext, updateQueue);\n      }, this._debugID, 'render');\n    } else {\n      return Component(publicProps, publicContext, updateQueue);\n    }\n  },\n\n  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var markup;\n    var checkpoint = transaction.checkpoint();\n    try {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } catch (e) {\n      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint\n      transaction.rollback(checkpoint);\n      this._instance.unstable_handleError(e);\n      if (this._pendingStateQueue) {\n        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);\n      }\n      checkpoint = transaction.checkpoint();\n\n      this._renderedComponent.unmountComponent(true);\n      transaction.rollback(checkpoint);\n\n      // Try again - we've informed the component about the error, so they can render an error message this time.\n      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n    return markup;\n  },\n\n  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var inst = this._instance;\n\n    var debugID = 0;\n    if (\"production\" !== 'production') {\n      debugID = this._debugID;\n    }\n\n    if (inst.componentWillMount) {\n      if (\"production\" !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillMount();\n        }, debugID, 'componentWillMount');\n      } else {\n        inst.componentWillMount();\n      }\n      // When mounting, calls to `setState` by `componentWillMount` will set\n      // `this._pendingStateQueue` without triggering a re-render.\n      if (this._pendingStateQueue) {\n        inst.state = this._processPendingState(inst.props, inst.context);\n      }\n    }\n\n    // If not a stateless component, we now render\n    if (renderedElement === undefined) {\n      renderedElement = this._renderValidatedComponent();\n    }\n\n    var nodeType = ReactNodeTypes.getType(renderedElement);\n    this._renderedNodeType = nodeType;\n    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n    );\n    this._renderedComponent = child;\n\n    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);\n\n    if (\"production\" !== 'production') {\n      if (debugID !== 0) {\n        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n      }\n    }\n\n    return markup;\n  },\n\n  getHostNode: function () {\n    return ReactReconciler.getHostNode(this._renderedComponent);\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    if (!this._renderedComponent) {\n      return;\n    }\n\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {\n      inst._calledComponentWillUnmount = true;\n\n      if (safely) {\n        var name = this.getName() + '.componentWillUnmount()';\n        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));\n      } else {\n        if (\"production\" !== 'production') {\n          measureLifeCyclePerf(function () {\n            return inst.componentWillUnmount();\n          }, this._debugID, 'componentWillUnmount');\n        } else {\n          inst.componentWillUnmount();\n        }\n      }\n    }\n\n    if (this._renderedComponent) {\n      ReactReconciler.unmountComponent(this._renderedComponent, safely);\n      this._renderedNodeType = null;\n      this._renderedComponent = null;\n      this._instance = null;\n    }\n\n    // Reset pending fields\n    // Even if this component is scheduled for another update in ReactUpdates,\n    // it would still be ignored because these fields are reset.\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = 0;\n    this._topLevelWrapper = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function (context) {\n    var Component = this._currentElement.type;\n    var contextTypes = Component.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    var maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function (context) {\n    var maskedContext = this._maskContext(context);\n    if (\"production\" !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.contextTypes) {\n        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function (currentContext) {\n    var Component = this._currentElement.type;\n    var inst = this._instance;\n    var childContext;\n\n    if (inst.getChildContext) {\n      if (\"production\" !== 'production') {\n        ReactInstrumentation.debugTool.onBeginProcessingChildContext();\n        try {\n          childContext = inst.getChildContext();\n        } finally {\n          ReactInstrumentation.debugTool.onEndProcessingChildContext();\n        }\n      } else {\n        childContext = inst.getChildContext();\n      }\n    }\n\n    if (childContext) {\n      !(typeof Component.childContextTypes === 'object') ? \"production\" !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;\n      if (\"production\" !== 'production') {\n        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');\n      }\n      for (var name in childContext) {\n        !(name in Component.childContextTypes) ? \"production\" !== 'production' ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;\n      }\n      return _assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Assert that the context types are valid\n   *\n   * @param {object} typeSpecs Map of context field to a ReactPropType\n   * @param {object} values Runtime values that need to be type-checked\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkContextTypes: function (typeSpecs, values, location) {\n    if (\"production\" !== 'production') {\n      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);\n    }\n  },\n\n  receiveComponent: function (nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);\n    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n    } else {\n      this._updateBatchNumber = null;\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n    var inst = this._instance;\n    !(inst != null) ? \"production\" !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    var willReceive = false;\n    var nextContext;\n\n    // Determine if the context has changed or not\n    if (this._context === nextUnmaskedContext) {\n      nextContext = inst.context;\n    } else {\n      nextContext = this._processContext(nextUnmaskedContext);\n      willReceive = true;\n    }\n\n    var prevProps = prevParentElement.props;\n    var nextProps = nextParentElement.props;\n\n    // Not a simple state update but a props update\n    if (prevParentElement !== nextParentElement) {\n      willReceive = true;\n    }\n\n    // An update here will schedule an update but immediately set\n    // _pendingStateQueue which will ensure that any state updates gets\n    // immediately reconciled instead of waiting for the next batch.\n    if (willReceive && inst.componentWillReceiveProps) {\n      if (\"production\" !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillReceiveProps(nextProps, nextContext);\n        }, this._debugID, 'componentWillReceiveProps');\n      } else {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n    var shouldUpdate = true;\n\n    if (!this._pendingForceUpdate) {\n      if (inst.shouldComponentUpdate) {\n        if (\"production\" !== 'production') {\n          shouldUpdate = measureLifeCyclePerf(function () {\n            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n          }, this._debugID, 'shouldComponentUpdate');\n        } else {\n          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n        }\n      } else {\n        if (this._compositeType === CompositeTypes.PureClass) {\n          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);\n        }\n      }\n    }\n\n    if (\"production\" !== 'production') {\n      \"production\" !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;\n    }\n\n    this._updateBatchNumber = null;\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function (props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = _assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n    var _this2 = this;\n\n    var inst = this._instance;\n\n    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n    var prevProps;\n    var prevState;\n    var prevContext;\n    if (hasComponentDidUpdate) {\n      prevProps = inst.props;\n      prevState = inst.state;\n      prevContext = inst.context;\n    }\n\n    if (inst.componentWillUpdate) {\n      if (\"production\" !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillUpdate(nextProps, nextState, nextContext);\n        }, this._debugID, 'componentWillUpdate');\n      } else {\n        inst.componentWillUpdate(nextProps, nextState, nextContext);\n      }\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (hasComponentDidUpdate) {\n      if (\"production\" !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n      }\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function (transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var nextRenderedElement = this._renderValidatedComponent();\n\n    var debugID = 0;\n    if (\"production\" !== 'production') {\n      debugID = this._debugID;\n    }\n\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n    } else {\n      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);\n      ReactReconciler.unmountComponent(prevComponentInstance, false);\n\n      var nodeType = ReactNodeTypes.getType(nextRenderedElement);\n      this._renderedNodeType = nodeType;\n      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n      );\n      this._renderedComponent = child;\n\n      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);\n\n      if (\"production\" !== 'production') {\n        if (debugID !== 0) {\n          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n        }\n      }\n\n      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);\n    }\n  },\n\n  /**\n   * Overridden in shallow rendering.\n   *\n   * @protected\n   */\n  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {\n    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function () {\n    var inst = this._instance;\n    var renderedElement;\n\n    if (\"production\" !== 'production') {\n      renderedElement = measureLifeCyclePerf(function () {\n        return inst.render();\n      }, this._debugID, 'render');\n    } else {\n      renderedElement = inst.render();\n    }\n\n    if (\"production\" !== 'production') {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (renderedElement === undefined && inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedElement = null;\n      }\n    }\n\n    return renderedElement;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function () {\n    var renderedElement;\n    if (\"production\" !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {\n      ReactCurrentOwner.current = this;\n      try {\n        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n    }\n    !(\n    // TODO: An `isValidNode` function would probably be more appropriate\n    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? \"production\" !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    return renderedElement;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function (ref, component) {\n    var inst = this.getPublicInstance();\n    !(inst != null) ? \"production\" !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;\n    var publicComponentInstance = component.getPublicInstance();\n    if (\"production\" !== 'production') {\n      var componentName = component && component.getName ? component.getName() : 'a component';\n      \"production\" !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;\n    }\n    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n    refs[ref] = publicComponentInstance;\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function (ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function () {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function () {\n    var inst = this._instance;\n    if (this._compositeType === CompositeTypes.StatelessFunctional) {\n      return null;\n    }\n    return inst;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n};\n\nmodule.exports = ReactCompositeComponent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\n'use strict';\n\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDefaultInjection = require('./ReactDefaultInjection');\nvar ReactMount = require('./ReactMount');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdates = require('./ReactUpdates');\nvar ReactVersion = require('./ReactVersion');\n\nvar findDOMNode = require('./findDOMNode');\nvar getHostComponentFromComposite = require('./getHostComponentFromComposite');\nvar renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');\nvar warning = require('fbjs/lib/warning');\n\nReactDefaultInjection.inject();\n\nvar ReactDOM = {\n  findDOMNode: findDOMNode,\n  render: ReactMount.render,\n  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n  version: ReactVersion,\n\n  /* eslint-disable camelcase */\n  unstable_batchedUpdates: ReactUpdates.batchedUpdates,\n  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer\n  /* eslint-enable camelcase */\n};\n\n// Inject the runtime into a devtools global hook regardless of browser.\n// Allows for debugging when the hook is injected on the page.\nif (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n    ComponentTree: {\n      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,\n      getNodeFromInstance: function (inst) {\n        // inst is an internal instance (but could be a composite)\n        if (inst._renderedComponent) {\n          inst = getHostComponentFromComposite(inst);\n        }\n        if (inst) {\n          return ReactDOMComponentTree.getNodeFromInstance(inst);\n        } else {\n          return null;\n        }\n      }\n    },\n    Mount: ReactMount,\n    Reconciler: ReactReconciler\n  });\n}\n\nif (\"production\" !== 'production') {\n  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n    // First check if devtools is not installed\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n      // If we're in Chrome or Firefox, provide a download link if not installed.\n      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n        // Firefox does not have the issue with devtools loaded over file://\n        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;\n        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');\n      }\n    }\n\n    var testFunc = function testFn() {};\n    \"production\" !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, \"It looks like you're using a minified copy of the development build \" + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;\n\n    // If we're in IE8, check to see if we are in compatibility mode and provide\n    // information on preventing compatibility mode\n    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;\n\n    \"production\" !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />') : void 0;\n\n    var expectedFeatures = [\n    // shims\n    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];\n\n    for (var i = 0; i < expectedFeatures.length; i++) {\n      if (!expectedFeatures[i]) {\n        \"production\" !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;\n        break;\n      }\n    }\n  }\n}\n\nif (\"production\" !== 'production') {\n  var ReactInstrumentation = require('./ReactInstrumentation');\n  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');\n  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');\n  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');\n\n  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);\n  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);\n  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);\n}\n\nmodule.exports = ReactDOM;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/* global hasOwnProperty:true */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar AutoFocusUtils = require('./AutoFocusUtils');\nvar CSSPropertyOperations = require('./CSSPropertyOperations');\nvar DOMLazyTree = require('./DOMLazyTree');\nvar DOMNamespaces = require('./DOMNamespaces');\nvar DOMProperty = require('./DOMProperty');\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactDOMComponentFlags = require('./ReactDOMComponentFlags');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMInput = require('./ReactDOMInput');\nvar ReactDOMOption = require('./ReactDOMOption');\nvar ReactDOMSelect = require('./ReactDOMSelect');\nvar ReactDOMTextarea = require('./ReactDOMTextarea');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMultiChild = require('./ReactMultiChild');\nvar ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar invariant = require('fbjs/lib/invariant');\nvar isEventSupported = require('./isEventSupported');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar inputValueTracking = require('./inputValueTracking');\nvar validateDOMNesting = require('./validateDOMNesting');\nvar warning = require('fbjs/lib/warning');\n\nvar Flags = ReactDOMComponentFlags;\nvar deleteListener = EventPluginHub.deleteListener;\nvar getNode = ReactDOMComponentTree.getNodeFromInstance;\nvar listenTo = ReactBrowserEventEmitter.listenTo;\nvar registrationNameModules = EventPluginRegistry.registrationNameModules;\n\n// For quickly matching children type, to test if can be treated as content.\nvar CONTENT_TYPES = { string: true, number: true };\n\nvar STYLE = 'style';\nvar HTML = '__html';\nvar RESERVED_PROPS = {\n  children: null,\n  dangerouslySetInnerHTML: null,\n  suppressContentEditableWarning: null\n};\n\n// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).\nvar DOC_FRAGMENT_TYPE = 11;\n\nfunction getDeclarationErrorAddendum(internalInstance) {\n  if (internalInstance) {\n    var owner = internalInstance._currentElement._owner || null;\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' This DOM node was rendered by `' + name + '`.';\n      }\n    }\n  }\n  return '';\n}\n\nfunction friendlyStringify(obj) {\n  if (typeof obj === 'object') {\n    if (Array.isArray(obj)) {\n      return '[' + obj.map(friendlyStringify).join(', ') + ']';\n    } else {\n      var pairs = [];\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var keyEscaped = /^[a-z$_][\\w$_]*$/i.test(key) ? key : JSON.stringify(key);\n          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));\n        }\n      }\n      return '{' + pairs.join(', ') + '}';\n    }\n  } else if (typeof obj === 'string') {\n    return JSON.stringify(obj);\n  } else if (typeof obj === 'function') {\n    return '[function object]';\n  }\n  // Differs from JSON.stringify in that undefined because undefined and that\n  // inf and nan don't become null\n  return String(obj);\n}\n\nvar styleMutationWarning = {};\n\nfunction checkAndWarnForMutatedStyle(style1, style2, component) {\n  if (style1 == null || style2 == null) {\n    return;\n  }\n  if (shallowEqual(style1, style2)) {\n    return;\n  }\n\n  var componentName = component._tag;\n  var owner = component._currentElement._owner;\n  var ownerName;\n  if (owner) {\n    ownerName = owner.getName();\n  }\n\n  var hash = ownerName + '|' + componentName;\n\n  if (styleMutationWarning.hasOwnProperty(hash)) {\n    return;\n  }\n\n  styleMutationWarning[hash] = true;\n\n  \"production\" !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;\n}\n\n/**\n * @param {object} component\n * @param {?object} props\n */\nfunction assertValidProps(component, props) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (voidElementTags[component._tag]) {\n    !(props.children == null && props.dangerouslySetInnerHTML == null) ? \"production\" !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;\n  }\n  if (props.dangerouslySetInnerHTML != null) {\n    !(props.children == null) ? \"production\" !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;\n    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? \"production\" !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;\n  }\n  if (\"production\" !== 'production') {\n    \"production\" !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;\n    \"production\" !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;\n    \"production\" !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;\n  }\n  !(props.style == null || typeof props.style === 'object') ? \"production\" !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;\n}\n\nfunction enqueuePutListener(inst, registrationName, listener, transaction) {\n  if (transaction instanceof ReactServerRenderingTransaction) {\n    return;\n  }\n  if (\"production\" !== 'production') {\n    // IE8 has no API for event capturing and the `onScroll` event doesn't\n    // bubble.\n    \"production\" !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), \"This browser doesn't support the `onScroll` event\") : void 0;\n  }\n  var containerInfo = inst._hostContainerInfo;\n  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;\n  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;\n  listenTo(registrationName, doc);\n  transaction.getReactMountReady().enqueue(putListener, {\n    inst: inst,\n    registrationName: registrationName,\n    listener: listener\n  });\n}\n\nfunction putListener() {\n  var listenerToPut = this;\n  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);\n}\n\nfunction inputPostMount() {\n  var inst = this;\n  ReactDOMInput.postMountWrapper(inst);\n}\n\nfunction textareaPostMount() {\n  var inst = this;\n  ReactDOMTextarea.postMountWrapper(inst);\n}\n\nfunction optionPostMount() {\n  var inst = this;\n  ReactDOMOption.postMountWrapper(inst);\n}\n\nvar setAndValidateContentChildDev = emptyFunction;\nif (\"production\" !== 'production') {\n  setAndValidateContentChildDev = function (content) {\n    var hasExistingContent = this._contentDebugID != null;\n    var debugID = this._debugID;\n    // This ID represents the inlined child that has no backing instance:\n    var contentDebugID = -debugID;\n\n    if (content == null) {\n      if (hasExistingContent) {\n        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);\n      }\n      this._contentDebugID = null;\n      return;\n    }\n\n    validateDOMNesting(null, String(content), this, this._ancestorInfo);\n    this._contentDebugID = contentDebugID;\n    if (hasExistingContent) {\n      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);\n      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);\n    } else {\n      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);\n      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);\n      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);\n    }\n  };\n}\n\n// There are so many media events, it makes sense to just\n// maintain a list rather than create a `trapBubbledEvent` for each\nvar mediaEvents = {\n  topAbort: 'abort',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTimeUpdate: 'timeupdate',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting'\n};\n\nfunction trackInputValue() {\n  inputValueTracking.track(this);\n}\n\nfunction trapBubbledEventsLocal() {\n  var inst = this;\n  // If a component renders to null or if another component fatals and causes\n  // the state of the tree to be corrupted, `node` here can be null.\n  !inst._rootNodeID ? \"production\" !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;\n  var node = getNode(inst);\n  !node ? \"production\" !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;\n\n  switch (inst._tag) {\n    case 'iframe':\n    case 'object':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];\n      break;\n    case 'video':\n    case 'audio':\n      inst._wrapperState.listeners = [];\n      // Create listener for each media event\n      for (var event in mediaEvents) {\n        if (mediaEvents.hasOwnProperty(event)) {\n          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));\n        }\n      }\n      break;\n    case 'source':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];\n      break;\n    case 'img':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];\n      break;\n    case 'form':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];\n      break;\n    case 'input':\n    case 'select':\n    case 'textarea':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];\n      break;\n  }\n}\n\nfunction postUpdateSelectWrapper() {\n  ReactDOMSelect.postUpdateWrapper(this);\n}\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special-case tags.\n\nvar omittedCloseTags = {\n  area: true,\n  base: true,\n  br: true,\n  col: true,\n  embed: true,\n  hr: true,\n  img: true,\n  input: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true\n  // NOTE: menuitem's close tag should be omitted, but that causes problems.\n};\n\nvar newlineEatingTags = {\n  listing: true,\n  pre: true,\n  textarea: true\n};\n\n// For HTML, certain tags cannot have children. This has the same purpose as\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nvar voidElementTags = _assign({\n  menuitem: true\n}, omittedCloseTags);\n\n// We accept any tag to be rendered but since this gets injected into arbitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\n\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nvar validatedTagCache = {};\nvar hasOwnProperty = {}.hasOwnProperty;\n\nfunction validateDangerousTag(tag) {\n  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n    !VALID_TAG_REGEX.test(tag) ? \"production\" !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;\n    validatedTagCache[tag] = true;\n  }\n}\n\nfunction isCustomComponent(tagName, props) {\n  return tagName.indexOf('-') >= 0 || props.is != null;\n}\n\nvar globalIdCounter = 1;\n\n/**\n * Creates a new React class that is idempotent and capable of containing other\n * React components. It accepts event listeners and DOM properties that are\n * valid according to `DOMProperty`.\n *\n *  - Event listeners: `onClick`, `onMouseDown`, etc.\n *  - DOM properties: `className`, `name`, `title`, etc.\n *\n * The `style` property functions differently from the DOM API. It accepts an\n * object mapping of style properties to values.\n *\n * @constructor ReactDOMComponent\n * @extends ReactMultiChild\n */\nfunction ReactDOMComponent(element) {\n  var tag = element.type;\n  validateDangerousTag(tag);\n  this._currentElement = element;\n  this._tag = tag.toLowerCase();\n  this._namespaceURI = null;\n  this._renderedChildren = null;\n  this._previousStyle = null;\n  this._previousStyleCopy = null;\n  this._hostNode = null;\n  this._hostParent = null;\n  this._rootNodeID = 0;\n  this._domID = 0;\n  this._hostContainerInfo = null;\n  this._wrapperState = null;\n  this._topLevelWrapper = null;\n  this._flags = 0;\n  if (\"production\" !== 'production') {\n    this._ancestorInfo = null;\n    setAndValidateContentChildDev.call(this, null);\n  }\n}\n\nReactDOMComponent.displayName = 'ReactDOMComponent';\n\nReactDOMComponent.Mixin = {\n  /**\n   * Generates root tag markup then recurses. This method has side effects and\n   * is not idempotent.\n   *\n   * @internal\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?ReactDOMComponent} the parent component instance\n   * @param {?object} info about the host container\n   * @param {object} context\n   * @return {string} The computed markup.\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    this._rootNodeID = globalIdCounter++;\n    this._domID = hostContainerInfo._idCounter++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var props = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'audio':\n      case 'form':\n      case 'iframe':\n      case 'img':\n      case 'link':\n      case 'object':\n      case 'source':\n      case 'video':\n        this._wrapperState = {\n          listeners: null\n        };\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'input':\n        ReactDOMInput.mountWrapper(this, props, hostParent);\n        props = ReactDOMInput.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trackInputValue, this);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'option':\n        ReactDOMOption.mountWrapper(this, props, hostParent);\n        props = ReactDOMOption.getHostProps(this, props);\n        break;\n      case 'select':\n        ReactDOMSelect.mountWrapper(this, props, hostParent);\n        props = ReactDOMSelect.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.mountWrapper(this, props, hostParent);\n        props = ReactDOMTextarea.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trackInputValue, this);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n    }\n\n    assertValidProps(this, props);\n\n    // We create tags in the namespace of their parent container, except HTML\n    // tags get no namespace.\n    var namespaceURI;\n    var parentTag;\n    if (hostParent != null) {\n      namespaceURI = hostParent._namespaceURI;\n      parentTag = hostParent._tag;\n    } else if (hostContainerInfo._tag) {\n      namespaceURI = hostContainerInfo._namespaceURI;\n      parentTag = hostContainerInfo._tag;\n    }\n    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {\n      namespaceURI = DOMNamespaces.html;\n    }\n    if (namespaceURI === DOMNamespaces.html) {\n      if (this._tag === 'svg') {\n        namespaceURI = DOMNamespaces.svg;\n      } else if (this._tag === 'math') {\n        namespaceURI = DOMNamespaces.mathml;\n      }\n    }\n    this._namespaceURI = namespaceURI;\n\n    if (\"production\" !== 'production') {\n      var parentInfo;\n      if (hostParent != null) {\n        parentInfo = hostParent._ancestorInfo;\n      } else if (hostContainerInfo._tag) {\n        parentInfo = hostContainerInfo._ancestorInfo;\n      }\n      if (parentInfo) {\n        // parentInfo should always be present except for the top-level\n        // component when server rendering\n        validateDOMNesting(this._tag, null, this, parentInfo);\n      }\n      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);\n    }\n\n    var mountImage;\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var el;\n      if (namespaceURI === DOMNamespaces.html) {\n        if (this._tag === 'script') {\n          // Create the script via .innerHTML so its \"parser-inserted\" flag is\n          // set to true and it does not execute\n          var div = ownerDocument.createElement('div');\n          var type = this._currentElement.type;\n          div.innerHTML = '<' + type + '></' + type + '>';\n          el = div.removeChild(div.firstChild);\n        } else if (props.is) {\n          el = ownerDocument.createElement(this._currentElement.type, props.is);\n        } else {\n          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.\n          // See discussion in https://github.com/facebook/react/pull/6896\n          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n          el = ownerDocument.createElement(this._currentElement.type);\n        }\n      } else {\n        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);\n      }\n      ReactDOMComponentTree.precacheNode(this, el);\n      this._flags |= Flags.hasCachedChildNodes;\n      if (!this._hostParent) {\n        DOMPropertyOperations.setAttributeForRoot(el);\n      }\n      this._updateDOMProperties(null, props, transaction);\n      var lazyTree = DOMLazyTree(el);\n      this._createInitialChildren(transaction, props, context, lazyTree);\n      mountImage = lazyTree;\n    } else {\n      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);\n      var tagContent = this._createContentMarkup(transaction, props, context);\n      if (!tagContent && omittedCloseTags[this._tag]) {\n        mountImage = tagOpen + '/>';\n      } else {\n        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';\n      }\n    }\n\n    switch (this._tag) {\n      case 'input':\n        transaction.getReactMountReady().enqueue(inputPostMount, this);\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'textarea':\n        transaction.getReactMountReady().enqueue(textareaPostMount, this);\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'select':\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'button':\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'option':\n        transaction.getReactMountReady().enqueue(optionPostMount, this);\n        break;\n    }\n\n    return mountImage;\n  },\n\n  /**\n   * Creates markup for the open tag and all attributes.\n   *\n   * This method has side effects because events get registered.\n   *\n   * Iterating over object properties is faster than iterating over arrays.\n   * @see http://jsperf.com/obj-vs-arr-iteration\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @return {string} Markup of opening tag.\n   */\n  _createOpenTagMarkupAndPutListeners: function (transaction, props) {\n    var ret = '<' + this._currentElement.type;\n\n    for (var propKey in props) {\n      if (!props.hasOwnProperty(propKey)) {\n        continue;\n      }\n      var propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (propValue) {\n          enqueuePutListener(this, propKey, propValue, transaction);\n        }\n      } else {\n        if (propKey === STYLE) {\n          if (propValue) {\n            if (\"production\" !== 'production') {\n              // See `_updateDOMProperties`. style block\n              this._previousStyle = propValue;\n            }\n            propValue = this._previousStyleCopy = _assign({}, props.style);\n          }\n          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);\n        }\n        var markup = null;\n        if (this._tag != null && isCustomComponent(this._tag, props)) {\n          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);\n          }\n        } else {\n          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n        }\n        if (markup) {\n          ret += ' ' + markup;\n        }\n      }\n    }\n\n    // For static pages, no need to put React ID and checksum. Saves lots of\n    // bytes.\n    if (transaction.renderToStaticMarkup) {\n      return ret;\n    }\n\n    if (!this._hostParent) {\n      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();\n    }\n    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);\n    return ret;\n  },\n\n  /**\n   * Creates markup for the content between the tags.\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @param {object} context\n   * @return {string} Content markup.\n   */\n  _createContentMarkup: function (transaction, props, context) {\n    var ret = '';\n\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        ret = innerHTML.__html;\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        // TODO: Validate that text is allowed as a child of this node\n        ret = escapeTextContentForBrowser(contentToUse);\n        if (\"production\" !== 'production') {\n          setAndValidateContentChildDev.call(this, contentToUse);\n        }\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        ret = mountImages.join('');\n      }\n    }\n    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\\n') {\n      // text/html ignores the first character in these tags if it's a newline\n      // Prefer to break application/xml over text/html (for now) by adding\n      // a newline specifically to get eaten by the parser. (Alternately for\n      // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n      // \\r is normalized out by HTMLTextAreaElement#value.)\n      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n      // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n      return '\\n' + ret;\n    } else {\n      return ret;\n    }\n  },\n\n  _createInitialChildren: function (transaction, props, context, lazyTree) {\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      // TODO: Validate that text is allowed as a child of this node\n      if (contentToUse != null) {\n        // Avoid setting textContent when the text is empty. In IE11 setting\n        // textContent on a text area will cause the placeholder to not\n        // show within the textarea until it has been focused and blurred again.\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n        if (contentToUse !== '') {\n          if (\"production\" !== 'production') {\n            setAndValidateContentChildDev.call(this, contentToUse);\n          }\n          DOMLazyTree.queueText(lazyTree, contentToUse);\n        }\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        for (var i = 0; i < mountImages.length; i++) {\n          DOMLazyTree.queueChild(lazyTree, mountImages[i]);\n        }\n      }\n    }\n  },\n\n  /**\n   * Receives a next element and updates the component.\n   *\n   * @internal\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} context\n   */\n  receiveComponent: function (nextElement, transaction, context) {\n    var prevElement = this._currentElement;\n    this._currentElement = nextElement;\n    this.updateComponent(transaction, prevElement, nextElement, context);\n  },\n\n  /**\n   * Updates a DOM component after it has already been allocated and\n   * attached to the DOM. Reconciles the root DOM node, then recurses.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevElement\n   * @param {ReactElement} nextElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevElement, nextElement, context) {\n    var lastProps = prevElement.props;\n    var nextProps = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'input':\n        lastProps = ReactDOMInput.getHostProps(this, lastProps);\n        nextProps = ReactDOMInput.getHostProps(this, nextProps);\n        break;\n      case 'option':\n        lastProps = ReactDOMOption.getHostProps(this, lastProps);\n        nextProps = ReactDOMOption.getHostProps(this, nextProps);\n        break;\n      case 'select':\n        lastProps = ReactDOMSelect.getHostProps(this, lastProps);\n        nextProps = ReactDOMSelect.getHostProps(this, nextProps);\n        break;\n      case 'textarea':\n        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);\n        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);\n        break;\n    }\n\n    assertValidProps(this, nextProps);\n    this._updateDOMProperties(lastProps, nextProps, transaction);\n    this._updateDOMChildren(lastProps, nextProps, transaction, context);\n\n    switch (this._tag) {\n      case 'input':\n        // Update the wrapper around inputs *after* updating props. This has to\n        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations\n        // raise warnings and prevent the new value from being assigned.\n        ReactDOMInput.updateWrapper(this);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.updateWrapper(this);\n        break;\n      case 'select':\n        // <select> value update needs to occur after <option> children\n        // reconciliation\n        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);\n        break;\n    }\n  },\n\n  /**\n   * Reconciles the properties by detecting differences in property values and\n   * updating the DOM as necessary. This function is probably the single most\n   * critical path for performance optimization.\n   *\n   * TODO: Benchmark whether checking for changed values in memory actually\n   *       improves performance (especially statically positioned elements).\n   * TODO: Benchmark the effects of putting this at the top since 99% of props\n   *       do not change for a given reconciliation.\n   * TODO: Benchmark areas that can be improved with caching.\n   *\n   * @private\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {?DOMElement} node\n   */\n  _updateDOMProperties: function (lastProps, nextProps, transaction) {\n    var propKey;\n    var styleName;\n    var styleUpdates;\n    for (propKey in lastProps) {\n      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        var lastStyle = this._previousStyleCopy;\n        for (styleName in lastStyle) {\n          if (lastStyle.hasOwnProperty(styleName)) {\n            styleUpdates = styleUpdates || {};\n            styleUpdates[styleName] = '';\n          }\n        }\n        this._previousStyleCopy = null;\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (lastProps[propKey]) {\n          // Only call deleteListener if there was a listener previously or\n          // else willDeleteListener gets called when there wasn't actually a\n          // listener (e.g., onClick={null})\n          deleteListener(this, propKey);\n        }\n      } else if (isCustomComponent(this._tag, lastProps)) {\n        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);\n        }\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);\n      }\n    }\n    for (propKey in nextProps) {\n      var nextProp = nextProps[propKey];\n      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;\n      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        if (nextProp) {\n          if (\"production\" !== 'production') {\n            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);\n            this._previousStyle = nextProp;\n          }\n          nextProp = this._previousStyleCopy = _assign({}, nextProp);\n        } else {\n          this._previousStyleCopy = null;\n        }\n        if (lastProp) {\n          // Unset styles on `lastProp` but not on `nextProp`.\n          for (styleName in lastProp) {\n            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `lastProp`.\n          for (styleName in nextProp) {\n            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n          styleUpdates = nextProp;\n        }\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (nextProp) {\n          enqueuePutListener(this, propKey, nextProp, transaction);\n        } else if (lastProp) {\n          deleteListener(this, propKey);\n        }\n      } else if (isCustomComponent(this._tag, nextProps)) {\n        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);\n        }\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        var node = getNode(this);\n        // If we're updating to null or undefined, we should remove the property\n        // from the DOM node instead of inadvertently setting to a string. This\n        // brings us in line with the same behavior we have on initial render.\n        if (nextProp != null) {\n          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);\n        } else {\n          DOMPropertyOperations.deleteValueForProperty(node, propKey);\n        }\n      }\n    }\n    if (styleUpdates) {\n      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);\n    }\n  },\n\n  /**\n   * Reconciles the children with the various properties that affect the\n   * children content.\n   *\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   */\n  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {\n    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\n    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;\n    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;\n\n    // Note the use of `!=` which checks for null or undefined.\n    var lastChildren = lastContent != null ? null : lastProps.children;\n    var nextChildren = nextContent != null ? null : nextProps.children;\n\n    // If we're switching from children to content/html or vice versa, remove\n    // the old content\n    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n    if (lastChildren != null && nextChildren == null) {\n      this.updateChildren(null, transaction, context);\n    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n      this.updateTextContent('');\n      if (\"production\" !== 'production') {\n        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n      }\n    }\n\n    if (nextContent != null) {\n      if (lastContent !== nextContent) {\n        this.updateTextContent('' + nextContent);\n        if (\"production\" !== 'production') {\n          setAndValidateContentChildDev.call(this, nextContent);\n        }\n      }\n    } else if (nextHtml != null) {\n      if (lastHtml !== nextHtml) {\n        this.updateMarkup('' + nextHtml);\n      }\n      if (\"production\" !== 'production') {\n        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n      }\n    } else if (nextChildren != null) {\n      if (\"production\" !== 'production') {\n        setAndValidateContentChildDev.call(this, null);\n      }\n\n      this.updateChildren(nextChildren, transaction, context);\n    }\n  },\n\n  getHostNode: function () {\n    return getNode(this);\n  },\n\n  /**\n   * Destroys all event registrations for this instance. Does not remove from\n   * the DOM. That must be done by the parent.\n   *\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    switch (this._tag) {\n      case 'audio':\n      case 'form':\n      case 'iframe':\n      case 'img':\n      case 'link':\n      case 'object':\n      case 'source':\n      case 'video':\n        var listeners = this._wrapperState.listeners;\n        if (listeners) {\n          for (var i = 0; i < listeners.length; i++) {\n            listeners[i].remove();\n          }\n        }\n        break;\n      case 'input':\n      case 'textarea':\n        inputValueTracking.stopTracking(this);\n        break;\n      case 'html':\n      case 'head':\n      case 'body':\n        /**\n         * Components like <html> <head> and <body> can't be removed or added\n         * easily in a cross-browser way, however it's valuable to be able to\n         * take advantage of React's reconciliation for styling and <title>\n         * management. So we just document it and throw in dangerous cases.\n         */\n        !false ? \"production\" !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;\n        break;\n    }\n\n    this.unmountChildren(safely);\n    ReactDOMComponentTree.uncacheNode(this);\n    EventPluginHub.deleteAllListeners(this);\n    this._rootNodeID = 0;\n    this._domID = 0;\n    this._wrapperState = null;\n\n    if (\"production\" !== 'production') {\n      setAndValidateContentChildDev.call(this, null);\n    }\n  },\n\n  getPublicInstance: function () {\n    return getNode(this);\n  }\n};\n\n_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);\n\nmodule.exports = ReactDOMComponent;","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMComponentFlags = {\n  hasCachedChildNodes: 1 << 0\n};\n\nmodule.exports = ReactDOMComponentFlags;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactDOMComponentFlags = require('./ReactDOMComponentFlags');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar Flags = ReactDOMComponentFlags;\n\nvar internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);\n\n/**\n * Check if a given node should be cached.\n */\nfunction shouldPrecacheNode(node, nodeID) {\n  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';\n}\n\n/**\n * Drill down (through composites and empty components) until we get a host or\n * host text component.\n *\n * This is pretty polymorphic but unavoidable with the current structure we have\n * for `_renderedChildren`.\n */\nfunction getRenderedHostOrTextFromComponent(component) {\n  var rendered;\n  while (rendered = component._renderedComponent) {\n    component = rendered;\n  }\n  return component;\n}\n\n/**\n * Populate `_hostNode` on the rendered host/text component with the given\n * DOM node. The passed `inst` can be a composite.\n */\nfunction precacheNode(inst, node) {\n  var hostInst = getRenderedHostOrTextFromComponent(inst);\n  hostInst._hostNode = node;\n  node[internalInstanceKey] = hostInst;\n}\n\nfunction uncacheNode(inst) {\n  var node = inst._hostNode;\n  if (node) {\n    delete node[internalInstanceKey];\n    inst._hostNode = null;\n  }\n}\n\n/**\n * Populate `_hostNode` on each child of `inst`, assuming that the children\n * match up with the DOM (element) children of `node`.\n *\n * We cache entire levels at once to avoid an n^2 problem where we access the\n * children of a node sequentially and have to walk from the start to our target\n * node every time.\n *\n * Since we update `_renderedChildren` and the actual DOM at (slightly)\n * different times, we could race here and see a newer `_renderedChildren` than\n * the DOM nodes we see. To avoid this, ReactMultiChild calls\n * `prepareToManageChildren` before we change `_renderedChildren`, at which\n * time the container's child nodes are always cached (until it unmounts).\n */\nfunction precacheChildNodes(inst, node) {\n  if (inst._flags & Flags.hasCachedChildNodes) {\n    return;\n  }\n  var children = inst._renderedChildren;\n  var childNode = node.firstChild;\n  outer: for (var name in children) {\n    if (!children.hasOwnProperty(name)) {\n      continue;\n    }\n    var childInst = children[name];\n    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;\n    if (childID === 0) {\n      // We're currently unmounting this child in ReactMultiChild; skip it.\n      continue;\n    }\n    // We assume the child nodes are in the same order as the child instances.\n    for (; childNode !== null; childNode = childNode.nextSibling) {\n      if (shouldPrecacheNode(childNode, childID)) {\n        precacheNode(childInst, childNode);\n        continue outer;\n      }\n    }\n    // We reached the end of the DOM children without finding an ID match.\n    !false ? \"production\" !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;\n  }\n  inst._flags |= Flags.hasCachedChildNodes;\n}\n\n/**\n * Given a DOM node, return the closest ReactDOMComponent or\n * ReactDOMTextComponent instance ancestor.\n */\nfunction getClosestInstanceFromNode(node) {\n  if (node[internalInstanceKey]) {\n    return node[internalInstanceKey];\n  }\n\n  // Walk up the tree until we find an ancestor whose instance we have cached.\n  var parents = [];\n  while (!node[internalInstanceKey]) {\n    parents.push(node);\n    if (node.parentNode) {\n      node = node.parentNode;\n    } else {\n      // Top of the tree. This node must not be part of a React tree (or is\n      // unmounted, potentially).\n      return null;\n    }\n  }\n\n  var closest;\n  var inst;\n  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {\n    closest = inst;\n    if (parents.length) {\n      precacheChildNodes(inst, node);\n    }\n  }\n\n  return closest;\n}\n\n/**\n * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n * instance, or null if the node was not rendered by this React.\n */\nfunction getInstanceFromNode(node) {\n  var inst = getClosestInstanceFromNode(node);\n  if (inst != null && inst._hostNode === node) {\n    return inst;\n  } else {\n    return null;\n  }\n}\n\n/**\n * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n * DOM node.\n */\nfunction getNodeFromInstance(inst) {\n  // Without this first invariant, passing a non-DOM-component triggers the next\n  // invariant for a missing parent, which is super confusing.\n  !(inst._hostNode !== undefined) ? \"production\" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\n  if (inst._hostNode) {\n    return inst._hostNode;\n  }\n\n  // Walk up the tree until we find an ancestor whose DOM node we have cached.\n  var parents = [];\n  while (!inst._hostNode) {\n    parents.push(inst);\n    !inst._hostParent ? \"production\" !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;\n    inst = inst._hostParent;\n  }\n\n  // Now parents contains each ancestor that does *not* have a cached native\n  // node, and `inst` is the deepest ancestor that does.\n  for (; parents.length; inst = parents.pop()) {\n    precacheChildNodes(inst, inst._hostNode);\n  }\n\n  return inst._hostNode;\n}\n\nvar ReactDOMComponentTree = {\n  getClosestInstanceFromNode: getClosestInstanceFromNode,\n  getInstanceFromNode: getInstanceFromNode,\n  getNodeFromInstance: getNodeFromInstance,\n  precacheChildNodes: precacheChildNodes,\n  precacheNode: precacheNode,\n  uncacheNode: uncacheNode\n};\n\nmodule.exports = ReactDOMComponentTree;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar validateDOMNesting = require('./validateDOMNesting');\n\nvar DOC_NODE_TYPE = 9;\n\nfunction ReactDOMContainerInfo(topLevelWrapper, node) {\n  var info = {\n    _topLevelWrapper: topLevelWrapper,\n    _idCounter: 1,\n    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,\n    _node: node,\n    _tag: node ? node.nodeName.toLowerCase() : null,\n    _namespaceURI: node ? node.namespaceURI : null\n  };\n  if (\"production\" !== 'production') {\n    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;\n  }\n  return info;\n}\n\nmodule.exports = ReactDOMContainerInfo;","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar ReactDOMEmptyComponent = function (instantiate) {\n  // ReactCompositeComponent uses this:\n  this._currentElement = null;\n  // ReactDOMComponentTree uses these:\n  this._hostNode = null;\n  this._hostParent = null;\n  this._hostContainerInfo = null;\n  this._domID = 0;\n};\n_assign(ReactDOMEmptyComponent.prototype, {\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var domID = hostContainerInfo._idCounter++;\n    this._domID = domID;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var nodeValue = ' react-empty: ' + this._domID + ' ';\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var node = ownerDocument.createComment(nodeValue);\n      ReactDOMComponentTree.precacheNode(this, node);\n      return DOMLazyTree(node);\n    } else {\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd insert a comment node, but since this is a situation\n        // where React won't take over (static pages), we can simply return\n        // nothing.\n        return '';\n      }\n      return '<!--' + nodeValue + '-->';\n    }\n  },\n  receiveComponent: function () {},\n  getHostNode: function () {\n    return ReactDOMComponentTree.getNodeFromInstance(this);\n  },\n  unmountComponent: function () {\n    ReactDOMComponentTree.uncacheNode(this);\n  }\n});\n\nmodule.exports = ReactDOMEmptyComponent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMFeatureFlags = {\n  useCreateElement: true,\n  useFiber: false\n};\n\nmodule.exports = ReactDOMFeatureFlags;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\n/**\n * Operations used to process updates to DOM nodes.\n */\nvar ReactDOMIDOperations = {\n  /**\n   * Updates a component's children by processing a series of updates.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {\n    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);\n    DOMChildrenOperations.processUpdates(node, updates);\n  }\n};\n\nmodule.exports = ReactDOMIDOperations;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnCheckedLink = false;\nvar didWarnValueDefaultValue = false;\nvar didWarnCheckedDefaultChecked = false;\nvar didWarnControlledToUncontrolled = false;\nvar didWarnUncontrolledToControlled = false;\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMInput.updateWrapper(this);\n  }\n}\n\nfunction isControlled(props) {\n  var usesChecked = props.type === 'checkbox' || props.type === 'radio';\n  return usesChecked ? props.checked != null : props.value != null;\n}\n\n/**\n * Implements an <input> host component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\nvar ReactDOMInput = {\n  getHostProps: function (inst, props) {\n    var value = LinkedValueUtils.getValue(props);\n    var checked = LinkedValueUtils.getChecked(props);\n\n    var hostProps = _assign({\n      // Make sure we set .type before any other properties (setting .value\n      // before .type means .value is lost in IE11 and below)\n      type: undefined,\n      // Make sure we set .step before .value (setting .value before .step\n      // means .value is rounded on mount, based upon step precision)\n      step: undefined,\n      // Make sure we set .min & .max before .value (to ensure proper order\n      // in corner cases such as min or max deriving from value, e.g. Issue #7170)\n      min: undefined,\n      max: undefined\n    }, props, {\n      defaultChecked: undefined,\n      defaultValue: undefined,\n      value: value != null ? value : inst._wrapperState.initialValue,\n      checked: checked != null ? checked : inst._wrapperState.initialChecked,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return hostProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (\"production\" !== 'production') {\n      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\n\n      var owner = inst._currentElement._owner;\n\n      if (props.valueLink !== undefined && !didWarnValueLink) {\n        \"production\" !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnValueLink = true;\n      }\n      if (props.checkedLink !== undefined && !didWarnCheckedLink) {\n        \"production\" !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnCheckedLink = true;\n      }\n      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {\n        \"production\" !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnCheckedDefaultChecked = true;\n      }\n      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n        \"production\" !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnValueDefaultValue = true;\n      }\n    }\n\n    var defaultValue = props.defaultValue;\n    inst._wrapperState = {\n      initialChecked: props.checked != null ? props.checked : props.defaultChecked,\n      initialValue: props.value != null ? props.value : defaultValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst),\n      controlled: isControlled(props)\n    };\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    if (\"production\" !== 'production') {\n      var controlled = isControlled(props);\n      var owner = inst._currentElement._owner;\n\n      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {\n        \"production\" !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnUncontrolledToControlled = true;\n      }\n      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {\n        \"production\" !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnControlledToUncontrolled = true;\n      }\n    }\n\n    // TODO: Shouldn't this be getChecked(props)?\n    var checked = props.checked;\n    if (checked != null) {\n      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);\n    }\n\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      if (value === 0 && node.value === '') {\n        node.value = '0';\n        // Note: IE9 reports a number inputs as 'text', so check props instead.\n      } else if (props.type === 'number') {\n        // Simulate `input.valueAsNumber`. IE9 does not support it\n        var valueAsNumber = parseFloat(node.value, 10) || 0;\n\n        if (\n        // eslint-disable-next-line\n        value != valueAsNumber ||\n        // eslint-disable-next-line\n        value == valueAsNumber && node.value != value) {\n          // Cast `value` to a string to ensure the value is set correctly. While\n          // browsers typically do this as necessary, jsdom doesn't.\n          node.value = '' + value;\n        }\n      } else if (node.value !== '' + value) {\n        // Cast `value` to a string to ensure the value is set correctly. While\n        // browsers typically do this as necessary, jsdom doesn't.\n        node.value = '' + value;\n      }\n    } else {\n      if (props.value == null && props.defaultValue != null) {\n        // In Chrome, assigning defaultValue to certain input types triggers input validation.\n        // For number inputs, the display value loses trailing decimal points. For email inputs,\n        // Chrome raises \"The specified value <x> is not a valid email address\".\n        //\n        // Here we check to see if the defaultValue has actually changed, avoiding these problems\n        // when the user is inputting text\n        //\n        // https://github.com/facebook/react/issues/7253\n        if (node.defaultValue !== '' + props.defaultValue) {\n          node.defaultValue = '' + props.defaultValue;\n        }\n      }\n      if (props.checked == null && props.defaultChecked != null) {\n        node.defaultChecked = !!props.defaultChecked;\n      }\n    }\n  },\n\n  postMountWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // This is in postMount because we need access to the DOM node, which is not\n    // available until after the component has mounted.\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\n    // Detach value from defaultValue. We won't do anything if we're working on\n    // submit or reset inputs as those values & defaultValues are linked. They\n    // are not resetable nodes so this operation doesn't matter and actually\n    // removes browser-default values (eg \"Submit Query\") when no value is\n    // provided.\n\n    switch (props.type) {\n      case 'submit':\n      case 'reset':\n        break;\n      case 'color':\n      case 'date':\n      case 'datetime':\n      case 'datetime-local':\n      case 'month':\n      case 'time':\n      case 'week':\n        // This fixes the no-show issue on iOS Safari and Android Chrome:\n        // https://github.com/facebook/react/issues/7233\n        node.value = '';\n        node.value = node.defaultValue;\n        break;\n      default:\n        node.value = node.value;\n        break;\n    }\n\n    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n    // this is needed to work around a chrome bug where setting defaultChecked\n    // will sometimes influence the value of checked (even after detachment).\n    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n    // We need to temporarily unset name to avoid disrupting radio button groups.\n    var name = node.name;\n    if (name !== '') {\n      node.name = '';\n    }\n    node.defaultChecked = !node.defaultChecked;\n    node.defaultChecked = !node.defaultChecked;\n    if (name !== '') {\n      node.name = name;\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  // Here we use asap to wait until all updates have propagated, which\n  // is important when using controlled components within layers:\n  // https://github.com/facebook/react/issues/1698\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n\n  var name = props.name;\n  if (props.type === 'radio' && name != null) {\n    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);\n    var queryRoot = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = queryRoot.parentNode;\n    }\n\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form, let's just use the global\n    // `querySelectorAll` to ensure we don't miss anything.\n    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n    for (var i = 0; i < group.length; i++) {\n      var otherNode = group[i];\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      }\n      // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React radio buttons with non-React ones.\n      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);\n      !otherInstance ? \"production\" !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;\n      // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n    }\n  }\n\n  return returnValue;\n}\n\nmodule.exports = ReactDOMInput;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n\nvar warning = require('fbjs/lib/warning');\n\nvar warnedProperties = {};\nvar rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');\n\nfunction validateProperty(tagName, name, debugID) {\n  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {\n    return true;\n  }\n\n  if (rARIA.test(name)) {\n    var lowerCasedName = name.toLowerCase();\n    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;\n\n    // If this is an aria-* attribute, but is not listed in the known DOM\n    // DOM properties, then it is an invalid aria-* attribute.\n    if (standardName == null) {\n      warnedProperties[name] = true;\n      return false;\n    }\n    // aria-* attributes should be lowercase; suggest the lowercase version.\n    if (name !== standardName) {\n      \"production\" !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n      warnedProperties[name] = true;\n      return true;\n    }\n  }\n\n  return true;\n}\n\nfunction warnInvalidARIAProps(debugID, element) {\n  var invalidProps = [];\n\n  for (var key in element.props) {\n    var isValid = validateProperty(element.type, key, debugID);\n    if (!isValid) {\n      invalidProps.push(key);\n    }\n  }\n\n  var unknownPropString = invalidProps.map(function (prop) {\n    return '`' + prop + '`';\n  }).join(', ');\n\n  if (invalidProps.length === 1) {\n    \"production\" !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n  } else if (invalidProps.length > 1) {\n    \"production\" !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n  }\n}\n\nfunction handleElement(debugID, element) {\n  if (element == null || typeof element.type !== 'string') {\n    return;\n  }\n  if (element.type.indexOf('-') >= 0 || element.props.is) {\n    return;\n  }\n\n  warnInvalidARIAProps(debugID, element);\n}\n\nvar ReactDOMInvalidARIAHook = {\n  onBeforeMountComponent: function (debugID, element) {\n    if (\"production\" !== 'production') {\n      handleElement(debugID, element);\n    }\n  },\n  onBeforeUpdateComponent: function (debugID, element) {\n    if (\"production\" !== 'production') {\n      handleElement(debugID, element);\n    }\n  }\n};\n\nmodule.exports = ReactDOMInvalidARIAHook;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueNull = false;\n\nfunction handleElement(debugID, element) {\n  if (element == null) {\n    return;\n  }\n  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {\n    return;\n  }\n  if (element.props != null && element.props.value === null && !didWarnValueNull) {\n    \"production\" !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n\n    didWarnValueNull = true;\n  }\n}\n\nvar ReactDOMNullInputValuePropHook = {\n  onBeforeMountComponent: function (debugID, element) {\n    handleElement(debugID, element);\n  },\n  onBeforeUpdateComponent: function (debugID, element) {\n    handleElement(debugID, element);\n  }\n};\n\nmodule.exports = ReactDOMNullInputValuePropHook;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar React = require('react/lib/React');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMSelect = require('./ReactDOMSelect');\n\nvar warning = require('fbjs/lib/warning');\nvar didWarnInvalidOptionChildren = false;\n\nfunction flattenChildren(children) {\n  var content = '';\n\n  // Flatten children and warn if they aren't strings or numbers;\n  // invalid types are ignored.\n  React.Children.forEach(children, function (child) {\n    if (child == null) {\n      return;\n    }\n    if (typeof child === 'string' || typeof child === 'number') {\n      content += child;\n    } else if (!didWarnInvalidOptionChildren) {\n      didWarnInvalidOptionChildren = true;\n      \"production\" !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;\n    }\n  });\n\n  return content;\n}\n\n/**\n * Implements an <option> host component that warns when `selected` is set.\n */\nvar ReactDOMOption = {\n  mountWrapper: function (inst, props, hostParent) {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (\"production\" !== 'production') {\n      \"production\" !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;\n    }\n\n    // Look up whether this option is 'selected'\n    var selectValue = null;\n    if (hostParent != null) {\n      var selectParent = hostParent;\n\n      if (selectParent._tag === 'optgroup') {\n        selectParent = selectParent._hostParent;\n      }\n\n      if (selectParent != null && selectParent._tag === 'select') {\n        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);\n      }\n    }\n\n    // If the value is null (e.g., no specified value or after initial mount)\n    // or missing (e.g., for <datalist>), we don't change props.selected\n    var selected = null;\n    if (selectValue != null) {\n      var value;\n      if (props.value != null) {\n        value = props.value + '';\n      } else {\n        value = flattenChildren(props.children);\n      }\n      selected = false;\n      if (Array.isArray(selectValue)) {\n        // multiple\n        for (var i = 0; i < selectValue.length; i++) {\n          if ('' + selectValue[i] === value) {\n            selected = true;\n            break;\n          }\n        }\n      } else {\n        selected = '' + selectValue === value;\n      }\n    }\n\n    inst._wrapperState = { selected: selected };\n  },\n\n  postMountWrapper: function (inst) {\n    // value=\"\" should make a value attribute (#6219)\n    var props = inst._currentElement.props;\n    if (props.value != null) {\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      node.setAttribute('value', props.value);\n    }\n  },\n\n  getHostProps: function (inst, props) {\n    var hostProps = _assign({ selected: undefined, children: undefined }, props);\n\n    // Read state only from initial mount because <select> updates value\n    // manually; we need the initial state only for server rendering\n    if (inst._wrapperState.selected != null) {\n      hostProps.selected = inst._wrapperState.selected;\n    }\n\n    var content = flattenChildren(props.children);\n\n    if (content) {\n      hostProps.children = content;\n    }\n\n    return hostProps;\n  }\n};\n\nmodule.exports = ReactDOMOption;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnValueDefaultValue = false;\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n    this._wrapperState.pendingUpdate = false;\n\n    var props = this._currentElement.props;\n    var value = LinkedValueUtils.getValue(props);\n\n    if (value != null) {\n      updateOptions(this, Boolean(props.multiple), value);\n    }\n  }\n}\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nvar valuePropNames = ['value', 'defaultValue'];\n\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\nfunction checkSelectPropTypes(inst, props) {\n  var owner = inst._currentElement._owner;\n  LinkedValueUtils.checkPropTypes('select', props, owner);\n\n  if (props.valueLink !== undefined && !didWarnValueLink) {\n    \"production\" !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;\n    didWarnValueLink = true;\n  }\n\n  for (var i = 0; i < valuePropNames.length; i++) {\n    var propName = valuePropNames[i];\n    if (props[propName] == null) {\n      continue;\n    }\n    var isArray = Array.isArray(props[propName]);\n    if (props.multiple && !isArray) {\n      \"production\" !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n    } else if (!props.multiple && isArray) {\n      \"production\" !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n    }\n  }\n}\n\n/**\n * @param {ReactDOMComponent} inst\n * @param {boolean} multiple\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\nfunction updateOptions(inst, multiple, propValue) {\n  var selectedValue, i;\n  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;\n\n  if (multiple) {\n    selectedValue = {};\n    for (i = 0; i < propValue.length; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n    for (i = 0; i < options.length; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n    for (i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> host component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\nvar ReactDOMSelect = {\n  getHostProps: function (inst, props) {\n    return _assign({}, props, {\n      onChange: inst._wrapperState.onChange,\n      value: undefined\n    });\n  },\n\n  mountWrapper: function (inst, props) {\n    if (\"production\" !== 'production') {\n      checkSelectPropTypes(inst, props);\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    inst._wrapperState = {\n      pendingUpdate: false,\n      initialValue: value != null ? value : props.defaultValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst),\n      wasMultiple: Boolean(props.multiple)\n    };\n\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n      \"production\" !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n      didWarnValueDefaultValue = true;\n    }\n  },\n\n  getSelectValueContext: function (inst) {\n    // ReactDOMOption looks at this initial value so the initial generated\n    // markup has correct `selected` attributes\n    return inst._wrapperState.initialValue;\n  },\n\n  postUpdateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // After the initial mount, we control selected-ness manually so don't pass\n    // this value down\n    inst._wrapperState.initialValue = undefined;\n\n    var wasMultiple = inst._wrapperState.wasMultiple;\n    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      inst._wrapperState.pendingUpdate = false;\n      updateOptions(inst, Boolean(props.multiple), value);\n    } else if (wasMultiple !== Boolean(props.multiple)) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (props.defaultValue != null) {\n        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n      }\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  if (this._rootNodeID) {\n    this._wrapperState.pendingUpdate = true;\n  }\n  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMSelect;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar getNodeForCharacterOffset = require('./getNodeForCharacterOffset');\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n  // divs do not seem to expose properties, triggering a \"Permission denied\n  // error\" if any of its properties are accessed. The only seemingly possible\n  // way to avoid erroring is to access a property that typically works for\n  // non-anonymous divs and catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n  try {\n    /* eslint-disable no-unused-expressions */\n    currentRange.startContainer.nodeType;\n    currentRange.endContainer.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (offsets.end === undefined) {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programmatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar invariant = require('fbjs/lib/invariant');\nvar validateDOMNesting = require('./validateDOMNesting');\n\n/**\n * Text nodes violate a couple assumptions that React makes about components:\n *\n *  - When mounting text into the DOM, adjacent text nodes are merged.\n *  - Text nodes cannot be assigned a React root ID.\n *\n * This component is used to wrap strings between comment nodes so that they\n * can undergo the same reconciliation that is applied to elements.\n *\n * TODO: Investigate representing React components in the DOM with text nodes.\n *\n * @class ReactDOMTextComponent\n * @extends ReactComponent\n * @internal\n */\nvar ReactDOMTextComponent = function (text) {\n  // TODO: This is really a ReactText (ReactNode), not a ReactElement\n  this._currentElement = text;\n  this._stringText = '' + text;\n  // ReactDOMComponentTree uses these:\n  this._hostNode = null;\n  this._hostParent = null;\n\n  // Properties\n  this._domID = 0;\n  this._mountIndex = 0;\n  this._closingComment = null;\n  this._commentNodes = null;\n};\n\n_assign(ReactDOMTextComponent.prototype, {\n  /**\n   * Creates the markup for this text node. This node is not intended to have\n   * any features besides containing text content.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup for this text node.\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    if (\"production\" !== 'production') {\n      var parentInfo;\n      if (hostParent != null) {\n        parentInfo = hostParent._ancestorInfo;\n      } else if (hostContainerInfo != null) {\n        parentInfo = hostContainerInfo._ancestorInfo;\n      }\n      if (parentInfo) {\n        // parentInfo should always be present except for the top-level\n        // component when server rendering\n        validateDOMNesting(null, this._stringText, this, parentInfo);\n      }\n    }\n\n    var domID = hostContainerInfo._idCounter++;\n    var openingValue = ' react-text: ' + domID + ' ';\n    var closingValue = ' /react-text ';\n    this._domID = domID;\n    this._hostParent = hostParent;\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var openingComment = ownerDocument.createComment(openingValue);\n      var closingComment = ownerDocument.createComment(closingValue);\n      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());\n      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));\n      if (this._stringText) {\n        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));\n      }\n      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));\n      ReactDOMComponentTree.precacheNode(this, openingComment);\n      this._closingComment = closingComment;\n      return lazyTree;\n    } else {\n      var escapedText = escapeTextContentForBrowser(this._stringText);\n\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd wrap this between comment nodes for the reasons stated\n        // above, but since this is a situation where React won't take over\n        // (static pages), we can simply return the text as it is.\n        return escapedText;\n      }\n\n      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';\n    }\n  },\n\n  /**\n   * Updates this component by updating the text content.\n   *\n   * @param {ReactText} nextText The next text content\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  receiveComponent: function (nextText, transaction) {\n    if (nextText !== this._currentElement) {\n      this._currentElement = nextText;\n      var nextStringText = '' + nextText;\n      if (nextStringText !== this._stringText) {\n        // TODO: Save this as pending props and use performUpdateIfNecessary\n        // and/or updateComponent to do the actual update for consistency with\n        // other component types?\n        this._stringText = nextStringText;\n        var commentNodes = this.getHostNode();\n        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);\n      }\n    }\n  },\n\n  getHostNode: function () {\n    var hostNode = this._commentNodes;\n    if (hostNode) {\n      return hostNode;\n    }\n    if (!this._closingComment) {\n      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);\n      var node = openingComment.nextSibling;\n      while (true) {\n        !(node != null) ? \"production\" !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;\n        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {\n          this._closingComment = node;\n          break;\n        }\n        node = node.nextSibling;\n      }\n    }\n    hostNode = [this._hostNode, this._closingComment];\n    this._commentNodes = hostNode;\n    return hostNode;\n  },\n\n  unmountComponent: function () {\n    this._closingComment = null;\n    this._commentNodes = null;\n    ReactDOMComponentTree.uncacheNode(this);\n  }\n});\n\nmodule.exports = ReactDOMTextComponent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnValDefaultVal = false;\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMTextarea.updateWrapper(this);\n  }\n}\n\n/**\n * Implements a <textarea> host component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nvar ReactDOMTextarea = {\n  getHostProps: function (inst, props) {\n    !(props.dangerouslySetInnerHTML == null) ? \"production\" !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;\n\n    // Always set children to the same thing. In IE9, the selection range will\n    // get reset if `textContent` is mutated.  We could add a check in setTextContent\n    // to only set the value if/when the value differs from the node value (which would\n    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.\n    // The value can be a boolean or object so that's why it's forced to be a string.\n    var hostProps = _assign({}, props, {\n      value: undefined,\n      defaultValue: undefined,\n      children: '' + inst._wrapperState.initialValue,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return hostProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (\"production\" !== 'production') {\n      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\n      if (props.valueLink !== undefined && !didWarnValueLink) {\n        \"production\" !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnValueLink = true;\n      }\n      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {\n        \"production\" !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n        didWarnValDefaultVal = true;\n      }\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    var initialValue = value;\n\n    // Only bother fetching default value if we're going to use it\n    if (value == null) {\n      var defaultValue = props.defaultValue;\n      // TODO (yungsters): Remove support for children content in <textarea>.\n      var children = props.children;\n      if (children != null) {\n        if (\"production\" !== 'production') {\n          \"production\" !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;\n        }\n        !(defaultValue == null) ? \"production\" !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;\n        if (Array.isArray(children)) {\n          !(children.length <= 1) ? \"production\" !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;\n          children = children[0];\n        }\n\n        defaultValue = '' + children;\n      }\n      if (defaultValue == null) {\n        defaultValue = '';\n      }\n      initialValue = defaultValue;\n    }\n\n    inst._wrapperState = {\n      initialValue: '' + initialValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst)\n    };\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      var newValue = '' + value;\n\n      // To avoid side effects (such as losing text selection), only set value if changed\n      if (newValue !== node.value) {\n        node.value = newValue;\n      }\n      if (props.defaultValue == null) {\n        node.defaultValue = newValue;\n      }\n    }\n    if (props.defaultValue != null) {\n      node.defaultValue = props.defaultValue;\n    }\n  },\n\n  postMountWrapper: function (inst) {\n    // This is in postMount because we need access to the DOM node, which is not\n    // available until after the component has mounted.\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var textContent = node.textContent;\n\n    // Only set node.value if textContent is equal to the expected\n    // initial value. In IE10/IE11 there is a bug where the placeholder attribute\n    // will populate textContent as well.\n    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/\n    if (textContent === inst._wrapperState.initialValue) {\n      node.value = textContent;\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMTextarea;","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\nfunction getLowestCommonAncestor(instA, instB) {\n  !('_hostNode' in instA) ? \"production\" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n  !('_hostNode' in instB) ? \"production\" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\n  var depthA = 0;\n  for (var tempA = instA; tempA; tempA = tempA._hostParent) {\n    depthA++;\n  }\n  var depthB = 0;\n  for (var tempB = instB; tempB; tempB = tempB._hostParent) {\n    depthB++;\n  }\n\n  // If A is deeper, crawl up.\n  while (depthA - depthB > 0) {\n    instA = instA._hostParent;\n    depthA--;\n  }\n\n  // If B is deeper, crawl up.\n  while (depthB - depthA > 0) {\n    instB = instB._hostParent;\n    depthB--;\n  }\n\n  // Walk in lockstep until we find a match.\n  var depth = depthA;\n  while (depth--) {\n    if (instA === instB) {\n      return instA;\n    }\n    instA = instA._hostParent;\n    instB = instB._hostParent;\n  }\n  return null;\n}\n\n/**\n * Return if A is an ancestor of B.\n */\nfunction isAncestor(instA, instB) {\n  !('_hostNode' in instA) ? \"production\" !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n  !('_hostNode' in instB) ? \"production\" !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n\n  while (instB) {\n    if (instB === instA) {\n      return true;\n    }\n    instB = instB._hostParent;\n  }\n  return false;\n}\n\n/**\n * Return the parent instance of the passed-in instance.\n */\nfunction getParentInstance(inst) {\n  !('_hostNode' in inst) ? \"production\" !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;\n\n  return inst._hostParent;\n}\n\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\nfunction traverseTwoPhase(inst, fn, arg) {\n  var path = [];\n  while (inst) {\n    path.push(inst);\n    inst = inst._hostParent;\n  }\n  var i;\n  for (i = path.length; i-- > 0;) {\n    fn(path[i], 'captured', arg);\n  }\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], 'bubbled', arg);\n  }\n}\n\n/**\n * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n * should would receive a `mouseEnter` or `mouseLeave` event.\n *\n * Does not invoke the callback on the nearest common ancestor because nothing\n * \"entered\" or \"left\" that element.\n */\nfunction traverseEnterLeave(from, to, fn, argFrom, argTo) {\n  var common = from && to ? getLowestCommonAncestor(from, to) : null;\n  var pathFrom = [];\n  while (from && from !== common) {\n    pathFrom.push(from);\n    from = from._hostParent;\n  }\n  var pathTo = [];\n  while (to && to !== common) {\n    pathTo.push(to);\n    to = to._hostParent;\n  }\n  var i;\n  for (i = 0; i < pathFrom.length; i++) {\n    fn(pathFrom[i], 'bubbled', argFrom);\n  }\n  for (i = pathTo.length; i-- > 0;) {\n    fn(pathTo[i], 'captured', argTo);\n  }\n}\n\nmodule.exports = {\n  isAncestor: isAncestor,\n  getLowestCommonAncestor: getLowestCommonAncestor,\n  getParentInstance: getParentInstance,\n  traverseTwoPhase: traverseTwoPhase,\n  traverseEnterLeave: traverseEnterLeave\n};","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n\nvar warning = require('fbjs/lib/warning');\n\nif (\"production\" !== 'production') {\n  var reactProps = {\n    children: true,\n    dangerouslySetInnerHTML: true,\n    key: true,\n    ref: true,\n\n    autoFocus: true,\n    defaultValue: true,\n    valueLink: true,\n    defaultChecked: true,\n    checkedLink: true,\n    innerHTML: true,\n    suppressContentEditableWarning: true,\n    onFocusIn: true,\n    onFocusOut: true\n  };\n  var warnedProperties = {};\n\n  var validateProperty = function (tagName, name, debugID) {\n    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {\n      return true;\n    }\n    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {\n      return true;\n    }\n    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {\n      return true;\n    }\n    warnedProperties[name] = true;\n    var lowerCasedName = name.toLowerCase();\n\n    // data-* attributes should be lowercase; suggest the lowercase version\n    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;\n\n    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;\n\n    if (standardName != null) {\n      \"production\" !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n      return true;\n    } else if (registrationName != null) {\n      \"production\" !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n      return true;\n    } else {\n      // We were unable to guess which prop the user intended.\n      // It is likely that the user was just blindly spreading/forwarding props\n      // Components should be careful to only render valid props/attributes.\n      // Warning will be invoked in warnUnknownProperties to allow grouping.\n      return false;\n    }\n  };\n}\n\nvar warnUnknownProperties = function (debugID, element) {\n  var unknownProps = [];\n  for (var key in element.props) {\n    var isValid = validateProperty(element.type, key, debugID);\n    if (!isValid) {\n      unknownProps.push(key);\n    }\n  }\n\n  var unknownPropString = unknownProps.map(function (prop) {\n    return '`' + prop + '`';\n  }).join(', ');\n\n  if (unknownProps.length === 1) {\n    \"production\" !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n  } else if (unknownProps.length > 1) {\n    \"production\" !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n  }\n};\n\nfunction handleElement(debugID, element) {\n  if (element == null || typeof element.type !== 'string') {\n    return;\n  }\n  if (element.type.indexOf('-') >= 0 || element.props.is) {\n    return;\n  }\n  warnUnknownProperties(debugID, element);\n}\n\nvar ReactDOMUnknownPropertyHook = {\n  onBeforeMountComponent: function (debugID, element) {\n    handleElement(debugID, element);\n  },\n  onBeforeUpdateComponent: function (debugID, element) {\n    handleElement(debugID, element);\n  }\n};\n\nmodule.exports = ReactDOMUnknownPropertyHook;","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactInvalidSetStateWarningHook = require('./ReactInvalidSetStateWarningHook');\nvar ReactHostOperationHistoryHook = require('./ReactHostOperationHistoryHook');\nvar ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar performanceNow = require('fbjs/lib/performanceNow');\nvar warning = require('fbjs/lib/warning');\n\nvar hooks = [];\nvar didHookThrowForEvent = {};\n\nfunction callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {\n  try {\n    fn.call(context, arg1, arg2, arg3, arg4, arg5);\n  } catch (e) {\n    \"production\" !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\\n' + e.stack) : void 0;\n    didHookThrowForEvent[event] = true;\n  }\n}\n\nfunction emitEvent(event, arg1, arg2, arg3, arg4, arg5) {\n  for (var i = 0; i < hooks.length; i++) {\n    var hook = hooks[i];\n    var fn = hook[event];\n    if (fn) {\n      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);\n    }\n  }\n}\n\nvar isProfiling = false;\nvar flushHistory = [];\nvar lifeCycleTimerStack = [];\nvar currentFlushNesting = 0;\nvar currentFlushMeasurements = [];\nvar currentFlushStartTime = 0;\nvar currentTimerDebugID = null;\nvar currentTimerStartTime = 0;\nvar currentTimerNestedFlushDuration = 0;\nvar currentTimerType = null;\n\nvar lifeCycleTimerHasWarned = false;\n\nfunction clearHistory() {\n  ReactComponentTreeHook.purgeUnmountedComponents();\n  ReactHostOperationHistoryHook.clearHistory();\n}\n\nfunction getTreeSnapshot(registeredIDs) {\n  return registeredIDs.reduce(function (tree, id) {\n    var ownerID = ReactComponentTreeHook.getOwnerID(id);\n    var parentID = ReactComponentTreeHook.getParentID(id);\n    tree[id] = {\n      displayName: ReactComponentTreeHook.getDisplayName(id),\n      text: ReactComponentTreeHook.getText(id),\n      updateCount: ReactComponentTreeHook.getUpdateCount(id),\n      childIDs: ReactComponentTreeHook.getChildIDs(id),\n      // Text nodes don't have owners but this is close enough.\n      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,\n      parentID: parentID\n    };\n    return tree;\n  }, {});\n}\n\nfunction resetMeasurements() {\n  var previousStartTime = currentFlushStartTime;\n  var previousMeasurements = currentFlushMeasurements;\n  var previousOperations = ReactHostOperationHistoryHook.getHistory();\n\n  if (currentFlushNesting === 0) {\n    currentFlushStartTime = 0;\n    currentFlushMeasurements = [];\n    clearHistory();\n    return;\n  }\n\n  if (previousMeasurements.length || previousOperations.length) {\n    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();\n    flushHistory.push({\n      duration: performanceNow() - previousStartTime,\n      measurements: previousMeasurements || [],\n      operations: previousOperations || [],\n      treeSnapshot: getTreeSnapshot(registeredIDs)\n    });\n  }\n\n  clearHistory();\n  currentFlushStartTime = performanceNow();\n  currentFlushMeasurements = [];\n}\n\nfunction checkDebugID(debugID) {\n  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (allowRoot && debugID === 0) {\n    return;\n  }\n  if (!debugID) {\n    \"production\" !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;\n  }\n}\n\nfunction beginLifeCycleTimer(debugID, timerType) {\n  if (currentFlushNesting === 0) {\n    return;\n  }\n  if (currentTimerType && !lifeCycleTimerHasWarned) {\n    \"production\" !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;\n    lifeCycleTimerHasWarned = true;\n  }\n  currentTimerStartTime = performanceNow();\n  currentTimerNestedFlushDuration = 0;\n  currentTimerDebugID = debugID;\n  currentTimerType = timerType;\n}\n\nfunction endLifeCycleTimer(debugID, timerType) {\n  if (currentFlushNesting === 0) {\n    return;\n  }\n  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {\n    \"production\" !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;\n    lifeCycleTimerHasWarned = true;\n  }\n  if (isProfiling) {\n    currentFlushMeasurements.push({\n      timerType: timerType,\n      instanceID: debugID,\n      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration\n    });\n  }\n  currentTimerStartTime = 0;\n  currentTimerNestedFlushDuration = 0;\n  currentTimerDebugID = null;\n  currentTimerType = null;\n}\n\nfunction pauseCurrentLifeCycleTimer() {\n  var currentTimer = {\n    startTime: currentTimerStartTime,\n    nestedFlushStartTime: performanceNow(),\n    debugID: currentTimerDebugID,\n    timerType: currentTimerType\n  };\n  lifeCycleTimerStack.push(currentTimer);\n  currentTimerStartTime = 0;\n  currentTimerNestedFlushDuration = 0;\n  currentTimerDebugID = null;\n  currentTimerType = null;\n}\n\nfunction resumeCurrentLifeCycleTimer() {\n  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),\n      startTime = _lifeCycleTimerStack$.startTime,\n      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,\n      debugID = _lifeCycleTimerStack$.debugID,\n      timerType = _lifeCycleTimerStack$.timerType;\n\n  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;\n  currentTimerStartTime = startTime;\n  currentTimerNestedFlushDuration += nestedFlushDuration;\n  currentTimerDebugID = debugID;\n  currentTimerType = timerType;\n}\n\nvar lastMarkTimeStamp = 0;\nvar canUsePerformanceMeasure = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';\n\nfunction shouldMark(debugID) {\n  if (!isProfiling || !canUsePerformanceMeasure) {\n    return false;\n  }\n  var element = ReactComponentTreeHook.getElement(debugID);\n  if (element == null || typeof element !== 'object') {\n    return false;\n  }\n  var isHostElement = typeof element.type === 'string';\n  if (isHostElement) {\n    return false;\n  }\n  return true;\n}\n\nfunction markBegin(debugID, markType) {\n  if (!shouldMark(debugID)) {\n    return;\n  }\n\n  var markName = debugID + '::' + markType;\n  lastMarkTimeStamp = performanceNow();\n  performance.mark(markName);\n}\n\nfunction markEnd(debugID, markType) {\n  if (!shouldMark(debugID)) {\n    return;\n  }\n\n  var markName = debugID + '::' + markType;\n  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';\n\n  // Chrome has an issue of dropping markers recorded too fast:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652\n  // To work around this, we will not report very small measurements.\n  // I determined the magic number by tweaking it back and forth.\n  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.\n  // When the bug is fixed, we can `measure()` unconditionally if we want to.\n  var timeStamp = performanceNow();\n  if (timeStamp - lastMarkTimeStamp > 0.1) {\n    var measurementName = displayName + ' [' + markType + ']';\n    performance.measure(measurementName, markName);\n  }\n\n  performance.clearMarks(markName);\n  if (measurementName) {\n    performance.clearMeasures(measurementName);\n  }\n}\n\nvar ReactDebugTool = {\n  addHook: function (hook) {\n    hooks.push(hook);\n  },\n  removeHook: function (hook) {\n    for (var i = 0; i < hooks.length; i++) {\n      if (hooks[i] === hook) {\n        hooks.splice(i, 1);\n        i--;\n      }\n    }\n  },\n  isProfiling: function () {\n    return isProfiling;\n  },\n  beginProfiling: function () {\n    if (isProfiling) {\n      return;\n    }\n\n    isProfiling = true;\n    flushHistory.length = 0;\n    resetMeasurements();\n    ReactDebugTool.addHook(ReactHostOperationHistoryHook);\n  },\n  endProfiling: function () {\n    if (!isProfiling) {\n      return;\n    }\n\n    isProfiling = false;\n    resetMeasurements();\n    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);\n  },\n  getFlushHistory: function () {\n    return flushHistory;\n  },\n  onBeginFlush: function () {\n    currentFlushNesting++;\n    resetMeasurements();\n    pauseCurrentLifeCycleTimer();\n    emitEvent('onBeginFlush');\n  },\n  onEndFlush: function () {\n    resetMeasurements();\n    currentFlushNesting--;\n    resumeCurrentLifeCycleTimer();\n    emitEvent('onEndFlush');\n  },\n  onBeginLifeCycleTimer: function (debugID, timerType) {\n    checkDebugID(debugID);\n    emitEvent('onBeginLifeCycleTimer', debugID, timerType);\n    markBegin(debugID, timerType);\n    beginLifeCycleTimer(debugID, timerType);\n  },\n  onEndLifeCycleTimer: function (debugID, timerType) {\n    checkDebugID(debugID);\n    endLifeCycleTimer(debugID, timerType);\n    markEnd(debugID, timerType);\n    emitEvent('onEndLifeCycleTimer', debugID, timerType);\n  },\n  onBeginProcessingChildContext: function () {\n    emitEvent('onBeginProcessingChildContext');\n  },\n  onEndProcessingChildContext: function () {\n    emitEvent('onEndProcessingChildContext');\n  },\n  onHostOperation: function (operation) {\n    checkDebugID(operation.instanceID);\n    emitEvent('onHostOperation', operation);\n  },\n  onSetState: function () {\n    emitEvent('onSetState');\n  },\n  onSetChildren: function (debugID, childDebugIDs) {\n    checkDebugID(debugID);\n    childDebugIDs.forEach(checkDebugID);\n    emitEvent('onSetChildren', debugID, childDebugIDs);\n  },\n  onBeforeMountComponent: function (debugID, element, parentDebugID) {\n    checkDebugID(debugID);\n    checkDebugID(parentDebugID, true);\n    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);\n    markBegin(debugID, 'mount');\n  },\n  onMountComponent: function (debugID) {\n    checkDebugID(debugID);\n    markEnd(debugID, 'mount');\n    emitEvent('onMountComponent', debugID);\n  },\n  onBeforeUpdateComponent: function (debugID, element) {\n    checkDebugID(debugID);\n    emitEvent('onBeforeUpdateComponent', debugID, element);\n    markBegin(debugID, 'update');\n  },\n  onUpdateComponent: function (debugID) {\n    checkDebugID(debugID);\n    markEnd(debugID, 'update');\n    emitEvent('onUpdateComponent', debugID);\n  },\n  onBeforeUnmountComponent: function (debugID) {\n    checkDebugID(debugID);\n    emitEvent('onBeforeUnmountComponent', debugID);\n    markBegin(debugID, 'unmount');\n  },\n  onUnmountComponent: function (debugID) {\n    checkDebugID(debugID);\n    markEnd(debugID, 'unmount');\n    emitEvent('onUnmountComponent', debugID);\n  },\n  onTestEvent: function () {\n    emitEvent('onTestEvent');\n  }\n};\n\n// TODO remove these when RN/www gets updated\nReactDebugTool.addDevtool = ReactDebugTool.addHook;\nReactDebugTool.removeDevtool = ReactDebugTool.removeHook;\n\nReactDebugTool.addHook(ReactInvalidSetStateWarningHook);\nReactDebugTool.addHook(ReactComponentTreeHook);\nvar url = ExecutionEnvironment.canUseDOM && window.location.href || '';\nif (/[?&]react_perf\\b/.test(url)) {\n  ReactDebugTool.beginProfiling();\n}\n\nmodule.exports = ReactDebugTool;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactUpdates = require('./ReactUpdates');\nvar Transaction = require('./Transaction');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function () {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\n_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  }\n});\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function (callback, a, b, c, d, e) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      return callback(a, b, c, d, e);\n    } else {\n      return transaction.perform(callback, null, a, b, c, d, e);\n    }\n  }\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ARIADOMPropertyConfig = require('./ARIADOMPropertyConfig');\nvar BeforeInputEventPlugin = require('./BeforeInputEventPlugin');\nvar ChangeEventPlugin = require('./ChangeEventPlugin');\nvar DefaultEventPluginOrder = require('./DefaultEventPluginOrder');\nvar EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');\nvar HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\nvar ReactDOMComponent = require('./ReactDOMComponent');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMEmptyComponent = require('./ReactDOMEmptyComponent');\nvar ReactDOMTreeTraversal = require('./ReactDOMTreeTraversal');\nvar ReactDOMTextComponent = require('./ReactDOMTextComponent');\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\nvar ReactEventListener = require('./ReactEventListener');\nvar ReactInjection = require('./ReactInjection');\nvar ReactReconcileTransaction = require('./ReactReconcileTransaction');\nvar SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');\nvar SelectEventPlugin = require('./SelectEventPlugin');\nvar SimpleEventPlugin = require('./SimpleEventPlugin');\n\nvar alreadyInjected = false;\n\nfunction inject() {\n  if (alreadyInjected) {\n    // TODO: This is currently true because these injections are shared between\n    // the client and the server package. They should be built independently\n    // and not share any injection state. Then this problem will be solved.\n    return;\n  }\n  alreadyInjected = true;\n\n  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);\n  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);\n\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n\n  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);\n\n  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);\n\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\n  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {\n    return new ReactDOMEmptyComponent(instantiate);\n  });\n\n  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n}\n\nmodule.exports = {\n  inject: inject\n};","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\n\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\nmodule.exports = REACT_ELEMENT_TYPE;","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyComponentFactory;\n\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponentFactory: function (factory) {\n    emptyComponentFactory = factory;\n  }\n};\n\nvar ReactEmptyComponent = {\n  create: function (instantiate) {\n    return emptyComponentFactory(instantiate);\n  }\n};\n\nReactEmptyComponent.injection = ReactEmptyComponentInjection;\n\nmodule.exports = ReactEmptyComponent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar caughtError = null;\n\n/**\n * Call a function while guarding against errors that happens within it.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} a First argument\n * @param {*} b Second argument\n */\nfunction invokeGuardedCallback(name, func, a) {\n  try {\n    func(a);\n  } catch (x) {\n    if (caughtError === null) {\n      caughtError = x;\n    }\n  }\n}\n\nvar ReactErrorUtils = {\n  invokeGuardedCallback: invokeGuardedCallback,\n\n  /**\n   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event\n   * handler are sure to be rethrown by rethrowCaughtError.\n   */\n  invokeGuardedCallbackWithCatch: invokeGuardedCallback,\n\n  /**\n   * During execution of guarded functions we will capture the first error which\n   * we will rethrow to be handled by the top level error handler.\n   */\n  rethrowCaughtError: function () {\n    if (caughtError) {\n      var error = caughtError;\n      caughtError = null;\n      throw error;\n    }\n  }\n};\n\nif (\"production\" !== 'production') {\n  /**\n   * To help development we can get better devtools integration by simulating a\n   * real browser event.\n   */\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n    var fakeNode = document.createElement('react');\n    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {\n      var boundFunc = func.bind(null, a);\n      var evtType = 'react-' + name;\n      fakeNode.addEventListener(evtType, boundFunc, false);\n      var evt = document.createEvent('Event');\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n      fakeNode.removeEventListener(evtType, boundFunc, false);\n    };\n  }\n}\n\nmodule.exports = ReactErrorUtils;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\n\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue(false);\n}\n\nvar ReactEventEmitterMixin = {\n  /**\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n   * opportunity to create `ReactEvent`s to be dispatched.\n   */\n  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n    runEventQueueInBatch(events);\n  }\n};\n\nmodule.exports = ReactEventEmitterMixin;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar PooledClass = require('./PooledClass');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar getEventTarget = require('./getEventTarget');\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\n\n/**\n * Find the deepest React component completely containing the root of the\n * passed-in instance (for use when entire React trees are nested within each\n * other). If React trees are not nested, returns null.\n */\nfunction findParent(inst) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  while (inst._hostParent) {\n    inst = inst._hostParent;\n  }\n  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);\n  var container = rootNode.parentNode;\n  return ReactDOMComponentTree.getClosestInstanceFromNode(container);\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\n_assign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function () {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);\n  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = targetInst;\n  do {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = ancestor && findParent(ancestor);\n  } while (ancestor);\n\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    targetInst = bookKeeping.ancestors[i];\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function (handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function (enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function () {\n    return ReactEventListener._enabled;\n  },\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} element Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} element Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  monitorScrollValue: function (refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function (topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactFeatureFlags = {\n  // When true, call console.time() before and .timeEnd() after each top-level\n  // render (both initial renders and updates). Useful when looking at prod-mode\n  // timeline profiles in Chrome, for example.\n  logTopLevelRenders: false\n};\n\nmodule.exports = ReactFeatureFlags;","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar genericComponentClass = null;\nvar textComponentClass = null;\n\nvar ReactHostComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function (componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function (componentClass) {\n    textComponentClass = componentClass;\n  }\n};\n\n/**\n * Get a host internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  !genericComponentClass ? \"production\" !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;\n  return new genericComponentClass(element);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactHostComponent = {\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactHostComponentInjection\n};\n\nmodule.exports = ReactHostComponent;","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar history = [];\n\nvar ReactHostOperationHistoryHook = {\n  onHostOperation: function (operation) {\n    history.push(operation);\n  },\n  clearHistory: function () {\n    if (ReactHostOperationHistoryHook._preventClearing) {\n      // Should only be used for tests.\n      return;\n    }\n\n    history = [];\n  },\n  getHistory: function () {\n    return history;\n  }\n};\n\nmodule.exports = ReactHostOperationHistoryHook;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactHostComponent = require('./ReactHostComponent');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar ReactInjection = {\n  Component: ReactComponentEnvironment.injection,\n  DOMProperty: DOMProperty.injection,\n  EmptyComponent: ReactEmptyComponent.injection,\n  EventPluginHub: EventPluginHub.injection,\n  EventPluginUtils: EventPluginUtils.injection,\n  EventEmitter: ReactBrowserEventEmitter.injection,\n  HostComponent: ReactHostComponent.injection,\n  Updates: ReactUpdates.injection\n};\n\nmodule.exports = ReactInjection;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMSelection = require('./ReactDOMSelection');\n\nvar containsNode = require('fbjs/lib/containsNode');\nvar focusNode = require('fbjs/lib/focusNode');\nvar getActiveElement = require('fbjs/lib/getActiveElement');\n\nfunction isInDocument(node) {\n  return containsNode(document.documentElement, node);\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\nvar ReactInputSelection = {\n  hasSelectionCapabilities: function (elem) {\n    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\n  },\n\n  getSelectionInformation: function () {\n    var focusedElem = getActiveElement();\n    return {\n      focusedElem: focusedElem,\n      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\n    };\n  },\n\n  /**\n   * @restoreSelection: If any selection information was potentially lost,\n   * restore it. This is useful when performing operations that could remove dom\n   * nodes and place them back in, resulting in focus being lost.\n   */\n  restoreSelection: function (priorSelectionInformation) {\n    var curFocusedElem = getActiveElement();\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\n    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\n      }\n      focusNode(priorFocusedElem);\n    }\n  },\n\n  /**\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\n   * contentEditable node.\n   * -@input: Look up selection bounds of this input\n   * -@return {start: selectionStart, end: selectionEnd}\n   */\n  getSelection: function (input) {\n    var selection;\n\n    if ('selectionStart' in input) {\n      // Modern browser with input or textarea.\n      selection = {\n        start: input.selectionStart,\n        end: input.selectionEnd\n      };\n    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n      // IE8 input.\n      var range = document.selection.createRange();\n      // There can only be one selection per document in IE, so it must\n      // be in our element.\n      if (range.parentElement() === input) {\n        selection = {\n          start: -range.moveStart('character', -input.value.length),\n          end: -range.moveEnd('character', -input.value.length)\n        };\n      }\n    } else {\n      // Content editable or old IE textarea.\n      selection = ReactDOMSelection.getOffsets(input);\n    }\n\n    return selection || { start: 0, end: 0 };\n  },\n\n  /**\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n   * the input.\n   * -@input     Set selection bounds of this input or textarea\n   * -@offsets   Object of same form that is returned from get*\n   */\n  setSelection: function (input, offsets) {\n    var start = offsets.start;\n    var end = offsets.end;\n    if (end === undefined) {\n      end = start;\n    }\n\n    if ('selectionStart' in input) {\n      input.selectionStart = start;\n      input.selectionEnd = Math.min(end, input.value.length);\n    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n      var range = input.createTextRange();\n      range.collapse(true);\n      range.moveStart('character', start);\n      range.moveEnd('character', end - start);\n      range.select();\n    } else {\n      ReactDOMSelection.setOffsets(input, offsets);\n    }\n  }\n};\n\nmodule.exports = ReactInputSelection;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\n\nvar ReactInstanceMap = {\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function (key) {\n    key._reactInternalInstance = undefined;\n  },\n\n  get: function (key) {\n    return key._reactInternalInstance;\n  },\n\n  has: function (key) {\n    return key._reactInternalInstance !== undefined;\n  },\n\n  set: function (key, value) {\n    key._reactInternalInstance = value;\n  }\n};\n\nmodule.exports = ReactInstanceMap;","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n// Trust the developer to only use ReactInstrumentation with a __DEV__ check\n\nvar debugTool = null;\n\nif (\"production\" !== 'production') {\n  var ReactDebugTool = require('./ReactDebugTool');\n  debugTool = ReactDebugTool;\n}\n\nmodule.exports = { debugTool: debugTool };","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar warning = require('fbjs/lib/warning');\n\nif (\"production\" !== 'production') {\n  var processingChildContext = false;\n\n  var warnInvalidSetState = function () {\n    \"production\" !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;\n  };\n}\n\nvar ReactInvalidSetStateWarningHook = {\n  onBeginProcessingChildContext: function () {\n    processingChildContext = true;\n  },\n  onEndProcessingChildContext: function () {\n    processingChildContext = false;\n  },\n  onSetState: function () {\n    warnInvalidSetState();\n  }\n};\n\nmodule.exports = ReactInvalidSetStateWarningHook;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar adler32 = require('./adler32');\n\nvar TAG_END = /\\/?>/;\nvar COMMENT_START = /^<\\!\\-\\-/;\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function (markup) {\n    var checksum = adler32(markup);\n\n    // Add checksum (handle both parent tags, comments and self-closing tags)\n    if (COMMENT_START.test(markup)) {\n      return markup;\n    } else {\n      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n    }\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function (markup, element) {\n    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar DOMProperty = require('./DOMProperty');\nvar React = require('react/lib/React');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMContainerInfo = require('./ReactDOMContainerInfo');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactFeatureFlags = require('./ReactFeatureFlags');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\nvar setInnerHTML = require('./setInnerHTML');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\nvar instancesByReactRootID = {};\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n * a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {\n  var markerName;\n  if (ReactFeatureFlags.logTopLevelRenders) {\n    var wrappedElement = wrapperInstance._currentElement.props.child;\n    var type = wrappedElement.type;\n    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);\n    console.time(markerName);\n  }\n\n  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */\n  );\n\n  if (markerName) {\n    console.timeEnd(markerName);\n  }\n\n  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;\n  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* useCreateElement */\n  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);\n  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Unmounts a component and removes it from the DOM.\n *\n * @param {ReactComponent} instance React component instance.\n * @param {DOMElement} container DOM element to unmount from.\n * @final\n * @internal\n * @see {ReactMount.unmountComponentAtNode}\n */\nfunction unmountComponentFromNode(instance, container, safely) {\n  if (\"production\" !== 'production') {\n    ReactInstrumentation.debugTool.onBeginFlush();\n  }\n  ReactReconciler.unmountComponent(instance, safely);\n  if (\"production\" !== 'production') {\n    ReactInstrumentation.debugTool.onEndFlush();\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    container = container.documentElement;\n  }\n\n  // http://jsperf.com/emptying-a-node\n  while (container.lastChild) {\n    container.removeChild(container.lastChild);\n  }\n}\n\n/**\n * True if the supplied DOM node has a direct React-rendered child that is\n * not a React root element. Useful for warning in `render`,\n * `unmountComponentAtNode`, etc.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM element contains a direct child that was\n * rendered by React but is not a root element.\n * @internal\n */\nfunction hasNonRootReactChild(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  if (rootEl) {\n    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);\n    return !!(inst && inst._hostParent);\n  }\n}\n\n/**\n * True if the supplied DOM node is a React DOM element and\n * it has been rendered by another copy of React.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM has been rendered by another copy of React\n * @internal\n */\nfunction nodeIsRenderedByOtherInstance(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));\n}\n\n/**\n * True if the supplied DOM node is a valid node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid DOM node.\n * @internal\n */\nfunction isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));\n}\n\n/**\n * True if the supplied DOM node is a valid React node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid React DOM node.\n * @internal\n */\nfunction isReactNode(node) {\n  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));\n}\n\nfunction getHostRootInstanceInContainer(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);\n  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;\n}\n\nfunction getTopLevelWrapperInContainer(container) {\n  var root = getHostRootInstanceInContainer(container);\n  return root ? root._hostContainerInfo._topLevelWrapper : null;\n}\n\n/**\n * Temporary (?) hack so that we can store all top-level pending updates on\n * composites instead of having to worry about different types of components\n * here.\n */\nvar topLevelRootCounter = 1;\nvar TopLevelWrapper = function () {\n  this.rootID = topLevelRootCounter++;\n};\nTopLevelWrapper.prototype.isReactComponent = {};\nif (\"production\" !== 'production') {\n  TopLevelWrapper.displayName = 'TopLevelWrapper';\n}\nTopLevelWrapper.prototype.render = function () {\n  return this.props.child;\n};\nTopLevelWrapper.isReactTopLevelWrapper = true;\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n  TopLevelWrapper: TopLevelWrapper,\n\n  /**\n   * Used by devtools. The keys are not important.\n   */\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function (container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {\n    ReactMount.scrollMonitor(container, function () {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    return prevComponent;\n  },\n\n  /**\n   * Render a new component into the DOM. Hooked by hooks!\n   *\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    \"production\" !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ? \"production\" !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n    var componentInstance = instantiateReactComponent(nextElement, false);\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);\n\n    var wrapperID = componentInstance._instance.rootID;\n    instancesByReactRootID[wrapperID] = componentInstance;\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? \"production\" !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;\n    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n  },\n\n  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');\n    !React.isValidElement(nextElement) ? \"production\" !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? \" Instead of passing a string like 'div', pass \" + \"React.createElement('div') or <div />.\" : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : // Check if it quacks like an element\n    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? \" Instead of passing a string like 'div', pass \" + \"React.createElement('div') or <div />.\" : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;\n\n    \"production\" !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\n\n    var nextWrappedElement = React.createElement(TopLevelWrapper, {\n      child: nextElement\n    });\n\n    var nextContext;\n    if (parentComponent) {\n      var parentInst = ReactInstanceMap.get(parentComponent);\n      nextContext = parentInst._processChildContext(parentInst._context);\n    } else {\n      nextContext = emptyObject;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n\n    if (prevComponent) {\n      var prevWrappedElement = prevComponent._currentElement;\n      var prevElement = prevWrappedElement.props.child;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n        var updatedCallback = callback && function () {\n          callback.call(publicInst);\n        };\n        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);\n        return publicInst;\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n    if (\"production\" !== 'production') {\n      \"production\" !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\n\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (internalGetID(rootElementSibling)) {\n            \"production\" !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;\n            break;\n          }\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function (nextElement, container, callback) {\n    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function (container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    \"production\" !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ? \"production\" !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;\n\n    if (\"production\" !== 'production') {\n      \"production\" !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), \"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by another copy of React.') : void 0;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n    if (!prevComponent) {\n      // Check if the node being unmounted was rendered by React, but isn't a\n      // root node.\n      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n      // Check if the container itself is a React root node.\n      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);\n\n      if (\"production\" !== 'production') {\n        \"production\" !== 'production' ? warning(!containerHasNonRootReactChild, \"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\n      }\n\n      return false;\n    }\n    delete instancesByReactRootID[prevComponent._instance.rootID];\n    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);\n    return true;\n  },\n\n  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {\n    !isValidContainer(container) ? \"production\" !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        ReactDOMComponentTree.precacheNode(instance, rootElement);\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\n        var normalizedMarkup = markup;\n        if (\"production\" !== 'production') {\n          // because rootMarkup is retrieved from the DOM, various normalizations\n          // will have occurred which will not be present in `markup`. Here,\n          // insert markup into a <div> or <iframe> depending on the container\n          // type to perform the same normalizations before comparing.\n          var normalizer;\n          if (container.nodeType === ELEMENT_NODE_TYPE) {\n            normalizer = document.createElement('div');\n            normalizer.innerHTML = markup;\n            normalizedMarkup = normalizer.innerHTML;\n          } else {\n            normalizer = document.createElement('iframe');\n            document.body.appendChild(normalizer);\n            normalizer.contentDocument.write(markup);\n            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n            document.body.removeChild(normalizer);\n          }\n        }\n\n        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        !(container.nodeType !== DOC_NODE_TYPE) ? \"production\" !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\\n%s', difference) : _prodInvariant('42', difference) : void 0;\n\n        if (\"production\" !== 'production') {\n          \"production\" !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : void 0;\n        }\n      }\n    }\n\n    !(container.nodeType !== DOC_NODE_TYPE) ? \"production\" !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document but you didn\\'t use server rendering. We can\\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;\n\n    if (transaction.useCreateElement) {\n      while (container.lastChild) {\n        container.removeChild(container.lastChild);\n      }\n      DOMLazyTree.insertTreeBefore(container, markup, null);\n    } else {\n      setInnerHTML(container, markup);\n      ReactDOMComponentTree.precacheNode(instance, container.firstChild);\n    }\n\n    if (\"production\" !== 'production') {\n      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);\n      if (hostNode._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation({\n          instanceID: hostNode._debugID,\n          type: 'mount',\n          payload: markup.toString()\n        });\n      }\n    }\n  }\n};\n\nmodule.exports = ReactMount;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactChildReconciler = require('./ReactChildReconciler');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar flattenChildren = require('./flattenChildren');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Make an update for markup to be rendered and inserted at a supplied index.\n *\n * @param {string} markup Markup that renders into an element.\n * @param {number} toIndex Destination index.\n * @private\n */\nfunction makeInsertMarkup(markup, afterNode, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'INSERT_MARKUP',\n    content: markup,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: toIndex,\n    afterNode: afterNode\n  };\n}\n\n/**\n * Make an update for moving an existing element to another index.\n *\n * @param {number} fromIndex Source index of the existing element.\n * @param {number} toIndex Destination index of the element.\n * @private\n */\nfunction makeMove(child, afterNode, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'MOVE_EXISTING',\n    content: null,\n    fromIndex: child._mountIndex,\n    fromNode: ReactReconciler.getHostNode(child),\n    toIndex: toIndex,\n    afterNode: afterNode\n  };\n}\n\n/**\n * Make an update for removing an element at an index.\n *\n * @param {number} fromIndex Index of the element to remove.\n * @private\n */\nfunction makeRemove(child, node) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'REMOVE_NODE',\n    content: null,\n    fromIndex: child._mountIndex,\n    fromNode: node,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Make an update for setting the markup of a node.\n *\n * @param {string} markup Markup that renders into an element.\n * @private\n */\nfunction makeSetMarkup(markup) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'SET_MARKUP',\n    content: markup,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Make an update for setting the text content.\n *\n * @param {string} textContent Text content to set.\n * @private\n */\nfunction makeTextContent(textContent) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'TEXT_CONTENT',\n    content: textContent,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Push an update, if any, onto the queue. Creates a new queue if none is\n * passed and always returns the queue. Mutative.\n */\nfunction enqueue(queue, update) {\n  if (update) {\n    queue = queue || [];\n    queue.push(update);\n  }\n  return queue;\n}\n\n/**\n * Processes any enqueued updates.\n *\n * @private\n */\nfunction processQueue(inst, updateQueue) {\n  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);\n}\n\nvar setChildrenForInstrumentation = emptyFunction;\nif (\"production\" !== 'production') {\n  var getDebugID = function (inst) {\n    if (!inst._debugID) {\n      // Check for ART-like instances. TODO: This is silly/gross.\n      var internal;\n      if (internal = ReactInstanceMap.get(inst)) {\n        inst = internal;\n      }\n    }\n    return inst._debugID;\n  };\n  setChildrenForInstrumentation = function (children) {\n    var debugID = getDebugID(this);\n    // TODO: React Native empty components are also multichild.\n    // This means they still get into this method but don't have _debugID.\n    if (debugID !== 0) {\n      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {\n        return children[key]._debugID;\n      }) : []);\n    }\n  };\n}\n\n/**\n * ReactMultiChild are capable of reconciling multiple children.\n *\n * @class ReactMultiChild\n * @internal\n */\nvar ReactMultiChild = {\n  /**\n   * Provides common functionality for components that must reconcile multiple\n   * children. This is used by `ReactDOMComponent` to mount, update, and\n   * unmount child components.\n   *\n   * @lends {ReactMultiChild.prototype}\n   */\n  Mixin: {\n    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {\n      if (\"production\" !== 'production') {\n        var selfDebugID = getDebugID(this);\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n        }\n      }\n      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n    },\n\n    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {\n      var nextChildren;\n      var selfDebugID = 0;\n      if (\"production\" !== 'production') {\n        selfDebugID = getDebugID(this);\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n          return nextChildren;\n        }\n      }\n      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n      return nextChildren;\n    },\n\n    /**\n     * Generates a \"mount image\" for each of the supplied children. In the case\n     * of `ReactDOMComponent`, a mount image is a string of markup.\n     *\n     * @param {?object} nestedChildren Nested child maps.\n     * @return {array} An array of mounted representations.\n     * @internal\n     */\n    mountChildren: function (nestedChildren, transaction, context) {\n      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);\n      this._renderedChildren = children;\n\n      var mountImages = [];\n      var index = 0;\n      for (var name in children) {\n        if (children.hasOwnProperty(name)) {\n          var child = children[name];\n          var selfDebugID = 0;\n          if (\"production\" !== 'production') {\n            selfDebugID = getDebugID(this);\n          }\n          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);\n          child._mountIndex = index++;\n          mountImages.push(mountImage);\n        }\n      }\n\n      if (\"production\" !== 'production') {\n        setChildrenForInstrumentation.call(this, children);\n      }\n\n      return mountImages;\n    },\n\n    /**\n     * Replaces any rendered children with a text content string.\n     *\n     * @param {string} nextContent String of content.\n     * @internal\n     */\n    updateTextContent: function (nextContent) {\n      var prevChildren = this._renderedChildren;\n      // Remove any rendered children.\n      ReactChildReconciler.unmountChildren(prevChildren, false);\n      for (var name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name)) {\n          !false ? \"production\" !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n        }\n      }\n      // Set new text content.\n      var updates = [makeTextContent(nextContent)];\n      processQueue(this, updates);\n    },\n\n    /**\n     * Replaces any rendered children with a markup string.\n     *\n     * @param {string} nextMarkup String of markup.\n     * @internal\n     */\n    updateMarkup: function (nextMarkup) {\n      var prevChildren = this._renderedChildren;\n      // Remove any rendered children.\n      ReactChildReconciler.unmountChildren(prevChildren, false);\n      for (var name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name)) {\n          !false ? \"production\" !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n        }\n      }\n      var updates = [makeSetMarkup(nextMarkup)];\n      processQueue(this, updates);\n    },\n\n    /**\n     * Updates the rendered children with new children.\n     *\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     */\n    updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      // Hook used by React ART\n      this._updateChildren(nextNestedChildrenElements, transaction, context);\n    },\n\n    /**\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @final\n     * @protected\n     */\n    _updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      var prevChildren = this._renderedChildren;\n      var removedNodes = {};\n      var mountImages = [];\n      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);\n      if (!nextChildren && !prevChildren) {\n        return;\n      }\n      var updates = null;\n      var name;\n      // `nextIndex` will increment for each child in `nextChildren`, but\n      // `lastIndex` will be the last index visited in `prevChildren`.\n      var nextIndex = 0;\n      var lastIndex = 0;\n      // `nextMountIndex` will increment for each newly mounted child.\n      var nextMountIndex = 0;\n      var lastPlacedNode = null;\n      for (name in nextChildren) {\n        if (!nextChildren.hasOwnProperty(name)) {\n          continue;\n        }\n        var prevChild = prevChildren && prevChildren[name];\n        var nextChild = nextChildren[name];\n        if (prevChild === nextChild) {\n          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));\n          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n          prevChild._mountIndex = nextIndex;\n        } else {\n          if (prevChild) {\n            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n            // The `removedNodes` loop below will actually remove the child.\n          }\n          // The child must be instantiated before it's mounted.\n          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));\n          nextMountIndex++;\n        }\n        nextIndex++;\n        lastPlacedNode = ReactReconciler.getHostNode(nextChild);\n      }\n      // Remove children that are no longer present.\n      for (name in removedNodes) {\n        if (removedNodes.hasOwnProperty(name)) {\n          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));\n        }\n      }\n      if (updates) {\n        processQueue(this, updates);\n      }\n      this._renderedChildren = nextChildren;\n\n      if (\"production\" !== 'production') {\n        setChildrenForInstrumentation.call(this, nextChildren);\n      }\n    },\n\n    /**\n     * Unmounts all rendered children. This should be used to clean up children\n     * when this component is unmounted. It does not actually perform any\n     * backend operations.\n     *\n     * @internal\n     */\n    unmountChildren: function (safely) {\n      var renderedChildren = this._renderedChildren;\n      ReactChildReconciler.unmountChildren(renderedChildren, safely);\n      this._renderedChildren = null;\n    },\n\n    /**\n     * Moves a child component to the supplied index.\n     *\n     * @param {ReactComponent} child Component to move.\n     * @param {number} toIndex Destination index of the element.\n     * @param {number} lastIndex Last index visited of the siblings of `child`.\n     * @protected\n     */\n    moveChild: function (child, afterNode, toIndex, lastIndex) {\n      // If the index of `child` is less than `lastIndex`, then it needs to\n      // be moved. Otherwise, we do not need to move it because a child will be\n      // inserted or moved before `child`.\n      if (child._mountIndex < lastIndex) {\n        return makeMove(child, afterNode, toIndex);\n      }\n    },\n\n    /**\n     * Creates a child component.\n     *\n     * @param {ReactComponent} child Component to create.\n     * @param {string} mountImage Markup to insert.\n     * @protected\n     */\n    createChild: function (child, afterNode, mountImage) {\n      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);\n    },\n\n    /**\n     * Removes a child component.\n     *\n     * @param {ReactComponent} child Child to remove.\n     * @protected\n     */\n    removeChild: function (child, node) {\n      return makeRemove(child, node);\n    },\n\n    /**\n     * Mounts a child with the supplied name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to mount.\n     * @param {string} name Name of the child.\n     * @param {number} index Index at which to insert the child.\n     * @param {ReactReconcileTransaction} transaction\n     * @private\n     */\n    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {\n      child._mountIndex = index;\n      return this.createChild(child, afterNode, mountImage);\n    },\n\n    /**\n     * Unmounts a rendered child.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to unmount.\n     * @private\n     */\n    _unmountChild: function (child, node) {\n      var update = this.removeChild(child, node);\n      child._mountIndex = null;\n      return update;\n    }\n  }\n};\n\nmodule.exports = ReactMultiChild;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar React = require('react/lib/React');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar ReactNodeTypes = {\n  HOST: 0,\n  COMPOSITE: 1,\n  EMPTY: 2,\n\n  getType: function (node) {\n    if (node === null || node === false) {\n      return ReactNodeTypes.EMPTY;\n    } else if (React.isValidElement(node)) {\n      if (typeof node.type === 'function') {\n        return ReactNodeTypes.COMPOSITE;\n      } else {\n        return ReactNodeTypes.HOST;\n      }\n    }\n    !false ? \"production\" !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;\n  }\n};\n\nmodule.exports = ReactNodeTypes;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid owner.\n * @final\n */\nfunction isValidOwner(object) {\n  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');\n}\n\n/**\n * ReactOwners are capable of storing references to owned components.\n *\n * All components are capable of //being// referenced by owner components, but\n * only ReactOwner components are capable of //referencing// owned components.\n * The named reference is known as a \"ref\".\n *\n * Refs are available when mounted and updated during reconciliation.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return (\n *         <div onClick={this.handleClick}>\n *           <CustomComponent ref=\"custom\" />\n *         </div>\n *       );\n *     },\n *     handleClick: function() {\n *       this.refs.custom.handleClick();\n *     },\n *     componentDidMount: function() {\n *       this.refs.custom.initialize();\n *     }\n *   });\n *\n * Refs should rarely be used. When refs are used, they should only be done to\n * control data that is not handled by React's data flow.\n *\n * @class ReactOwner\n */\nvar ReactOwner = {\n  /**\n   * Adds a component by ref to an owner component.\n   *\n   * @param {ReactComponent} component Component to reference.\n   * @param {string} ref Name by which to refer to the component.\n   * @param {ReactOwner} owner Component on which to record the ref.\n   * @final\n   * @internal\n   */\n  addComponentAsRefTo: function (component, ref, owner) {\n    !isValidOwner(owner) ? \"production\" !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;\n    owner.attachRef(ref, component);\n  },\n\n  /**\n   * Removes a component by ref from an owner component.\n   *\n   * @param {ReactComponent} component Component to dereference.\n   * @param {string} ref Name of the ref to remove.\n   * @param {ReactOwner} owner Component on which the ref is recorded.\n   * @final\n   * @internal\n   */\n  removeComponentAsRefFrom: function (component, ref, owner) {\n    !isValidOwner(owner) ? \"production\" !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;\n    var ownerPublicInstance = owner.getPublicInstance();\n    // Check that `component`'s owner is still alive and that `component` is still the current ref\n    // because we do not want to detach the ref if another component stole it.\n    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {\n      owner.detachRef(ref);\n    }\n  }\n};\n\nmodule.exports = ReactOwner;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactPropTypeLocationNames = {};\n\nif (\"production\" !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n}\n\nmodule.exports = ReactPropTypeLocationNames;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar Transaction = require('./Transaction');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function () {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n   *   restores the previous value.\n   */\n  close: function (previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function () {\n    this.reactMountReady.notifyAll();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\nif (\"production\" !== 'production') {\n  TRANSACTION_WRAPPERS.push({\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n    close: ReactInstrumentation.debugTool.onEndFlush\n  });\n}\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction(useCreateElement) {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactDOMTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.useCreateElement = useCreateElement;\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap procedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n\n  /**\n   * @return {object} The queue to collect React async events.\n   */\n  getUpdateQueue: function () {\n    return ReactUpdateQueue;\n  },\n\n  /**\n   * Save current transaction state -- if the return value from this method is\n   * passed to `rollback`, the transaction will be reset to that state.\n   */\n  checkpoint: function () {\n    // reactMountReady is the our only stateful wrapper\n    return this.reactMountReady.checkpoint();\n  },\n\n  rollback: function (checkpoint) {\n    this.reactMountReady.rollback(checkpoint);\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n  }\n};\n\n_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);\n\nPooledClass.addPoolingTo(ReactReconcileTransaction);\n\nmodule.exports = ReactReconcileTransaction;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactRef = require('./ReactRef');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\n\nvar ReactReconciler = {\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} the containing host component instance\n   * @param {?object} info about the host container\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) // 0 in production and for roots\n  {\n    if (\"production\" !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);\n      }\n    }\n    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);\n    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n    if (\"production\" !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);\n      }\n    }\n    return markup;\n  },\n\n  /**\n   * Returns a value that can be passed to\n   * ReactComponentEnvironment.replaceNodeWithMarkup.\n   */\n  getHostNode: function (internalInstance) {\n    return internalInstance.getHostNode();\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (internalInstance, safely) {\n    if (\"production\" !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);\n      }\n    }\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent(safely);\n    if (\"production\" !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);\n      }\n    }\n  },\n\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function (internalInstance, nextElement, transaction, context) {\n    var prevElement = internalInstance._currentElement;\n\n    if (nextElement === prevElement && context === internalInstance._context) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n\n      // TODO: Bailing out early is just a perf optimization right?\n      // TODO: Removing the return statement should affect correctness?\n      return;\n    }\n\n    if (\"production\" !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);\n      }\n    }\n\n    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n\n    internalInstance.receiveComponent(nextElement, transaction, context);\n\n    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n\n    if (\"production\" !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  },\n\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {\n    if (internalInstance._updateBatchNumber !== updateBatchNumber) {\n      // The component's enqueued batch number should always be the current\n      // batch or the following one.\n      \"production\" !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;\n      return;\n    }\n    if (\"production\" !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);\n      }\n    }\n    internalInstance.performUpdateIfNecessary(transaction);\n    if (\"production\" !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  }\n};\n\nmodule.exports = ReactReconciler;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactOwner = require('./ReactOwner');\n\nvar ReactRef = {};\n\nfunction attachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(component.getPublicInstance());\n  } else {\n    // Legacy ref\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\n  }\n}\n\nfunction detachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(null);\n  } else {\n    // Legacy ref\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n  }\n}\n\nReactRef.attachRefs = function (instance, element) {\n  if (element === null || typeof element !== 'object') {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    attachRef(ref, instance, element._owner);\n  }\n};\n\nReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\n  // If either the owner or a `ref` has changed, make sure the newest owner\n  // has stored a reference to `this`, and the previous owner (if different)\n  // has forgotten the reference to `this`. We use the element instead\n  // of the public this.props because the post processing cannot determine\n  // a ref. The ref conceptually lives on the element.\n\n  // TODO: Should this even be possible? The owner cannot change because\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\n  // if you swap the keys of but not the refs. Reconsider where this check\n  // is made. It probably belongs where the key checking and\n  // instantiateReactComponent is done.\n\n  var prevRef = null;\n  var prevOwner = null;\n  if (prevElement !== null && typeof prevElement === 'object') {\n    prevRef = prevElement.ref;\n    prevOwner = prevElement._owner;\n  }\n\n  var nextRef = null;\n  var nextOwner = null;\n  if (nextElement !== null && typeof nextElement === 'object') {\n    nextRef = nextElement.ref;\n    nextOwner = nextElement._owner;\n  }\n\n  return prevRef !== nextRef ||\n  // If owner changes but we have an unchanged function ref, don't update refs\n  typeof nextRef === 'string' && nextOwner !== prevOwner;\n};\n\nReactRef.detachRefs = function (instance, element) {\n  if (element === null || typeof element !== 'object') {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    detachRef(ref, instance, element._owner);\n  }\n};\n\nmodule.exports = ReactRef;","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\nvar Transaction = require('./Transaction');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactServerUpdateQueue = require('./ReactServerUpdateQueue');\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [];\n\nif (\"production\" !== 'production') {\n  TRANSACTION_WRAPPERS.push({\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n    close: ReactInstrumentation.debugTool.onEndFlush\n  });\n}\n\nvar noopCallbackQueue = {\n  enqueue: function () {}\n};\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.useCreateElement = false;\n  this.updateQueue = new ReactServerUpdateQueue(this);\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap procedures.\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return noopCallbackQueue;\n  },\n\n  /**\n   * @return {object} The queue to collect React async events.\n   */\n  getUpdateQueue: function () {\n    return this.updateQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {},\n\n  checkpoint: function () {},\n\n  rollback: function () {}\n};\n\n_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\n\nvar warning = require('fbjs/lib/warning');\n\nfunction warnNoop(publicInstance, callerName) {\n  if (\"production\" !== 'production') {\n    var constructor = publicInstance.constructor;\n    \"production\" !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n  }\n}\n\n/**\n * This is the update queue used for server rendering.\n * It delegates to ReactUpdateQueue while server rendering is in progress and\n * switches to ReactNoopUpdateQueue after the transaction has completed.\n * @class ReactServerUpdateQueue\n * @param {Transaction} transaction\n */\n\nvar ReactServerUpdateQueue = function () {\n  function ReactServerUpdateQueue(transaction) {\n    _classCallCheck(this, ReactServerUpdateQueue);\n\n    this.transaction = transaction;\n  }\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n\n\n  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {\n    return false;\n  };\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);\n    }\n  };\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueForceUpdate(publicInstance);\n    } else {\n      warnNoop(publicInstance, 'forceUpdate');\n    }\n  };\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object|function} completeState Next state.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);\n    } else {\n      warnNoop(publicInstance, 'replaceState');\n    }\n  };\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object|function} partialState Next partial state to be merged with state.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);\n    } else {\n      warnNoop(publicInstance, 'setState');\n    }\n  };\n\n  return ReactServerUpdateQueue;\n}();\n\nmodule.exports = ReactServerUpdateQueue;","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction enqueueUpdate(internalInstance) {\n  ReactUpdates.enqueueUpdate(internalInstance);\n}\n\nfunction formatUnexpectedArgument(arg) {\n  var type = typeof arg;\n  if (type !== 'object') {\n    return type;\n  }\n  var displayName = arg.constructor && arg.constructor.name || type;\n  var keys = Object.keys(arg);\n  if (keys.length > 0 && keys.length < 20) {\n    return displayName + ' (keys: ' + keys.join(', ') + ')';\n  }\n  return displayName;\n}\n\nfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n  var internalInstance = ReactInstanceMap.get(publicInstance);\n  if (!internalInstance) {\n    if (\"production\" !== 'production') {\n      var ctor = publicInstance.constructor;\n      // Only warn when we have a callerName. Otherwise we should be silent.\n      // We're probably calling from enqueueCallback. We don't want to warn\n      // there because we already warned for the corresponding lifecycle method.\n      \"production\" !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;\n    }\n    return null;\n  }\n\n  if (\"production\" !== 'production') {\n    \"production\" !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + \"within `render` or another component's constructor). Render methods \" + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;\n  }\n\n  return internalInstance;\n}\n\n/**\n * ReactUpdateQueue allows for state updates to be scheduled into a later\n * reconciliation step.\n */\nvar ReactUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    if (\"production\" !== 'production') {\n      var owner = ReactCurrentOwner.current;\n      if (owner !== null) {\n        \"production\" !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n        owner._warnedAboutRefsInRender = true;\n      }\n    }\n    var internalInstance = ReactInstanceMap.get(publicInstance);\n    if (internalInstance) {\n      // During componentWillMount and render this will still be null but after\n      // that will always render to something. At least for now. So we can use\n      // this hack.\n      return !!internalInstance._renderedComponent;\n    } else {\n      return false;\n    }\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @param {string} callerName Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback, callerName) {\n    ReactUpdateQueue.validateCallback(callback, callerName);\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\n    // Previously we would throw an error if we didn't have an internal\n    // instance. Since we want to make it a no-op instead, we mirror the same\n    // behavior we have in other enqueue* methods.\n    // We also need to ignore callbacks in componentWillMount. See\n    // enqueueUpdates.\n    if (!internalInstance) {\n      return null;\n    }\n\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    // TODO: The callback here is ignored when setState is called from\n    // componentWillMount. Either fix it or disallow doing so completely in\n    // favor of getInitialState. Alternatively, we can disallow\n    // componentWillMount during server-side rendering.\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueCallbackInternal: function (internalInstance, callback) {\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingForceUpdate = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingStateQueue = [completeState];\n    internalInstance._pendingReplaceState = true;\n\n    // Future-proof 15.5\n    if (callback !== undefined && callback !== null) {\n      ReactUpdateQueue.validateCallback(callback, 'replaceState');\n      if (internalInstance._pendingCallbacks) {\n        internalInstance._pendingCallbacks.push(callback);\n      } else {\n        internalInstance._pendingCallbacks = [callback];\n      }\n    }\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    if (\"production\" !== 'production') {\n      ReactInstrumentation.debugTool.onSetState();\n      \"production\" !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;\n    }\n\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);\n    queue.push(partialState);\n\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {\n    internalInstance._pendingElement = nextElement;\n    // TODO: introduce _pendingContext instead of setting it directly.\n    internalInstance._context = nextContext;\n    enqueueUpdate(internalInstance);\n  },\n\n  validateCallback: function (callback, callerName) {\n    !(!callback || typeof callback === 'function') ? \"production\" !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;\n  }\n};\n\nmodule.exports = ReactUpdateQueue;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactFeatureFlags = require('./ReactFeatureFlags');\nvar ReactReconciler = require('./ReactReconciler');\nvar Transaction = require('./Transaction');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar dirtyComponents = [];\nvar updateBatchNumber = 0;\nvar asapCallbackQueue = CallbackQueue.getPooled();\nvar asapEnqueued = false;\n\nvar batchingStrategy = null;\n\nfunction ensureInjected() {\n  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? \"production\" !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;\n}\n\nvar NESTED_UPDATES = {\n  initialize: function () {\n    this.dirtyComponentsLength = dirtyComponents.length;\n  },\n  close: function () {\n    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n      // Additional updates were enqueued by componentDidUpdate handlers or\n      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n      // these new updates so that if A's componentDidUpdate calls setState on\n      // B, B will update before the callback A's updater provided when calling\n      // setState.\n      dirtyComponents.splice(0, this.dirtyComponentsLength);\n      flushBatchedUpdates();\n    } else {\n      dirtyComponents.length = 0;\n    }\n  }\n};\n\nvar UPDATE_QUEUEING = {\n  initialize: function () {\n    this.callbackQueue.reset();\n  },\n  close: function () {\n    this.callbackQueue.notifyAll();\n  }\n};\n\nvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\nfunction ReactUpdatesFlushTransaction() {\n  this.reinitializeTransaction();\n  this.dirtyComponentsLength = null;\n  this.callbackQueue = CallbackQueue.getPooled();\n  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* useCreateElement */true);\n}\n\n_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  destructor: function () {\n    this.dirtyComponentsLength = null;\n    CallbackQueue.release(this.callbackQueue);\n    this.callbackQueue = null;\n    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n    this.reconcileTransaction = null;\n  },\n\n  perform: function (method, scope, a) {\n    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n    // with this transaction's wrappers around it.\n    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);\n  }\n});\n\nPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\nfunction batchedUpdates(callback, a, b, c, d, e) {\n  ensureInjected();\n  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);\n}\n\n/**\n * Array comparator for ReactComponents by mount ordering.\n *\n * @param {ReactComponent} c1 first component you're comparing\n * @param {ReactComponent} c2 second component you're comparing\n * @return {number} Return value usable by Array.prototype.sort().\n */\nfunction mountOrderComparator(c1, c2) {\n  return c1._mountOrder - c2._mountOrder;\n}\n\nfunction runBatchedUpdates(transaction) {\n  var len = transaction.dirtyComponentsLength;\n  !(len === dirtyComponents.length) ? \"production\" !== 'production' ? invariant(false, 'Expected flush transaction\\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;\n\n  // Since reconciling a component higher in the owner hierarchy usually (not\n  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n  // them before their children by sorting the array.\n  dirtyComponents.sort(mountOrderComparator);\n\n  // Any updates enqueued while reconciling must be performed after this entire\n  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and\n  // C, B could update twice in a single batch if C's render enqueues an update\n  // to B (since B would have already updated, we should skip it, and the only\n  // way we can know to do so is by checking the batch counter).\n  updateBatchNumber++;\n\n  for (var i = 0; i < len; i++) {\n    // If a component is unmounted before pending changes apply, it will still\n    // be here, but we assume that it has cleared its _pendingCallbacks and\n    // that performUpdateIfNecessary is a noop.\n    var component = dirtyComponents[i];\n\n    // If performUpdateIfNecessary happens to enqueue any new updates, we\n    // shouldn't execute the callbacks until the next render happens, so\n    // stash the callbacks first\n    var callbacks = component._pendingCallbacks;\n    component._pendingCallbacks = null;\n\n    var markerName;\n    if (ReactFeatureFlags.logTopLevelRenders) {\n      var namedComponent = component;\n      // Duck type TopLevelWrapper. This is probably always true.\n      if (component._currentElement.type.isReactTopLevelWrapper) {\n        namedComponent = component._renderedComponent;\n      }\n      markerName = 'React update: ' + namedComponent.getName();\n      console.time(markerName);\n    }\n\n    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);\n\n    if (markerName) {\n      console.timeEnd(markerName);\n    }\n\n    if (callbacks) {\n      for (var j = 0; j < callbacks.length; j++) {\n        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());\n      }\n    }\n  }\n}\n\nvar flushBatchedUpdates = function () {\n  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n  // componentDidUpdate) but we need to check here too in order to catch\n  // updates enqueued by setState callbacks and asap calls.\n  while (dirtyComponents.length || asapEnqueued) {\n    if (dirtyComponents.length) {\n      var transaction = ReactUpdatesFlushTransaction.getPooled();\n      transaction.perform(runBatchedUpdates, null, transaction);\n      ReactUpdatesFlushTransaction.release(transaction);\n    }\n\n    if (asapEnqueued) {\n      asapEnqueued = false;\n      var queue = asapCallbackQueue;\n      asapCallbackQueue = CallbackQueue.getPooled();\n      queue.notifyAll();\n      CallbackQueue.release(queue);\n    }\n  }\n};\n\n/**\n * Mark a component as needing a rerender, adding an optional callback to a\n * list of functions which will be executed once the rerender occurs.\n */\nfunction enqueueUpdate(component) {\n  ensureInjected();\n\n  // Various parts of our code (such as ReactCompositeComponent's\n  // _renderValidatedComponent) assume that calls to render aren't nested;\n  // verify that that's the case. (This is called by each top-level update\n  // function, like setState, forceUpdate, etc.; creation and\n  // destruction of top-level components is guarded in ReactMount.)\n\n  if (!batchingStrategy.isBatchingUpdates) {\n    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n    return;\n  }\n\n  dirtyComponents.push(component);\n  if (component._updateBatchNumber == null) {\n    component._updateBatchNumber = updateBatchNumber + 1;\n  }\n}\n\n/**\n * Enqueue a callback to be run at the end of the current batching cycle. Throws\n * if no updates are currently being performed.\n */\nfunction asap(callback, context) {\n  !batchingStrategy.isBatchingUpdates ? \"production\" !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;\n  asapCallbackQueue.enqueue(callback, context);\n  asapEnqueued = true;\n}\n\nvar ReactUpdatesInjection = {\n  injectReconcileTransaction: function (ReconcileTransaction) {\n    !ReconcileTransaction ? \"production\" !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;\n    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n  },\n\n  injectBatchingStrategy: function (_batchingStrategy) {\n    !_batchingStrategy ? \"production\" !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;\n    !(typeof _batchingStrategy.batchedUpdates === 'function') ? \"production\" !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;\n    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? \"production\" !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;\n    batchingStrategy = _batchingStrategy;\n  }\n};\n\nvar ReactUpdates = {\n  /**\n   * React references `ReactReconcileTransaction` using this property in order\n   * to allow dependency injection.\n   *\n   * @internal\n   */\n  ReactReconcileTransaction: null,\n\n  batchedUpdates: batchedUpdates,\n  enqueueUpdate: enqueueUpdate,\n  flushBatchedUpdates: flushBatchedUpdates,\n  injection: ReactUpdatesInjection,\n  asap: asap\n};\n\nmodule.exports = ReactUpdates;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nmodule.exports = '15.6.1';","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar NS = {\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace'\n};\n\n// We use attributes for everything SVG so let's avoid some duplication and run\n// code instead.\n// The following are all specified in the HTML config already so we exclude here.\n// - class (as className)\n// - color\n// - height\n// - id\n// - lang\n// - max\n// - media\n// - method\n// - min\n// - name\n// - style\n// - target\n// - type\n// - width\nvar ATTRS = {\n  accentHeight: 'accent-height',\n  accumulate: 0,\n  additive: 0,\n  alignmentBaseline: 'alignment-baseline',\n  allowReorder: 'allowReorder',\n  alphabetic: 0,\n  amplitude: 0,\n  arabicForm: 'arabic-form',\n  ascent: 0,\n  attributeName: 'attributeName',\n  attributeType: 'attributeType',\n  autoReverse: 'autoReverse',\n  azimuth: 0,\n  baseFrequency: 'baseFrequency',\n  baseProfile: 'baseProfile',\n  baselineShift: 'baseline-shift',\n  bbox: 0,\n  begin: 0,\n  bias: 0,\n  by: 0,\n  calcMode: 'calcMode',\n  capHeight: 'cap-height',\n  clip: 0,\n  clipPath: 'clip-path',\n  clipRule: 'clip-rule',\n  clipPathUnits: 'clipPathUnits',\n  colorInterpolation: 'color-interpolation',\n  colorInterpolationFilters: 'color-interpolation-filters',\n  colorProfile: 'color-profile',\n  colorRendering: 'color-rendering',\n  contentScriptType: 'contentScriptType',\n  contentStyleType: 'contentStyleType',\n  cursor: 0,\n  cx: 0,\n  cy: 0,\n  d: 0,\n  decelerate: 0,\n  descent: 0,\n  diffuseConstant: 'diffuseConstant',\n  direction: 0,\n  display: 0,\n  divisor: 0,\n  dominantBaseline: 'dominant-baseline',\n  dur: 0,\n  dx: 0,\n  dy: 0,\n  edgeMode: 'edgeMode',\n  elevation: 0,\n  enableBackground: 'enable-background',\n  end: 0,\n  exponent: 0,\n  externalResourcesRequired: 'externalResourcesRequired',\n  fill: 0,\n  fillOpacity: 'fill-opacity',\n  fillRule: 'fill-rule',\n  filter: 0,\n  filterRes: 'filterRes',\n  filterUnits: 'filterUnits',\n  floodColor: 'flood-color',\n  floodOpacity: 'flood-opacity',\n  focusable: 0,\n  fontFamily: 'font-family',\n  fontSize: 'font-size',\n  fontSizeAdjust: 'font-size-adjust',\n  fontStretch: 'font-stretch',\n  fontStyle: 'font-style',\n  fontVariant: 'font-variant',\n  fontWeight: 'font-weight',\n  format: 0,\n  from: 0,\n  fx: 0,\n  fy: 0,\n  g1: 0,\n  g2: 0,\n  glyphName: 'glyph-name',\n  glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n  glyphOrientationVertical: 'glyph-orientation-vertical',\n  glyphRef: 'glyphRef',\n  gradientTransform: 'gradientTransform',\n  gradientUnits: 'gradientUnits',\n  hanging: 0,\n  horizAdvX: 'horiz-adv-x',\n  horizOriginX: 'horiz-origin-x',\n  ideographic: 0,\n  imageRendering: 'image-rendering',\n  'in': 0,\n  in2: 0,\n  intercept: 0,\n  k: 0,\n  k1: 0,\n  k2: 0,\n  k3: 0,\n  k4: 0,\n  kernelMatrix: 'kernelMatrix',\n  kernelUnitLength: 'kernelUnitLength',\n  kerning: 0,\n  keyPoints: 'keyPoints',\n  keySplines: 'keySplines',\n  keyTimes: 'keyTimes',\n  lengthAdjust: 'lengthAdjust',\n  letterSpacing: 'letter-spacing',\n  lightingColor: 'lighting-color',\n  limitingConeAngle: 'limitingConeAngle',\n  local: 0,\n  markerEnd: 'marker-end',\n  markerMid: 'marker-mid',\n  markerStart: 'marker-start',\n  markerHeight: 'markerHeight',\n  markerUnits: 'markerUnits',\n  markerWidth: 'markerWidth',\n  mask: 0,\n  maskContentUnits: 'maskContentUnits',\n  maskUnits: 'maskUnits',\n  mathematical: 0,\n  mode: 0,\n  numOctaves: 'numOctaves',\n  offset: 0,\n  opacity: 0,\n  operator: 0,\n  order: 0,\n  orient: 0,\n  orientation: 0,\n  origin: 0,\n  overflow: 0,\n  overlinePosition: 'overline-position',\n  overlineThickness: 'overline-thickness',\n  paintOrder: 'paint-order',\n  panose1: 'panose-1',\n  pathLength: 'pathLength',\n  patternContentUnits: 'patternContentUnits',\n  patternTransform: 'patternTransform',\n  patternUnits: 'patternUnits',\n  pointerEvents: 'pointer-events',\n  points: 0,\n  pointsAtX: 'pointsAtX',\n  pointsAtY: 'pointsAtY',\n  pointsAtZ: 'pointsAtZ',\n  preserveAlpha: 'preserveAlpha',\n  preserveAspectRatio: 'preserveAspectRatio',\n  primitiveUnits: 'primitiveUnits',\n  r: 0,\n  radius: 0,\n  refX: 'refX',\n  refY: 'refY',\n  renderingIntent: 'rendering-intent',\n  repeatCount: 'repeatCount',\n  repeatDur: 'repeatDur',\n  requiredExtensions: 'requiredExtensions',\n  requiredFeatures: 'requiredFeatures',\n  restart: 0,\n  result: 0,\n  rotate: 0,\n  rx: 0,\n  ry: 0,\n  scale: 0,\n  seed: 0,\n  shapeRendering: 'shape-rendering',\n  slope: 0,\n  spacing: 0,\n  specularConstant: 'specularConstant',\n  specularExponent: 'specularExponent',\n  speed: 0,\n  spreadMethod: 'spreadMethod',\n  startOffset: 'startOffset',\n  stdDeviation: 'stdDeviation',\n  stemh: 0,\n  stemv: 0,\n  stitchTiles: 'stitchTiles',\n  stopColor: 'stop-color',\n  stopOpacity: 'stop-opacity',\n  strikethroughPosition: 'strikethrough-position',\n  strikethroughThickness: 'strikethrough-thickness',\n  string: 0,\n  stroke: 0,\n  strokeDasharray: 'stroke-dasharray',\n  strokeDashoffset: 'stroke-dashoffset',\n  strokeLinecap: 'stroke-linecap',\n  strokeLinejoin: 'stroke-linejoin',\n  strokeMiterlimit: 'stroke-miterlimit',\n  strokeOpacity: 'stroke-opacity',\n  strokeWidth: 'stroke-width',\n  surfaceScale: 'surfaceScale',\n  systemLanguage: 'systemLanguage',\n  tableValues: 'tableValues',\n  targetX: 'targetX',\n  targetY: 'targetY',\n  textAnchor: 'text-anchor',\n  textDecoration: 'text-decoration',\n  textRendering: 'text-rendering',\n  textLength: 'textLength',\n  to: 0,\n  transform: 0,\n  u1: 0,\n  u2: 0,\n  underlinePosition: 'underline-position',\n  underlineThickness: 'underline-thickness',\n  unicode: 0,\n  unicodeBidi: 'unicode-bidi',\n  unicodeRange: 'unicode-range',\n  unitsPerEm: 'units-per-em',\n  vAlphabetic: 'v-alphabetic',\n  vHanging: 'v-hanging',\n  vIdeographic: 'v-ideographic',\n  vMathematical: 'v-mathematical',\n  values: 0,\n  vectorEffect: 'vector-effect',\n  version: 0,\n  vertAdvY: 'vert-adv-y',\n  vertOriginX: 'vert-origin-x',\n  vertOriginY: 'vert-origin-y',\n  viewBox: 'viewBox',\n  viewTarget: 'viewTarget',\n  visibility: 0,\n  widths: 0,\n  wordSpacing: 'word-spacing',\n  writingMode: 'writing-mode',\n  x: 0,\n  xHeight: 'x-height',\n  x1: 0,\n  x2: 0,\n  xChannelSelector: 'xChannelSelector',\n  xlinkActuate: 'xlink:actuate',\n  xlinkArcrole: 'xlink:arcrole',\n  xlinkHref: 'xlink:href',\n  xlinkRole: 'xlink:role',\n  xlinkShow: 'xlink:show',\n  xlinkTitle: 'xlink:title',\n  xlinkType: 'xlink:type',\n  xmlBase: 'xml:base',\n  xmlns: 0,\n  xmlnsXlink: 'xmlns:xlink',\n  xmlLang: 'xml:lang',\n  xmlSpace: 'xml:space',\n  y: 0,\n  y1: 0,\n  y2: 0,\n  yChannelSelector: 'yChannelSelector',\n  z: 0,\n  zoomAndPan: 'zoomAndPan'\n};\n\nvar SVGDOMPropertyConfig = {\n  Properties: {},\n  DOMAttributeNamespaces: {\n    xlinkActuate: NS.xlink,\n    xlinkArcrole: NS.xlink,\n    xlinkHref: NS.xlink,\n    xlinkRole: NS.xlink,\n    xlinkShow: NS.xlink,\n    xlinkTitle: NS.xlink,\n    xlinkType: NS.xlink,\n    xmlBase: NS.xml,\n    xmlLang: NS.xml,\n    xmlSpace: NS.xml\n  },\n  DOMAttributeNames: {}\n};\n\nObject.keys(ATTRS).forEach(function (key) {\n  SVGDOMPropertyConfig.Properties[key] = 0;\n  if (ATTRS[key]) {\n    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];\n  }\n});\n\nmodule.exports = SVGDOMPropertyConfig;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getActiveElement = require('fbjs/lib/getActiveElement');\nvar isTextInputElement = require('./isTextInputElement');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\n\nvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: 'onSelect',\n      captured: 'onSelectCapture'\n    },\n    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']\n  }\n};\n\nvar activeElement = null;\nvar activeElementInst = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n// Track whether a listener exists for this plugin. If none exist, we do\n// not extract events. See #3639.\nvar hasListener = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n\n  return null;\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (!hasListener) {\n      return null;\n    }\n\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case 'topFocus':\n        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n          activeElement = targetNode;\n          activeElementInst = targetInst;\n          lastSelection = null;\n        }\n        break;\n      case 'topBlur':\n        activeElement = null;\n        activeElementInst = null;\n        lastSelection = null;\n        break;\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case 'topMouseDown':\n        mouseDown = true;\n        break;\n      case 'topContextMenu':\n      case 'topMouseUp':\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n      case 'topSelectionChange':\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n      // falls through\n      case 'topKeyDown':\n      case 'topKeyUp':\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n\n    return null;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    if (registrationName === 'onSelect') {\n      hasListener = true;\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar EventPropagators = require('./EventPropagators');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar SyntheticAnimationEvent = require('./SyntheticAnimationEvent');\nvar SyntheticClipboardEvent = require('./SyntheticClipboardEvent');\nvar SyntheticEvent = require('./SyntheticEvent');\nvar SyntheticFocusEvent = require('./SyntheticFocusEvent');\nvar SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\nvar SyntheticDragEvent = require('./SyntheticDragEvent');\nvar SyntheticTouchEvent = require('./SyntheticTouchEvent');\nvar SyntheticTransitionEvent = require('./SyntheticTransitionEvent');\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar SyntheticWheelEvent = require('./SyntheticWheelEvent');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getEventCharCode = require('./getEventCharCode');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Turns\n * ['abort', ...]\n * into\n * eventTypes = {\n *   'abort': {\n *     phasedRegistrationNames: {\n *       bubbled: 'onAbort',\n *       captured: 'onAbortCapture',\n *     },\n *     dependencies: ['topAbort'],\n *   },\n *   ...\n * };\n * topLevelEventsToDispatchConfig = {\n *   'topAbort': { sameConfig }\n * };\n */\nvar eventTypes = {};\nvar topLevelEventsToDispatchConfig = {};\n['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {\n  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n  var onEvent = 'on' + capitalizedEvent;\n  var topEvent = 'top' + capitalizedEvent;\n\n  var type = {\n    phasedRegistrationNames: {\n      bubbled: onEvent,\n      captured: onEvent + 'Capture'\n    },\n    dependencies: [topEvent]\n  };\n  eventTypes[event] = type;\n  topLevelEventsToDispatchConfig[topEvent] = type;\n});\n\nvar onClickListeners = {};\n\nfunction getDictionaryKey(inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n}\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nvar SimpleEventPlugin = {\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    var EventConstructor;\n    switch (topLevelType) {\n      case 'topAbort':\n      case 'topCanPlay':\n      case 'topCanPlayThrough':\n      case 'topDurationChange':\n      case 'topEmptied':\n      case 'topEncrypted':\n      case 'topEnded':\n      case 'topError':\n      case 'topInput':\n      case 'topInvalid':\n      case 'topLoad':\n      case 'topLoadedData':\n      case 'topLoadedMetadata':\n      case 'topLoadStart':\n      case 'topPause':\n      case 'topPlay':\n      case 'topPlaying':\n      case 'topProgress':\n      case 'topRateChange':\n      case 'topReset':\n      case 'topSeeked':\n      case 'topSeeking':\n      case 'topStalled':\n      case 'topSubmit':\n      case 'topSuspend':\n      case 'topTimeUpdate':\n      case 'topVolumeChange':\n      case 'topWaiting':\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n      case 'topKeyPress':\n        // Firefox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n      /* falls through */\n      case 'topKeyDown':\n      case 'topKeyUp':\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case 'topBlur':\n      case 'topFocus':\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case 'topClick':\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n      /* falls through */\n      case 'topDoubleClick':\n      case 'topMouseDown':\n      case 'topMouseMove':\n      case 'topMouseUp':\n      // TODO: Disabled elements should not respond to mouse events\n      /* falls through */\n      case 'topMouseOut':\n      case 'topMouseOver':\n      case 'topContextMenu':\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case 'topDrag':\n      case 'topDragEnd':\n      case 'topDragEnter':\n      case 'topDragExit':\n      case 'topDragLeave':\n      case 'topDragOver':\n      case 'topDragStart':\n      case 'topDrop':\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case 'topTouchCancel':\n      case 'topTouchEnd':\n      case 'topTouchMove':\n      case 'topTouchStart':\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case 'topAnimationEnd':\n      case 'topAnimationIteration':\n      case 'topAnimationStart':\n        EventConstructor = SyntheticAnimationEvent;\n        break;\n      case 'topTransitionEnd':\n        EventConstructor = SyntheticTransitionEvent;\n        break;\n      case 'topScroll':\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case 'topWheel':\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case 'topCopy':\n      case 'topCut':\n      case 'topPaste':\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n    }\n    !EventConstructor ? \"production\" !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;\n    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    // Mobile Safari does not fire properly bubble click events on\n    // non-interactive elements, which means delegated click listeners do not\n    // fire. The workaround for this bug involves attaching an empty click\n    // listener on the target node.\n    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n      var key = getDictionaryKey(inst);\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      if (!onClickListeners[key]) {\n        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);\n      }\n    }\n  },\n\n  willDeleteListener: function (inst, registrationName) {\n    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n      var key = getDictionaryKey(inst);\n      onClickListeners[key].remove();\n      delete onClickListeners[key];\n    }\n  }\n};\n\nmodule.exports = SimpleEventPlugin;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n */\nvar AnimationEventInterface = {\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);\n\nmodule.exports = SyntheticAnimationEvent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nvar ClipboardEventInterface = {\n  clipboardData: function (event) {\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\nmodule.exports = SyntheticClipboardEvent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nvar CompositionEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);\n\nmodule.exports = SyntheticCompositionEvent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar DragEventInterface = {\n  dataTransfer: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\nmodule.exports = SyntheticDragEvent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnForAddedNewProperty = false;\nvar isProxySupported = typeof Proxy === 'function';\n\nvar shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\nfunction SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n  if (\"production\" !== 'production') {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    if (\"production\" !== 'production') {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n  return this;\n}\n\n_assign(SyntheticEvent.prototype, {\n  preventDefault: function () {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n      // eslint-disable-next-line valid-typeof\n    } else if (typeof event.returnValue !== 'unknown') {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function () {\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n      // eslint-disable-next-line valid-typeof\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function () {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function () {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      if (\"production\" !== 'production') {\n        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n      } else {\n        this[propName] = null;\n      }\n    }\n    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {\n      this[shouldBeReleasedProperties[i]] = null;\n    }\n    if (\"production\" !== 'production') {\n      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));\n      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));\n    }\n  }\n});\n\nSyntheticEvent.Interface = EventInterface;\n\nif (\"production\" !== 'production') {\n  if (isProxySupported) {\n    /*eslint-disable no-func-assign */\n    SyntheticEvent = new Proxy(SyntheticEvent, {\n      construct: function (target, args) {\n        return this.apply(target, Object.create(target.prototype), args);\n      },\n      apply: function (constructor, that, args) {\n        return new Proxy(constructor.apply(that, args), {\n          set: function (target, prop, value) {\n            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {\n              \"production\" !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), \"This synthetic event is reused for performance reasons. If you're \" + \"seeing this, you're adding a new property in the synthetic event object. \" + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;\n              didWarnForAddedNewProperty = true;\n            }\n            target[prop] = value;\n            return true;\n          }\n        });\n      }\n    });\n    /*eslint-enable no-func-assign */\n  }\n}\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function (Class, Interface) {\n  var Super = this;\n\n  var E = function () {};\n  E.prototype = Super.prototype;\n  var prototype = new E();\n\n  _assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = _assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\n\nmodule.exports = SyntheticEvent;\n\n/**\n  * Helper to nullify syntheticEvent instance properties when destructing\n  *\n  * @param {object} SyntheticEvent\n  * @param {String} propName\n  * @return {object} defineProperty object\n  */\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  var isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get\n  };\n\n  function set(val) {\n    var action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    var action = isFunction ? 'accessing the method' : 'accessing the property';\n    var result = isFunction ? 'This is a no-op function' : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    var warningCondition = false;\n    \"production\" !== 'production' ? warning(warningCondition, \"This synthetic event is reused for performance reasons. If you're seeing this, \" + \"you're %s `%s` on a released/nullified synthetic event. %s. \" + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;\n  }\n}","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar FocusEventInterface = {\n  relatedTarget: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\nmodule.exports = SyntheticFocusEvent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nvar InputEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);\n\nmodule.exports = SyntheticInputEvent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventCharCode = require('./getEventCharCode');\nvar getEventKey = require('./getEventKey');\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar KeyboardEventInterface = {\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function (event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function (event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function (event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\nmodule.exports = SyntheticKeyboardEvent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function (event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function (event) {\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n  },\n  // \"Proprietary\" Interface.\n  pageX: function (event) {\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function (event) {\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar TouchEventInterface = {\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\nmodule.exports = SyntheticTouchEvent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n */\nvar TransitionEventInterface = {\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);\n\nmodule.exports = SyntheticTransitionEvent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\n\n/**\n * @interface UIEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar UIEventInterface = {\n  view: function (event) {\n    if (event.view) {\n      return event.view;\n    }\n\n    var target = getEventTarget(event);\n    if (target.window === target) {\n      // target is a window object\n      return target;\n    }\n\n    var doc = target.ownerDocument;\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    if (doc) {\n      return doc.defaultView || doc.parentWindow;\n    } else {\n      return window;\n    }\n  },\n  detail: function (event) {\n    return event.detail || 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\nmodule.exports = SyntheticUIEvent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar WheelEventInterface = {\n  deltaX: function (event) {\n    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n  },\n  deltaY: function (event) {\n    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n    'wheelDelta' in event ? -event.wheelDelta : 0;\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticMouseEvent}\n */\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\nmodule.exports = SyntheticWheelEvent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar OBSERVED_ERROR = {};\n\n/**\n * `Transaction` creates a black box that is able to wrap any method such that\n * certain invariants are maintained before and after the method is invoked\n * (Even if an exception is thrown while invoking the wrapped method). Whoever\n * instantiates a transaction can provide enforcers of the invariants at\n * creation time. The `Transaction` class itself will supply one additional\n * automatic invariant for you - the invariant that any transaction instance\n * should not be run while it is already being run. You would typically create a\n * single instance of a `Transaction` for reuse multiple times, that potentially\n * is used to wrap several different methods. Wrappers are extremely simple -\n * they only require implementing two methods.\n *\n * <pre>\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n * </pre>\n *\n * Use cases:\n * - Preserving the input selection ranges before/after reconciliation.\n *   Restoring selection even in the event of an unexpected error.\n * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n *   while guaranteeing that afterwards, the event system is reactivated.\n * - Flushing a queue of collected DOM mutations to the main UI thread after a\n *   reconciliation takes place in a worker thread.\n * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n *   content.\n * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n * - (Future use case): Layout calculations before and after DOM updates.\n *\n * Transactional plugin API:\n * - A module that has an `initialize` method that returns any precomputation.\n * - and a `close` method that accepts the precomputation. `close` is invoked\n *   when the wrapped process is completed, or has failed.\n *\n * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n * that implement `initialize` and `close`.\n * @return {Transaction} Single transaction for reuse in thread.\n *\n * @class Transaction\n */\nvar TransactionImpl = {\n  /**\n   * Sets up this instance so that it is prepared for collecting metrics. Does\n   * so such that this setup method may be used on an instance that is already\n   * initialized, in a way that does not consume additional memory upon reuse.\n   * That can be useful if you decide to make your subclass of this mixin a\n   * \"PooledClass\".\n   */\n  reinitializeTransaction: function () {\n    this.transactionWrappers = this.getTransactionWrappers();\n    if (this.wrapperInitData) {\n      this.wrapperInitData.length = 0;\n    } else {\n      this.wrapperInitData = [];\n    }\n    this._isInTransaction = false;\n  },\n\n  _isInTransaction: false,\n\n  /**\n   * @abstract\n   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n   */\n  getTransactionWrappers: null,\n\n  isInTransaction: function () {\n    return !!this._isInTransaction;\n  },\n\n  /* eslint-disable space-before-function-paren */\n\n  /**\n   * Executes the function within a safety window. Use this for the top level\n   * methods that result in large amounts of computation/mutations that would\n   * need to be safety checked. The optional arguments helps prevent the need\n   * to bind in many cases.\n   *\n   * @param {function} method Member of scope to call.\n   * @param {Object} scope Scope to invoke from.\n   * @param {Object?=} a Argument to pass to the method.\n   * @param {Object?=} b Argument to pass to the method.\n   * @param {Object?=} c Argument to pass to the method.\n   * @param {Object?=} d Argument to pass to the method.\n   * @param {Object?=} e Argument to pass to the method.\n   * @param {Object?=} f Argument to pass to the method.\n   *\n   * @return {*} Return value from `method`.\n   */\n  perform: function (method, scope, a, b, c, d, e, f) {\n    /* eslint-enable space-before-function-paren */\n    !!this.isInTransaction() ? \"production\" !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;\n    var errorThrown;\n    var ret;\n    try {\n      this._isInTransaction = true;\n      // Catching errors makes debugging more difficult, so we start with\n      // errorThrown set to true before setting it to false after calling\n      // close -- if it's still set to true in the finally block, it means\n      // one of these calls threw.\n      errorThrown = true;\n      this.initializeAll(0);\n      ret = method.call(scope, a, b, c, d, e, f);\n      errorThrown = false;\n    } finally {\n      try {\n        if (errorThrown) {\n          // If `method` throws, prefer to show that stack trace over any thrown\n          // by invoking `closeAll`.\n          try {\n            this.closeAll(0);\n          } catch (err) {}\n        } else {\n          // Since `method` didn't throw, we don't want to silence the exception\n          // here.\n          this.closeAll(0);\n        }\n      } finally {\n        this._isInTransaction = false;\n      }\n    }\n    return ret;\n  },\n\n  initializeAll: function (startIndex) {\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      try {\n        // Catching errors makes debugging more difficult, so we start with the\n        // OBSERVED_ERROR state before overwriting it with the real return value\n        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n        // block, it means wrapper.initialize threw.\n        this.wrapperInitData[i] = OBSERVED_ERROR;\n        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;\n      } finally {\n        if (this.wrapperInitData[i] === OBSERVED_ERROR) {\n          // The initializer for wrapper i threw an error; initialize the\n          // remaining wrappers but silence any exceptions from them to ensure\n          // that the first error is the one to bubble up.\n          try {\n            this.initializeAll(i + 1);\n          } catch (err) {}\n        }\n      }\n    }\n  },\n\n  /**\n   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n   * them the respective return values of `this.transactionWrappers.init[i]`\n   * (`close`rs that correspond to initializers that failed will not be\n   * invoked).\n   */\n  closeAll: function (startIndex) {\n    !this.isInTransaction() ? \"production\" !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      var initData = this.wrapperInitData[i];\n      var errorThrown;\n      try {\n        // Catching errors makes debugging more difficult, so we start with\n        // errorThrown set to true before setting it to false after calling\n        // close -- if it's still set to true in the finally block, it means\n        // wrapper.close threw.\n        errorThrown = true;\n        if (initData !== OBSERVED_ERROR && wrapper.close) {\n          wrapper.close.call(this, initData);\n        }\n        errorThrown = false;\n      } finally {\n        if (errorThrown) {\n          // The closer for wrapper i threw an error; close the remaining\n          // wrappers but silence any exceptions from them to ensure that the\n          // first error is the one to bubble up.\n          try {\n            this.closeAll(i + 1);\n          } catch (e) {}\n        }\n      }\n    }\n    this.wrapperInitData.length = 0;\n  }\n};\n\nmodule.exports = TransactionImpl;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ViewportMetrics = {\n  currentScrollLeft: 0,\n\n  currentScrollTop: 0,\n\n  refreshScrollValues: function (scrollPosition) {\n    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n    ViewportMetrics.currentScrollTop = scrollPosition.y;\n  }\n};\n\nmodule.exports = ViewportMetrics;","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  !(next != null) ? \"production\" !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    if (Array.isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n    current.push(next);\n    return current;\n  }\n\n  if (Array.isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nmodule.exports = accumulateInto;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar MOD = 65521;\n\n// adler32 is not cryptographically strong, and is only used to sanity check that\n// markup generated on the server matches the markup generated on the client.\n// This implementation (a modified version of the SheetJS version) has been optimized\n// for our use case, at the expense of conforming to the adler32 specification\n// for non-ascii inputs.\nfunction adler32(data) {\n  var a = 1;\n  var b = 0;\n  var i = 0;\n  var l = data.length;\n  var m = l & ~0x3;\n  while (i < m) {\n    var n = Math.min(i + 4096, m);\n    for (; i < n; i += 4) {\n      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n    }\n    a %= MOD;\n    b %= MOD;\n  }\n  for (; i < l; i++) {\n    b += a += data.charCodeAt(i);\n  }\n  a %= MOD;\n  b %= MOD;\n  return a | b << 16;\n}\n\nmodule.exports = adler32;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && \"production\" === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n}\n\nvar loggedTypeFailures = {};\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?object} element The React element that is being type-checked\n * @param {?number} debugID The React component instance that is being type-checked\n * @private\n */\nfunction checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {\n  for (var typeSpecName in typeSpecs) {\n    if (typeSpecs.hasOwnProperty(typeSpecName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        !(typeof typeSpecs[typeSpecName] === 'function') ? \"production\" !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;\n        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n      } catch (ex) {\n        error = ex;\n      }\n      \"production\" !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var componentStackInfo = '';\n\n        if (\"production\" !== 'production') {\n          if (!ReactComponentTreeHook) {\n            ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n          }\n          if (debugID !== null) {\n            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);\n          } else if (element !== null) {\n            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);\n          }\n        }\n\n        \"production\" !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;\n      }\n    }\n  }\n}\n\nmodule.exports = checkReactTypeSpec;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/* globals MSApp */\n\n'use strict';\n\n/**\n * Create a function which has 'unsafe' privileges (required by windows8 apps)\n */\n\nvar createMicrosoftUnsafeLocalFunction = function (func) {\n  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n    return function (arg0, arg1, arg2, arg3) {\n      MSApp.execUnsafeLocalFunction(function () {\n        return func(arg0, arg1, arg2, arg3);\n      });\n    };\n  } else {\n    return func;\n  }\n};\n\nmodule.exports = createMicrosoftUnsafeLocalFunction;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar warning = require('fbjs/lib/warning');\n\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\nvar styleWarnings = {};\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @param {ReactDOMComponent} component\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, component, isCustomProperty) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  var isNonNumeric = isNaN(value);\n  if (isCustomProperty || isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n\n  if (typeof value === 'string') {\n    if (\"production\" !== 'production') {\n      // Allow '0' to pass through without warning. 0 is already special and\n      // doesn't require units, so we don't need to warn about it.\n      if (component && value !== '0') {\n        var owner = component._currentElement._owner;\n        var ownerName = owner ? owner.getName() : null;\n        if (ownerName && !styleWarnings[ownerName]) {\n          styleWarnings[ownerName] = {};\n        }\n        var warned = false;\n        if (ownerName) {\n          var warnings = styleWarnings[ownerName];\n          warned = warnings[name];\n          if (!warned) {\n            warnings[name] = true;\n          }\n        }\n        if (!warned) {\n          \"production\" !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;\n        }\n      }\n    }\n    value = value.trim();\n  }\n  return value + 'px';\n}\n\nmodule.exports = dangerousStyleValue;","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Based on the escape-html library, which is used under the MIT License below:\n *\n * Copyright (c) 2012-2013 TJ Holowaychuk\n * Copyright (c) 2015 Andreas Lubbe\n * Copyright (c) 2015 Tiancheng \"Timothy\" Gu\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\n\n'use strict';\n\n// code copied and modified from escape-html\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        // \"\n        escape = '&quot;';\n        break;\n      case 38:\n        // &\n        escape = '&amp;';\n        break;\n      case 39:\n        // '\n        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\n        break;\n      case 60:\n        // <\n        escape = '&lt;';\n        break;\n      case 62:\n        // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n}\n// end code copied and modified from escape-html\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextContentForBrowser(text) {\n  if (typeof text === 'boolean' || typeof text === 'number') {\n    // this shortcircuit helps perf for types that we know will never have\n    // special characters, especially given that this function is used often\n    // for numeric dom ids.\n    return '' + text;\n  }\n  return escapeHtml(text);\n}\n\nmodule.exports = escapeTextContentForBrowser;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstanceMap = require('./ReactInstanceMap');\n\nvar getHostComponentFromComposite = require('./getHostComponentFromComposite');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Returns the DOM node rendered by this element.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {?DOMElement} The root node of this element.\n */\nfunction findDOMNode(componentOrElement) {\n  if (\"production\" !== 'production') {\n    var owner = ReactCurrentOwner.current;\n    if (owner !== null) {\n      \"production\" !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if (componentOrElement.nodeType === 1) {\n    return componentOrElement;\n  }\n\n  var inst = ReactInstanceMap.get(componentOrElement);\n  if (inst) {\n    inst = getHostComponentFromComposite(inst);\n    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;\n  }\n\n  if (typeof componentOrElement.render === 'function') {\n    !false ? \"production\" !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;\n  } else {\n    !false ? \"production\" !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;\n  }\n}\n\nmodule.exports = findDOMNode;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && \"production\" === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n}\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n * @param {number=} selfDebugID Optional debugID of the current internal instance.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {\n  // We found a component instance.\n  if (traverseContext && typeof traverseContext === 'object') {\n    var result = traverseContext;\n    var keyUnique = result[name] === undefined;\n    if (\"production\" !== 'production') {\n      if (!ReactComponentTreeHook) {\n        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n      }\n      if (!keyUnique) {\n        \"production\" !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n      }\n    }\n    if (keyUnique && child != null) {\n      result[name] = child;\n    }\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children, selfDebugID) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n\n  if (\"production\" !== 'production') {\n    traverseAllChildren(children, function (traverseContext, child, name) {\n      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);\n    }, result);\n  } else {\n    traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  }\n  return result;\n}\n\nmodule.exports = flattenChildren;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n */\n\nfunction forEachAccumulated(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\nmodule.exports = forEachAccumulated;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\n\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nmodule.exports = getEventCharCode;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar getEventCharCode = require('./getEventCharCode');\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar normalizeKey = {\n  Esc: 'Escape',\n  Spacebar: ' ',\n  Left: 'ArrowLeft',\n  Up: 'ArrowUp',\n  Right: 'ArrowRight',\n  Down: 'ArrowDown',\n  Del: 'Delete',\n  Win: 'OS',\n  Menu: 'ContextMenu',\n  Apps: 'ContextMenu',\n  Scroll: 'ScrollLock',\n  MozPrintableKey: 'Unidentified'\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar translateToKey = {\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  45: 'Insert',\n  46: 'Delete',\n  112: 'F1',\n  113: 'F2',\n  114: 'F3',\n  115: 'F4',\n  116: 'F5',\n  117: 'F6',\n  118: 'F7',\n  119: 'F8',\n  120: 'F9',\n  121: 'F10',\n  122: 'F11',\n  123: 'F12',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  224: 'Meta'\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nmodule.exports = getEventKey;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nvar modifierKeyToProp = {\n  Alt: 'altKey',\n  Control: 'ctrlKey',\n  Meta: 'metaKey',\n  Shift: 'shiftKey'\n};\n\n// IE8 does not implement getModifierState so we simply map it to the only\n// modifier keys exposed by the event itself, does not support Lock-keys.\n// Currently, all major browsers except Chrome seems to support Lock-keys.\nfunction modifierStateGetter(keyArg) {\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nmodule.exports = getEventModifierState;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\n\nfunction getEventTarget(nativeEvent) {\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n\n  // Normalize SVG <use> element events #4963\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  }\n\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === 3 ? target.parentNode : target;\n}\n\nmodule.exports = getEventTarget;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactNodeTypes = require('./ReactNodeTypes');\n\nfunction getHostComponentFromComposite(inst) {\n  var type;\n\n  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {\n    inst = inst._renderedComponent;\n  }\n\n  if (type === ReactNodeTypes.HOST) {\n    return inst._renderedComponent;\n  } else if (type === ReactNodeTypes.EMPTY) {\n    return null;\n  }\n}\n\nmodule.exports = getHostComponentFromComposite;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/* global Symbol */\n\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\n\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nmodule.exports = getNodeForCharacterOffset;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar contentKey = null;\n\n/**\n * Gets the key used to access text content on a DOM node.\n *\n * @return {?string} Key used to access text content.\n * @internal\n */\nfunction getTextContentAccessor() {\n  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n    // Prefer textContent to innerText because many browsers support both but\n    // SVG <text> elements don't support innerText even when <div> does.\n    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';\n  }\n  return contentKey;\n}\n\nmodule.exports = getTextContentAccessor;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n  prefixes['ms' + styleProp] = 'MS' + eventName;\n  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();\n\n  return prefixes;\n}\n\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\nvar vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n};\n\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\nvar prefixedEventNames = {};\n\n/**\n * Element to check for prefixes on.\n */\nvar style = {};\n\n/**\n * Bootstrap if a DOM exists.\n */\nif (ExecutionEnvironment.canUseDOM) {\n  style = document.createElement('div').style;\n\n  // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  }\n\n  // Same as above\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  var prefixMap = vendorPrefixes[eventName];\n\n  for (var styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return prefixedEventNames[eventName] = prefixMap[styleProp];\n    }\n  }\n\n  return '';\n}\n\nmodule.exports = getVendorPrefixedEventName;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nfunction isCheckable(elem) {\n  var type = elem.type;\n  var nodeName = elem.nodeName;\n  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');\n}\n\nfunction getTracker(inst) {\n  return inst._wrapperState.valueTracker;\n}\n\nfunction attachTracker(inst, tracker) {\n  inst._wrapperState.valueTracker = tracker;\n}\n\nfunction detachTracker(inst) {\n  delete inst._wrapperState.valueTracker;\n}\n\nfunction getValueFromNode(node) {\n  var value;\n  if (node) {\n    value = isCheckable(node) ? '' + node.checked : node.value;\n  }\n  return value;\n}\n\nvar inputValueTracking = {\n  // exposed for testing\n  _getTrackerFromNode: function (node) {\n    return getTracker(ReactDOMComponentTree.getInstanceFromNode(node));\n  },\n\n\n  track: function (inst) {\n    if (getTracker(inst)) {\n      return;\n    }\n\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var valueField = isCheckable(node) ? 'checked' : 'value';\n    var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);\n\n    var currentValue = '' + node[valueField];\n\n    // if someone has already defined a value or Safari, then bail\n    // and don't track value will cause over reporting of changes,\n    // but it's better then a hard failure\n    // (needed for certain tests that spyOn input values and Safari)\n    if (node.hasOwnProperty(valueField) || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {\n      return;\n    }\n\n    Object.defineProperty(node, valueField, {\n      enumerable: descriptor.enumerable,\n      configurable: true,\n      get: function () {\n        return descriptor.get.call(this);\n      },\n      set: function (value) {\n        currentValue = '' + value;\n        descriptor.set.call(this, value);\n      }\n    });\n\n    attachTracker(inst, {\n      getValue: function () {\n        return currentValue;\n      },\n      setValue: function (value) {\n        currentValue = '' + value;\n      },\n      stopTracking: function () {\n        detachTracker(inst);\n        delete node[valueField];\n      }\n    });\n  },\n\n  updateValueIfChanged: function (inst) {\n    if (!inst) {\n      return false;\n    }\n    var tracker = getTracker(inst);\n\n    if (!tracker) {\n      inputValueTracking.track(inst);\n      return true;\n    }\n\n    var lastValue = tracker.getValue();\n    var nextValue = getValueFromNode(ReactDOMComponentTree.getNodeFromInstance(inst));\n\n    if (nextValue !== lastValue) {\n      tracker.setValue(nextValue);\n      return true;\n    }\n\n    return false;\n  },\n  stopTracking: function (inst) {\n    var tracker = getTracker(inst);\n    if (tracker) {\n      tracker.stopTracking();\n    }\n  }\n};\n\nmodule.exports = inputValueTracking;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactCompositeComponent = require('./ReactCompositeComponent');\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\nvar ReactHostComponent = require('./ReactHostComponent');\n\nvar getNextDebugID = require('react/lib/getNextDebugID');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n// To avoid a cyclic dependency, we create the final class in this module\nvar ReactCompositeComponentWrapper = function (element) {\n  this.construct(element);\n};\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Check if the type reference is a known internal type. I.e. not a user\n * provided composite type.\n *\n * @param {function} type\n * @return {boolean} Returns true if this is a valid internal type.\n */\nfunction isInternalComponentType(type) {\n  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n}\n\n/**\n * Given a ReactNode, create an instance that will actually be mounted.\n *\n * @param {ReactNode} node\n * @param {boolean} shouldHaveDebugID\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(node, shouldHaveDebugID) {\n  var instance;\n\n  if (node === null || node === false) {\n    instance = ReactEmptyComponent.create(instantiateReactComponent);\n  } else if (typeof node === 'object') {\n    var element = node;\n    var type = element.type;\n    if (typeof type !== 'function' && typeof type !== 'string') {\n      var info = '';\n      if (\"production\" !== 'production') {\n        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n          info += ' You likely forgot to export your component from the file ' + \"it's defined in.\";\n        }\n      }\n      info += getDeclarationErrorAddendum(element._owner);\n      !false ? \"production\" !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;\n    }\n\n    // Special case string values\n    if (typeof element.type === 'string') {\n      instance = ReactHostComponent.createInternalComponent(element);\n    } else if (isInternalComponentType(element.type)) {\n      // This is temporarily available for custom components that are not string\n      // representations. I.e. ART. Once those are updated to use the string\n      // representation, we can drop this code path.\n      instance = new element.type(element);\n\n      // We renamed this. Allow the old name for compat. :(\n      if (!instance.getHostNode) {\n        instance.getHostNode = instance.getNativeNode;\n      }\n    } else {\n      instance = new ReactCompositeComponentWrapper(element);\n    }\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    instance = ReactHostComponent.createInstanceForText(node);\n  } else {\n    !false ? \"production\" !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;\n  }\n\n  if (\"production\" !== 'production') {\n    \"production\" !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;\n  }\n\n  // These two fields are used by the DOM and ART diffing algorithms\n  // respectively. Instead of using expandos on components, we should be\n  // storing the state needed by the diffing algorithms elsewhere.\n  instance._mountIndex = 0;\n  instance._mountImage = null;\n\n  if (\"production\" !== 'production') {\n    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;\n  }\n\n  // Internal instances should fully constructed at this point, so they should\n  // not get any new fields added to them at this point.\n  if (\"production\" !== 'production') {\n    if (Object.preventExtensions) {\n      Object.preventExtensions(instance);\n    }\n  }\n\n  return instance;\n}\n\n_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {\n  _instantiateReactComponent: instantiateReactComponent\n});\n\nmodule.exports = instantiateReactComponent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature = document.implementation && document.implementation.hasFeature &&\n  // always returns true in newer browsers as per the standard.\n  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n  document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in document;\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\n\nvar supportedInputTypes = {\n  color: true,\n  date: true,\n  datetime: true,\n  'datetime-local': true,\n  email: true,\n  month: true,\n  number: true,\n  password: true,\n  range: true,\n  search: true,\n  tel: true,\n  text: true,\n  time: true,\n  url: true,\n  week: true\n};\n\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\n  if (nodeName === 'input') {\n    return !!supportedInputTypes[elem.type];\n  }\n\n  if (nodeName === 'textarea') {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = isTextInputElement;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\n\n/**\n * Escapes attribute value to prevent scripting attacks.\n *\n * @param {*} value Value to escape.\n * @return {string} An escaped string.\n */\nfunction quoteAttributeValueForBrowser(value) {\n  return '\"' + escapeTextContentForBrowser(value) + '\"';\n}\n\nmodule.exports = quoteAttributeValueForBrowser;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n'use strict';\n\n/**\n * WARNING: DO NOT manually require this module.\n * This is a replacement for `invariant(...)` used by the error code system\n * and will _only_ be required by the corresponding babel pass.\n * It always throws.\n */\n\nfunction reactProdInvariant(code) {\n  var argCount = arguments.length - 1;\n\n  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\n  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n  }\n\n  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\n  var error = new Error(message);\n  error.name = 'Invariant Violation';\n  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\n  throw error;\n}\n\nmodule.exports = reactProdInvariant;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactMount = require('./ReactMount');\n\nmodule.exports = ReactMount.renderSubtreeIntoContainer;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar DOMNamespaces = require('./DOMNamespaces');\n\nvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\nvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\n\n// SVG temp container for IE lacking innerHTML\nvar reusableSVGContainer;\n\n/**\n * Set the innerHTML property of a node, ensuring that whitespace is preserved\n * even in IE8.\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nvar setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {\n  // IE does not have innerHTML for SVG nodes, so instead we inject the\n  // new markup in a temp node and then move the child nodes across into\n  // the target node\n  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {\n    reusableSVGContainer = reusableSVGContainer || document.createElement('div');\n    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';\n    var svgNode = reusableSVGContainer.firstChild;\n    while (svgNode.firstChild) {\n      node.appendChild(svgNode.firstChild);\n    }\n  } else {\n    node.innerHTML = html;\n  }\n});\n\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8: When updating a just created node with innerHTML only leading\n  // whitespace is removed. When updating an existing node with innerHTML\n  // whitespace in root TextNodes is also collapsed.\n  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\n  // Feature detection; only IE8 is known to behave improperly like this.\n  var testElement = document.createElement('div');\n  testElement.innerHTML = ' ';\n  if (testElement.innerHTML === '') {\n    setInnerHTML = function (node, html) {\n      // Magic theory: IE8 supposedly differentiates between added and updated\n      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n      // from worse whitespace behavior. Re-adding a node like this triggers\n      // the initial and more favorable whitespace behavior.\n      // TODO: What to do on a detached node?\n      if (node.parentNode) {\n        node.parentNode.replaceChild(node, node);\n      }\n\n      // We also implement a workaround for non-visible tags disappearing into\n      // thin air on IE8, this only happens if there is no visible text\n      // in-front of the non-visible tags. Piggyback on the whitespace fix\n      // and simply check if any non-visible tags appear in the source.\n      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n        // Recover leading whitespace by temporarily prepending any character.\n        // \\uFEFF has the potential advantage of being zero-width/invisible.\n        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode\n        // in hopes that this is preserved even if \"\\uFEFF\" is transformed to\n        // the actual Unicode character (by Babel, for example).\n        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216\n        node.innerHTML = String.fromCharCode(0xfeff) + html;\n\n        // deleteData leaves an empty `TextNode` which offsets the index of all\n        // children. Definitely want to avoid this.\n        var textNode = node.firstChild;\n        if (textNode.data.length === 1) {\n          node.removeChild(textNode);\n        } else {\n          textNode.deleteData(0, 1);\n        }\n      } else {\n        node.innerHTML = html;\n      }\n    };\n  }\n  testElement = null;\n}\n\nmodule.exports = setInnerHTML;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar setInnerHTML = require('./setInnerHTML');\n\n/**\n * Set the textContent property of a node, ensuring that whitespace is preserved\n * even in IE8. innerText is a poor substitute for textContent and, among many\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n * as it should.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nvar setTextContent = function (node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n\n    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  if (!('textContent' in document.documentElement)) {\n    setTextContent = function (node, text) {\n      if (node.nodeType === 3) {\n        node.nodeValue = text;\n        return;\n      }\n      setInnerHTML(node, escapeTextContentForBrowser(text));\n    };\n  }\n}\n\nmodule.exports = setTextContent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\n\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n  if (prevEmpty || nextEmpty) {\n    return prevEmpty === nextEmpty;\n  }\n\n  var prevType = typeof prevElement;\n  var nextType = typeof nextElement;\n  if (prevType === 'string' || prevType === 'number') {\n    return nextType === 'string' || nextType === 'number';\n  } else {\n    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\n  }\n}\n\nmodule.exports = shouldUpdateReactComponent;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * This is inlined from ReactElement since this file is shared between\n * isomorphic and renderers. We could extract this to a\n *\n */\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' ||\n  // The following is inlined from ReactElement. This means we can optimize\n  // some checks. React Fiber also inlines this logic for similar purposes.\n  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (\"production\" !== 'production') {\n          var mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n            }\n          }\n          \"production\" !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (\"production\" !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = \" It looks like you're using an element created by a different \" + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? \"production\" !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\nvar validateDOMNesting = emptyFunction;\n\nif (\"production\" !== 'production') {\n  // This validation code was written based on the HTML5 parsing spec:\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  //\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n  // not clear what practical benefit doing so provides); instead, we warn only\n  // for cases where the parser will give a parse tree differing from what React\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\n  // because it still parses correctly; we do warn for other cases like nested\n  // <p> tags where the beginning of the second element implicitly closes the\n  // first, causing a confusing mess.\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\n  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n  // TODO: Distinguish by namespace here -- for <title>, including it here\n  // errs on the side of fewer warnings\n  'foreignObject', 'desc', 'title'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n  var buttonScopeTags = inScopeTags.concat(['button']);\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n\n  var emptyAncestorInfo = {\n    current: null,\n\n    formTag: null,\n    aTagInScope: null,\n    buttonTagInScope: null,\n    nobrTagInScope: null,\n    pTagInButtonScope: null,\n\n    listItemTagAutoclosing: null,\n    dlItemTagAutoclosing: null\n  };\n\n  var updatedAncestorInfo = function (oldInfo, tag, instance) {\n    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);\n    var info = { tag: tag, instance: instance };\n\n    if (inScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.aTagInScope = null;\n      ancestorInfo.buttonTagInScope = null;\n      ancestorInfo.nobrTagInScope = null;\n    }\n    if (buttonScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.pTagInButtonScope = null;\n    }\n\n    // See rules for 'li', 'dd', 'dt' start tags in\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n      ancestorInfo.listItemTagAutoclosing = null;\n      ancestorInfo.dlItemTagAutoclosing = null;\n    }\n\n    ancestorInfo.current = info;\n\n    if (tag === 'form') {\n      ancestorInfo.formTag = info;\n    }\n    if (tag === 'a') {\n      ancestorInfo.aTagInScope = info;\n    }\n    if (tag === 'button') {\n      ancestorInfo.buttonTagInScope = info;\n    }\n    if (tag === 'nobr') {\n      ancestorInfo.nobrTagInScope = info;\n    }\n    if (tag === 'p') {\n      ancestorInfo.pTagInButtonScope = info;\n    }\n    if (tag === 'li') {\n      ancestorInfo.listItemTagAutoclosing = info;\n    }\n    if (tag === 'dd' || tag === 'dt') {\n      ancestorInfo.dlItemTagAutoclosing = info;\n    }\n\n    return ancestorInfo;\n  };\n\n  /**\n   * Returns whether\n   */\n  var isTagValidWithParent = function (tag, parentTag) {\n    // First, let's check if we're in an unusual parsing mode...\n    switch (parentTag) {\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n      case 'select':\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n      case 'optgroup':\n        return tag === 'option' || tag === '#text';\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n      // but\n      case 'option':\n        return tag === '#text';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n      // No special behavior since these rules fall back to \"in body\" mode for\n      // all except special table nodes which cause bad parsing behavior anyway.\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n      case 'tr':\n        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n      case 'tbody':\n      case 'thead':\n      case 'tfoot':\n        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n      case 'colgroup':\n        return tag === 'col' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n      case 'table':\n        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n      case 'head':\n        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n      case 'html':\n        return tag === 'head' || tag === 'body';\n      case '#document':\n        return tag === 'html';\n    }\n\n    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n    // where the parsing rules cause implicit opens or closes to be added.\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    switch (tag) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\n      case 'rp':\n      case 'rt':\n        return impliedEndTags.indexOf(parentTag) === -1;\n\n      case 'body':\n      case 'caption':\n      case 'col':\n      case 'colgroup':\n      case 'frame':\n      case 'head':\n      case 'html':\n      case 'tbody':\n      case 'td':\n      case 'tfoot':\n      case 'th':\n      case 'thead':\n      case 'tr':\n        // These tags are only valid with a few parents that have special child\n        // parsing rules -- if we're down here, then none of those matched and\n        // so we allow it only if we don't know what the parent is, as all other\n        // cases are invalid.\n        return parentTag == null;\n    }\n\n    return true;\n  };\n\n  /**\n   * Returns whether\n   */\n  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\n    switch (tag) {\n      case 'address':\n      case 'article':\n      case 'aside':\n      case 'blockquote':\n      case 'center':\n      case 'details':\n      case 'dialog':\n      case 'dir':\n      case 'div':\n      case 'dl':\n      case 'fieldset':\n      case 'figcaption':\n      case 'figure':\n      case 'footer':\n      case 'header':\n      case 'hgroup':\n      case 'main':\n      case 'menu':\n      case 'nav':\n      case 'ol':\n      case 'p':\n      case 'section':\n      case 'summary':\n      case 'ul':\n      case 'pre':\n      case 'listing':\n      case 'table':\n      case 'hr':\n      case 'xmp':\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return ancestorInfo.pTagInButtonScope;\n\n      case 'form':\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n      case 'li':\n        return ancestorInfo.listItemTagAutoclosing;\n\n      case 'dd':\n      case 'dt':\n        return ancestorInfo.dlItemTagAutoclosing;\n\n      case 'button':\n        return ancestorInfo.buttonTagInScope;\n\n      case 'a':\n        // Spec says something about storing a list of markers, but it sounds\n        // equivalent to this check.\n        return ancestorInfo.aTagInScope;\n\n      case 'nobr':\n        return ancestorInfo.nobrTagInScope;\n    }\n\n    return null;\n  };\n\n  /**\n   * Given a ReactCompositeComponent instance, return a list of its recursive\n   * owners, starting at the root and ending with the instance itself.\n   */\n  var findOwnerStack = function (instance) {\n    if (!instance) {\n      return [];\n    }\n\n    var stack = [];\n    do {\n      stack.push(instance);\n    } while (instance = instance._currentElement._owner);\n    stack.reverse();\n    return stack;\n  };\n\n  var didWarn = {};\n\n  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.current;\n    var parentTag = parentInfo && parentInfo.tag;\n\n    if (childText != null) {\n      \"production\" !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;\n      childTag = '#text';\n    }\n\n    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n    var problematic = invalidParent || invalidAncestor;\n\n    if (problematic) {\n      var ancestorTag = problematic.tag;\n      var ancestorInstance = problematic.instance;\n\n      var childOwner = childInstance && childInstance._currentElement._owner;\n      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;\n\n      var childOwners = findOwnerStack(childOwner);\n      var ancestorOwners = findOwnerStack(ancestorOwner);\n\n      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);\n      var i;\n\n      var deepestCommon = -1;\n      for (i = 0; i < minStackLen; i++) {\n        if (childOwners[i] === ancestorOwners[i]) {\n          deepestCommon = i;\n        } else {\n          break;\n        }\n      }\n\n      var UNKNOWN = '(unknown)';\n      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ownerInfo = [].concat(\n      // If the parent and child instances have a common owner ancestor, start\n      // with that -- otherwise we just start with the parent's owners.\n      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,\n      // If we're warning about an invalid (non-parent) ancestry, add '...'\n      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');\n\n      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;\n      if (didWarn[warnKey]) {\n        return;\n      }\n      didWarn[warnKey] = true;\n\n      var tagDisplayName = childTag;\n      var whitespaceInfo = '';\n      if (childTag === '#text') {\n        if (/\\S/.test(childText)) {\n          tagDisplayName = 'Text nodes';\n        } else {\n          tagDisplayName = 'Whitespace text nodes';\n          whitespaceInfo = \" Make sure you don't have any extra whitespace between tags on \" + 'each line of your source code.';\n        }\n      } else {\n        tagDisplayName = '<' + childTag + '>';\n      }\n\n      if (invalidParent) {\n        var info = '';\n        if (ancestorTag === 'table' && childTag === 'tr') {\n          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\n        }\n        \"production\" !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;\n      } else {\n        \"production\" !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;\n      }\n    }\n  };\n\n  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;\n\n  // For testing\n  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.current;\n    var parentTag = parentInfo && parentInfo.tag;\n    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);\n  };\n}\n\nmodule.exports = validateDOMNesting;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactBaseClasses = require('./ReactBaseClasses');\nvar ReactChildren = require('./ReactChildren');\nvar ReactDOMFactories = require('./ReactDOMFactories');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactVersion = require('./ReactVersion');\n\nvar createReactClass = require('./createClass');\nvar onlyChild = require('./onlyChild');\n\nvar createElement = ReactElement.createElement;\nvar createFactory = ReactElement.createFactory;\nvar cloneElement = ReactElement.cloneElement;\n\nif (\"production\" !== 'production') {\n  var lowPriorityWarning = require('./lowPriorityWarning');\n  var canDefineProperty = require('./canDefineProperty');\n  var ReactElementValidator = require('./ReactElementValidator');\n  var didWarnPropTypesDeprecated = false;\n  createElement = ReactElementValidator.createElement;\n  createFactory = ReactElementValidator.createFactory;\n  cloneElement = ReactElementValidator.cloneElement;\n}\n\nvar __spread = _assign;\nvar createMixin = function (mixin) {\n  return mixin;\n};\n\nif (\"production\" !== 'production') {\n  var warnedForSpread = false;\n  var warnedForCreateMixin = false;\n  __spread = function () {\n    lowPriorityWarning(warnedForSpread, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.');\n    warnedForSpread = true;\n    return _assign.apply(null, arguments);\n  };\n\n  createMixin = function (mixin) {\n    lowPriorityWarning(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. ' + 'In React v16.0, it will be removed. ' + 'You can use this mixin directly instead. ' + 'See https://fb.me/createmixin-was-never-implemented for more info.');\n    warnedForCreateMixin = true;\n    return mixin;\n  };\n}\n\nvar React = {\n  // Modern\n\n  Children: {\n    map: ReactChildren.map,\n    forEach: ReactChildren.forEach,\n    count: ReactChildren.count,\n    toArray: ReactChildren.toArray,\n    only: onlyChild\n  },\n\n  Component: ReactBaseClasses.Component,\n  PureComponent: ReactBaseClasses.PureComponent,\n\n  createElement: createElement,\n  cloneElement: cloneElement,\n  isValidElement: ReactElement.isValidElement,\n\n  // Classic\n\n  PropTypes: ReactPropTypes,\n  createClass: createReactClass,\n  createFactory: createFactory,\n  createMixin: createMixin,\n\n  // This looks DOM specific but these are actually isomorphic helpers\n  // since they are just generating DOM strings.\n  DOM: ReactDOMFactories,\n\n  version: ReactVersion,\n\n  // Deprecated hook for JSX spread, don't use this for anything.\n  __spread: __spread\n};\n\nif (\"production\" !== 'production') {\n  var warnedForCreateClass = false;\n  if (canDefineProperty) {\n    Object.defineProperty(React, 'PropTypes', {\n      get: function () {\n        lowPriorityWarning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated,' + ' and will be removed in  React v16.0.' + ' Use the latest available v15.* prop-types package from npm instead.' + ' For info on usage, compatibility, migration and more, see ' + 'https://fb.me/prop-types-docs');\n        didWarnPropTypesDeprecated = true;\n        return ReactPropTypes;\n      }\n    });\n\n    Object.defineProperty(React, 'createClass', {\n      get: function () {\n        lowPriorityWarning(warnedForCreateClass, 'Accessing createClass via the main React package is deprecated,' + ' and will be removed in React v16.0.' + \" Use a plain JavaScript class instead. If you're not yet \" + 'ready to migrate, create-react-class v15.* is available ' + 'on npm as a temporary, drop-in replacement. ' + 'For more info see https://fb.me/react-create-class');\n        warnedForCreateClass = true;\n        return createReactClass;\n      }\n    });\n  }\n\n  // React.DOM factories are deprecated. Wrap these methods so that\n  // invocations of the React.DOM namespace and alert users to switch\n  // to the `react-dom-factories` package.\n  React.DOM = {};\n  var warnedForFactories = false;\n  Object.keys(ReactDOMFactories).forEach(function (factory) {\n    React.DOM[factory] = function () {\n      if (!warnedForFactories) {\n        lowPriorityWarning(false, 'Accessing factories like React.DOM.%s has been deprecated ' + 'and will be removed in v16.0+. Use the ' + 'react-dom-factories package instead. ' + ' Version 1.0 provides a drop-in replacement.' + ' For more info, see https://fb.me/react-dom-factories', factory);\n        warnedForFactories = true;\n      }\n      return ReactDOMFactories[factory].apply(ReactDOMFactories, arguments);\n    };\n  });\n}\n\nmodule.exports = React;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar canDefineProperty = require('./canDefineProperty');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar lowPriorityWarning = require('./lowPriorityWarning');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nReactComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? \"production\" !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n  this.updater.enqueueSetState(this, partialState);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'setState');\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (\"production\" !== 'production') {\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    if (canDefineProperty) {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function () {\n          lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n          return undefined;\n        }\n      });\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactPureComponent(props, context, updater) {\n  // Duplicated from ReactComponent.\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = ReactComponent.prototype;\nReactPureComponent.prototype = new ComponentDummy();\nReactPureComponent.prototype.constructor = ReactPureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(ReactPureComponent.prototype, ReactComponent.prototype);\nReactPureComponent.prototype.isPureReactComponent = true;\n\nmodule.exports = {\n  Component: ReactComponent,\n  PureComponent: ReactPureComponent\n};","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\nvar ReactElement = require('./ReactElement');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar traverseAllChildren = require('./traverseAllChildren');\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.func = forEachFunction;\n  this.context = forEachContext;\n  this.count = 0;\n}\nForEachBookKeeping.prototype.destructor = function () {\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n  this.result = mapResult;\n  this.keyPrefix = keyPrefix;\n  this.func = mapFunction;\n  this.context = mapContext;\n  this.count = 0;\n}\nMapBookKeeping.prototype.destructor = function () {\n  this.result = null;\n  this.keyPrefix = null;\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n  } else if (mappedChild != null) {\n    if (ReactElement.isValidElement(mappedChild)) {\n      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n  return result;\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n  count: countChildren,\n  toArray: toArray\n};\n\nmodule.exports = ReactChildren;","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction isNative(fn) {\n  // Based on isNative() from Lodash\n  var funcToString = Function.prototype.toString;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var reIsNative = RegExp('^' + funcToString\n  // Take an example native function source for comparison\n  .call(hasOwnProperty\n  // Strip regex characters so we can use it for regex\n  ).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&'\n  // Remove hasOwnProperty from the template to make it generic\n  ).replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n  try {\n    var source = funcToString.call(fn);\n    return reIsNative.test(source);\n  } catch (err) {\n    return false;\n  }\n}\n\nvar canUseCollections =\n// Array.from\ntypeof Array.from === 'function' &&\n// Map\ntypeof Map === 'function' && isNative(Map) &&\n// Map.prototype.keys\nMap.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&\n// Set\ntypeof Set === 'function' && isNative(Set) &&\n// Set.prototype.keys\nSet.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);\n\nvar setItem;\nvar getItem;\nvar removeItem;\nvar getItemIDs;\nvar addRoot;\nvar removeRoot;\nvar getRootIDs;\n\nif (canUseCollections) {\n  var itemMap = new Map();\n  var rootIDSet = new Set();\n\n  setItem = function (id, item) {\n    itemMap.set(id, item);\n  };\n  getItem = function (id) {\n    return itemMap.get(id);\n  };\n  removeItem = function (id) {\n    itemMap['delete'](id);\n  };\n  getItemIDs = function () {\n    return Array.from(itemMap.keys());\n  };\n\n  addRoot = function (id) {\n    rootIDSet.add(id);\n  };\n  removeRoot = function (id) {\n    rootIDSet['delete'](id);\n  };\n  getRootIDs = function () {\n    return Array.from(rootIDSet.keys());\n  };\n} else {\n  var itemByKey = {};\n  var rootByKey = {};\n\n  // Use non-numeric keys to prevent V8 performance issues:\n  // https://github.com/facebook/react/pull/7232\n  var getKeyFromID = function (id) {\n    return '.' + id;\n  };\n  var getIDFromKey = function (key) {\n    return parseInt(key.substr(1), 10);\n  };\n\n  setItem = function (id, item) {\n    var key = getKeyFromID(id);\n    itemByKey[key] = item;\n  };\n  getItem = function (id) {\n    var key = getKeyFromID(id);\n    return itemByKey[key];\n  };\n  removeItem = function (id) {\n    var key = getKeyFromID(id);\n    delete itemByKey[key];\n  };\n  getItemIDs = function () {\n    return Object.keys(itemByKey).map(getIDFromKey);\n  };\n\n  addRoot = function (id) {\n    var key = getKeyFromID(id);\n    rootByKey[key] = true;\n  };\n  removeRoot = function (id) {\n    var key = getKeyFromID(id);\n    delete rootByKey[key];\n  };\n  getRootIDs = function () {\n    return Object.keys(rootByKey).map(getIDFromKey);\n  };\n}\n\nvar unmountedIDs = [];\n\nfunction purgeDeep(id) {\n  var item = getItem(id);\n  if (item) {\n    var childIDs = item.childIDs;\n\n    removeItem(id);\n    childIDs.forEach(purgeDeep);\n  }\n}\n\nfunction describeComponentFrame(name, source, ownerName) {\n  return '\\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n}\n\nfunction getDisplayName(element) {\n  if (element == null) {\n    return '#empty';\n  } else if (typeof element === 'string' || typeof element === 'number') {\n    return '#text';\n  } else if (typeof element.type === 'string') {\n    return element.type;\n  } else {\n    return element.type.displayName || element.type.name || 'Unknown';\n  }\n}\n\nfunction describeID(id) {\n  var name = ReactComponentTreeHook.getDisplayName(id);\n  var element = ReactComponentTreeHook.getElement(id);\n  var ownerID = ReactComponentTreeHook.getOwnerID(id);\n  var ownerName;\n  if (ownerID) {\n    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);\n  }\n  \"production\" !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;\n  return describeComponentFrame(name, element && element._source, ownerName);\n}\n\nvar ReactComponentTreeHook = {\n  onSetChildren: function (id, nextChildIDs) {\n    var item = getItem(id);\n    !item ? \"production\" !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n    item.childIDs = nextChildIDs;\n\n    for (var i = 0; i < nextChildIDs.length; i++) {\n      var nextChildID = nextChildIDs[i];\n      var nextChild = getItem(nextChildID);\n      !nextChild ? \"production\" !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;\n      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? \"production\" !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;\n      !nextChild.isMounted ? \"production\" !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;\n      if (nextChild.parentID == null) {\n        nextChild.parentID = id;\n        // TODO: This shouldn't be necessary but mounting a new root during in\n        // componentWillMount currently causes not-yet-mounted components to\n        // be purged from our tree data so their parent id is missing.\n      }\n      !(nextChild.parentID === id) ? \"production\" !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;\n    }\n  },\n  onBeforeMountComponent: function (id, element, parentID) {\n    var item = {\n      element: element,\n      parentID: parentID,\n      text: null,\n      childIDs: [],\n      isMounted: false,\n      updateCount: 0\n    };\n    setItem(id, item);\n  },\n  onBeforeUpdateComponent: function (id, element) {\n    var item = getItem(id);\n    if (!item || !item.isMounted) {\n      // We may end up here as a result of setState() in componentWillUnmount().\n      // In this case, ignore the element.\n      return;\n    }\n    item.element = element;\n  },\n  onMountComponent: function (id) {\n    var item = getItem(id);\n    !item ? \"production\" !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n    item.isMounted = true;\n    var isRoot = item.parentID === 0;\n    if (isRoot) {\n      addRoot(id);\n    }\n  },\n  onUpdateComponent: function (id) {\n    var item = getItem(id);\n    if (!item || !item.isMounted) {\n      // We may end up here as a result of setState() in componentWillUnmount().\n      // In this case, ignore the element.\n      return;\n    }\n    item.updateCount++;\n  },\n  onUnmountComponent: function (id) {\n    var item = getItem(id);\n    if (item) {\n      // We need to check if it exists.\n      // `item` might not exist if it is inside an error boundary, and a sibling\n      // error boundary child threw while mounting. Then this instance never\n      // got a chance to mount, but it still gets an unmounting event during\n      // the error boundary cleanup.\n      item.isMounted = false;\n      var isRoot = item.parentID === 0;\n      if (isRoot) {\n        removeRoot(id);\n      }\n    }\n    unmountedIDs.push(id);\n  },\n  purgeUnmountedComponents: function () {\n    if (ReactComponentTreeHook._preventPurging) {\n      // Should only be used for testing.\n      return;\n    }\n\n    for (var i = 0; i < unmountedIDs.length; i++) {\n      var id = unmountedIDs[i];\n      purgeDeep(id);\n    }\n    unmountedIDs.length = 0;\n  },\n  isMounted: function (id) {\n    var item = getItem(id);\n    return item ? item.isMounted : false;\n  },\n  getCurrentStackAddendum: function (topElement) {\n    var info = '';\n    if (topElement) {\n      var name = getDisplayName(topElement);\n      var owner = topElement._owner;\n      info += describeComponentFrame(name, topElement._source, owner && owner.getName());\n    }\n\n    var currentOwner = ReactCurrentOwner.current;\n    var id = currentOwner && currentOwner._debugID;\n\n    info += ReactComponentTreeHook.getStackAddendumByID(id);\n    return info;\n  },\n  getStackAddendumByID: function (id) {\n    var info = '';\n    while (id) {\n      info += describeID(id);\n      id = ReactComponentTreeHook.getParentID(id);\n    }\n    return info;\n  },\n  getChildIDs: function (id) {\n    var item = getItem(id);\n    return item ? item.childIDs : [];\n  },\n  getDisplayName: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (!element) {\n      return null;\n    }\n    return getDisplayName(element);\n  },\n  getElement: function (id) {\n    var item = getItem(id);\n    return item ? item.element : null;\n  },\n  getOwnerID: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (!element || !element._owner) {\n      return null;\n    }\n    return element._owner._debugID;\n  },\n  getParentID: function (id) {\n    var item = getItem(id);\n    return item ? item.parentID : null;\n  },\n  getSource: function (id) {\n    var item = getItem(id);\n    var element = item ? item.element : null;\n    var source = element != null ? element._source : null;\n    return source;\n  },\n  getText: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (typeof element === 'string') {\n      return element;\n    } else if (typeof element === 'number') {\n      return '' + element;\n    } else {\n      return null;\n    }\n  },\n  getUpdateCount: function (id) {\n    var item = getItem(id);\n    return item ? item.updateCount : 0;\n  },\n\n\n  getRootIDs: getRootIDs,\n  getRegisteredIDs: getItemIDs,\n\n  pushNonStandardWarningStack: function (isCreatingElement, currentSource) {\n    if (typeof console.reactStack !== 'function') {\n      return;\n    }\n\n    var stack = [];\n    var currentOwner = ReactCurrentOwner.current;\n    var id = currentOwner && currentOwner._debugID;\n\n    try {\n      if (isCreatingElement) {\n        stack.push({\n          name: id ? ReactComponentTreeHook.getDisplayName(id) : null,\n          fileName: currentSource ? currentSource.fileName : null,\n          lineNumber: currentSource ? currentSource.lineNumber : null\n        });\n      }\n\n      while (id) {\n        var element = ReactComponentTreeHook.getElement(id);\n        var parentID = ReactComponentTreeHook.getParentID(id);\n        var ownerID = ReactComponentTreeHook.getOwnerID(id);\n        var ownerName = ownerID ? ReactComponentTreeHook.getDisplayName(ownerID) : null;\n        var source = element && element._source;\n        stack.push({\n          name: ownerName,\n          fileName: source ? source.fileName : null,\n          lineNumber: source ? source.lineNumber : null\n        });\n        id = parentID;\n      }\n    } catch (err) {\n      // Internal state is messed up.\n      // Stop building the stack (it's just a nice to have).\n    }\n\n    console.reactStack(stack);\n  },\n  popNonStandardWarningStack: function () {\n    if (typeof console.reactStackEnd !== 'function') {\n      return;\n    }\n    console.reactStackEnd();\n  }\n};\n\nmodule.exports = ReactComponentTreeHook;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nmodule.exports = ReactCurrentOwner;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\n\n/**\n * Create a factory that creates HTML tag elements.\n *\n * @private\n */\nvar createDOMFactory = ReactElement.createFactory;\nif (\"production\" !== 'production') {\n  var ReactElementValidator = require('./ReactElementValidator');\n  createDOMFactory = ReactElementValidator.createFactory;\n}\n\n/**\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n *\n * @public\n */\nvar ReactDOMFactories = {\n  a: createDOMFactory('a'),\n  abbr: createDOMFactory('abbr'),\n  address: createDOMFactory('address'),\n  area: createDOMFactory('area'),\n  article: createDOMFactory('article'),\n  aside: createDOMFactory('aside'),\n  audio: createDOMFactory('audio'),\n  b: createDOMFactory('b'),\n  base: createDOMFactory('base'),\n  bdi: createDOMFactory('bdi'),\n  bdo: createDOMFactory('bdo'),\n  big: createDOMFactory('big'),\n  blockquote: createDOMFactory('blockquote'),\n  body: createDOMFactory('body'),\n  br: createDOMFactory('br'),\n  button: createDOMFactory('button'),\n  canvas: createDOMFactory('canvas'),\n  caption: createDOMFactory('caption'),\n  cite: createDOMFactory('cite'),\n  code: createDOMFactory('code'),\n  col: createDOMFactory('col'),\n  colgroup: createDOMFactory('colgroup'),\n  data: createDOMFactory('data'),\n  datalist: createDOMFactory('datalist'),\n  dd: createDOMFactory('dd'),\n  del: createDOMFactory('del'),\n  details: createDOMFactory('details'),\n  dfn: createDOMFactory('dfn'),\n  dialog: createDOMFactory('dialog'),\n  div: createDOMFactory('div'),\n  dl: createDOMFactory('dl'),\n  dt: createDOMFactory('dt'),\n  em: createDOMFactory('em'),\n  embed: createDOMFactory('embed'),\n  fieldset: createDOMFactory('fieldset'),\n  figcaption: createDOMFactory('figcaption'),\n  figure: createDOMFactory('figure'),\n  footer: createDOMFactory('footer'),\n  form: createDOMFactory('form'),\n  h1: createDOMFactory('h1'),\n  h2: createDOMFactory('h2'),\n  h3: createDOMFactory('h3'),\n  h4: createDOMFactory('h4'),\n  h5: createDOMFactory('h5'),\n  h6: createDOMFactory('h6'),\n  head: createDOMFactory('head'),\n  header: createDOMFactory('header'),\n  hgroup: createDOMFactory('hgroup'),\n  hr: createDOMFactory('hr'),\n  html: createDOMFactory('html'),\n  i: createDOMFactory('i'),\n  iframe: createDOMFactory('iframe'),\n  img: createDOMFactory('img'),\n  input: createDOMFactory('input'),\n  ins: createDOMFactory('ins'),\n  kbd: createDOMFactory('kbd'),\n  keygen: createDOMFactory('keygen'),\n  label: createDOMFactory('label'),\n  legend: createDOMFactory('legend'),\n  li: createDOMFactory('li'),\n  link: createDOMFactory('link'),\n  main: createDOMFactory('main'),\n  map: createDOMFactory('map'),\n  mark: createDOMFactory('mark'),\n  menu: createDOMFactory('menu'),\n  menuitem: createDOMFactory('menuitem'),\n  meta: createDOMFactory('meta'),\n  meter: createDOMFactory('meter'),\n  nav: createDOMFactory('nav'),\n  noscript: createDOMFactory('noscript'),\n  object: createDOMFactory('object'),\n  ol: createDOMFactory('ol'),\n  optgroup: createDOMFactory('optgroup'),\n  option: createDOMFactory('option'),\n  output: createDOMFactory('output'),\n  p: createDOMFactory('p'),\n  param: createDOMFactory('param'),\n  picture: createDOMFactory('picture'),\n  pre: createDOMFactory('pre'),\n  progress: createDOMFactory('progress'),\n  q: createDOMFactory('q'),\n  rp: createDOMFactory('rp'),\n  rt: createDOMFactory('rt'),\n  ruby: createDOMFactory('ruby'),\n  s: createDOMFactory('s'),\n  samp: createDOMFactory('samp'),\n  script: createDOMFactory('script'),\n  section: createDOMFactory('section'),\n  select: createDOMFactory('select'),\n  small: createDOMFactory('small'),\n  source: createDOMFactory('source'),\n  span: createDOMFactory('span'),\n  strong: createDOMFactory('strong'),\n  style: createDOMFactory('style'),\n  sub: createDOMFactory('sub'),\n  summary: createDOMFactory('summary'),\n  sup: createDOMFactory('sup'),\n  table: createDOMFactory('table'),\n  tbody: createDOMFactory('tbody'),\n  td: createDOMFactory('td'),\n  textarea: createDOMFactory('textarea'),\n  tfoot: createDOMFactory('tfoot'),\n  th: createDOMFactory('th'),\n  thead: createDOMFactory('thead'),\n  time: createDOMFactory('time'),\n  title: createDOMFactory('title'),\n  tr: createDOMFactory('tr'),\n  track: createDOMFactory('track'),\n  u: createDOMFactory('u'),\n  ul: createDOMFactory('ul'),\n  'var': createDOMFactory('var'),\n  video: createDOMFactory('video'),\n  wbr: createDOMFactory('wbr'),\n\n  // SVG\n  circle: createDOMFactory('circle'),\n  clipPath: createDOMFactory('clipPath'),\n  defs: createDOMFactory('defs'),\n  ellipse: createDOMFactory('ellipse'),\n  g: createDOMFactory('g'),\n  image: createDOMFactory('image'),\n  line: createDOMFactory('line'),\n  linearGradient: createDOMFactory('linearGradient'),\n  mask: createDOMFactory('mask'),\n  path: createDOMFactory('path'),\n  pattern: createDOMFactory('pattern'),\n  polygon: createDOMFactory('polygon'),\n  polyline: createDOMFactory('polyline'),\n  radialGradient: createDOMFactory('radialGradient'),\n  rect: createDOMFactory('rect'),\n  stop: createDOMFactory('stop'),\n  svg: createDOMFactory('svg'),\n  text: createDOMFactory('text'),\n  tspan: createDOMFactory('tspan')\n};\n\nmodule.exports = ReactDOMFactories;","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar warning = require('fbjs/lib/warning');\nvar canDefineProperty = require('./canDefineProperty');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown, specialPropRefWarningShown;\n\nfunction hasValidRef(config) {\n  if (\"production\" !== 'production') {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (\"production\" !== 'production') {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      \"production\" !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      \"production\" !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  if (\"production\" !== 'production') {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    if (canDefineProperty) {\n      Object.defineProperty(element._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: false\n      });\n      // self and source are DEV only properties.\n      Object.defineProperty(element, '_self', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: self\n      });\n      // Two elements created in two different places should be considered\n      // equal for testing purposes and therefore we hide it from enumeration.\n      Object.defineProperty(element, '_source', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: source\n      });\n    } else {\n      element._store.validated = false;\n      element._self = self;\n      element._source = source;\n    }\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement\n */\nReactElement.createElement = function (type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    if (\"production\" !== 'production') {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (\"production\" !== 'production') {\n    if (key || ref) {\n      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n        if (key) {\n          defineKeyPropWarningGetter(props, displayName);\n        }\n        if (ref) {\n          defineRefPropWarningGetter(props, displayName);\n        }\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n};\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory\n */\nReactElement.createFactory = function (type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n};\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement\n */\nReactElement.cloneElement = function (element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n};\n\n/**\n * Verifies the object is a ReactElement.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function (object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n};\n\nmodule.exports = ReactElement;","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactComponentTreeHook = require('./ReactComponentTreeHook');\nvar ReactElement = require('./ReactElement');\n\nvar checkReactTypeSpec = require('./checkReactTypeSpec');\n\nvar canDefineProperty = require('./canDefineProperty');\nvar getIteratorFn = require('./getIteratorFn');\nvar warning = require('fbjs/lib/warning');\nvar lowPriorityWarning = require('./lowPriorityWarning');\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = ReactCurrentOwner.current.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(elementProps) {\n  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {\n    var source = elementProps.__source;\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return ' Check your code at ' + fileName + ':' + lineNumber + '.';\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n    if (parentName) {\n      info = ' Check the top-level render call using <' + parentName + '>.';\n    }\n  }\n  return info;\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});\n\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n  if (memoizer[currentComponentErrorInfo]) {\n    return;\n  }\n  memoizer[currentComponentErrorInfo] = true;\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwner = '';\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';\n  }\n\n  \"production\" !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    // Entry iterators provide implicit keys.\n    if (iteratorFn) {\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (ReactElement.isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  var componentClass = element.type;\n  if (typeof componentClass !== 'function') {\n    return;\n  }\n  var name = componentClass.displayName || componentClass.name;\n  if (componentClass.propTypes) {\n    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    \"production\" !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;\n  }\n}\n\nvar ReactElementValidator = {\n  createElement: function (type, props, children) {\n    var validType = typeof type === 'string' || typeof type === 'function';\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    if (!validType) {\n      if (typeof type !== 'function' && typeof type !== 'string') {\n        var info = '';\n        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n          info += ' You likely forgot to export your component from the file ' + \"it's defined in.\";\n        }\n\n        var sourceInfo = getSourceInfoErrorAddendum(props);\n        if (sourceInfo) {\n          info += sourceInfo;\n        } else {\n          info += getDeclarationErrorAddendum();\n        }\n\n        info += ReactComponentTreeHook.getCurrentStackAddendum();\n\n        var currentSource = props !== null && props !== undefined && props.__source !== undefined ? props.__source : null;\n        ReactComponentTreeHook.pushNonStandardWarningStack(true, currentSource);\n        \"production\" !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;\n        ReactComponentTreeHook.popNonStandardWarningStack();\n      }\n    }\n\n    var element = ReactElement.createElement.apply(this, arguments);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n\n    // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n    if (validType) {\n      for (var i = 2; i < arguments.length; i++) {\n        validateChildKeys(arguments[i], type);\n      }\n    }\n\n    validatePropTypes(element);\n\n    return element;\n  },\n\n  createFactory: function (type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(null, type);\n    // Legacy hook TODO: Warn if this is accessed\n    validatedFactory.type = type;\n\n    if (\"production\" !== 'production') {\n      if (canDefineProperty) {\n        Object.defineProperty(validatedFactory, 'type', {\n          enumerable: false,\n          get: function () {\n            lowPriorityWarning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n            Object.defineProperty(this, 'type', {\n              value: type\n            });\n            return type;\n          }\n        });\n      }\n    }\n\n    return validatedFactory;\n  },\n\n  cloneElement: function (element, props, children) {\n    var newElement = ReactElement.cloneElement.apply(this, arguments);\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], newElement.type);\n    }\n    validatePropTypes(newElement);\n    return newElement;\n  }\n};\n\nmodule.exports = ReactElementValidator;","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar warning = require('fbjs/lib/warning');\n\nfunction warnNoop(publicInstance, callerName) {\n  if (\"production\" !== 'production') {\n    var constructor = publicInstance.constructor;\n    \"production\" !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback) {},\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nmodule.exports = ReactNoopUpdateQueue;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _require = require('./ReactElement'),\n    isValidElement = _require.isValidElement;\n\nvar factory = require('prop-types/factory');\n\nmodule.exports = factory(isValidElement);","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar canDefineProperty = false;\nif (\"production\" !== 'production') {\n  try {\n    // $FlowFixMe https://github.com/facebook/flow/issues/285\n    Object.defineProperty({}, 'x', { get: function () {} });\n    canDefineProperty = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\nmodule.exports = canDefineProperty;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && \"production\" === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('./ReactComponentTreeHook');\n}\n\nvar loggedTypeFailures = {};\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?object} element The React element that is being type-checked\n * @param {?number} debugID The React component instance that is being type-checked\n * @private\n */\nfunction checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {\n  for (var typeSpecName in typeSpecs) {\n    if (typeSpecs.hasOwnProperty(typeSpecName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        !(typeof typeSpecs[typeSpecName] === 'function') ? \"production\" !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;\n        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n      } catch (ex) {\n        error = ex;\n      }\n      \"production\" !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var componentStackInfo = '';\n\n        if (\"production\" !== 'production') {\n          if (!ReactComponentTreeHook) {\n            ReactComponentTreeHook = require('./ReactComponentTreeHook');\n          }\n          if (debugID !== null) {\n            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);\n          } else if (element !== null) {\n            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);\n          }\n        }\n\n        \"production\" !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;\n      }\n    }\n  }\n}\n\nmodule.exports = checkReactTypeSpec;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _require = require('./ReactBaseClasses'),\n    Component = _require.Component;\n\nvar _require2 = require('./ReactElement'),\n    isValidElement = _require2.isValidElement;\n\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\nvar factory = require('create-react-class/factory');\n\nmodule.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar nextDebugID = 1;\n\nfunction getNextDebugID() {\n  return nextDebugID++;\n}\n\nmodule.exports = getNextDebugID;","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\nif (\"production\" !== 'production') {\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = lowPriorityWarning;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactElement = require('./ReactElement');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !ReactElement.isValidElement(children) ? \"production\" !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n  return children;\n}\n\nmodule.exports = onlyChild;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * This is inlined from ReactElement since this file is shared between\n * isomorphic and renderers. We could extract this to a\n *\n */\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' ||\n  // The following is inlined from ReactElement. This means we can optimize\n  // some checks. React Fiber also inlines this logic for similar purposes.\n  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (\"production\" !== 'production') {\n          var mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n            }\n          }\n          \"production\" !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (\"production\" !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = \" It looks like you're using an element created by a different \" + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? \"production\" !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;","'use strict';\n\nmodule.exports = require('./lib/ReactDOM');\n","'use strict';\n\nmodule.exports = require('./lib/React');\n"]}